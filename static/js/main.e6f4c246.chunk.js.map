{"version":3,"sources":["utils/supabaseClient.js","utils/setupSupabaseTablesExtended.js","contexts/AuthContext.jsx","utils/menuHandlers.js","components/Navbar.jsx","components/Footer.jsx","components/DashboardLayout.jsx","pages/Login.jsx","pages/Register.jsx","components/Spinner.jsx","components/EmergencyQRCode.jsx","pages/Dashboard.jsx","pages/HealthOverview.jsx","pages/MedicalHistoryPage.jsx","utils/main.js","pages/ChronicDiseaseManagementPage.jsx","pages/VaccinationHistoryPage.jsx","pages/MedicationTracker.jsx","pages/HealthAnalyticsPage.jsx","pages/UpcomingAppointmentsPage.jsx","pages/AppointmentHistoryPage.jsx","pages/TelehealthConsultationsPage.jsx","pages/AppointmentRemindersPage.jsx","pages/HelpCenterPage.jsx","pages/ContactSupportPage.jsx","pages/LiveChat.jsx","pages/ProfilePage.jsx","pages/SecuritySettings.jsx","pages/DataBackup.jsx","components/SetupDatabase.jsx","pages/DatabaseSetup.jsx","components/HealthMetricsVisualizer.jsx","components/MedicalImageAnalyzer.jsx","components/HealthAssistant.jsx","components/AIInsightsDashboard.jsx","pages/ai/HealthMetricsAI.jsx","utils/openai.js","pages/ai/MedicalImageAnalysis.jsx","pages/ai/HealthRecommendations.jsx","App.js","serviceWorker.js","reportWebVitals.js","index.js"],"names":["supabase","createClient","process","require","module","exports","createExecuteSqlFunction","async","createFunctionSQL","error","rpc","sql","console","warn","message","insertSampleData","log","diseases","name","category","description","from","upsert","createStorageBuckets","enableStorageSQL","buckets","bucket","storage","createBucket","public","includes","createPoliciesSQL","AuthContext","createContext","useAuth","useContext","AuthProvider","_ref","children","user","setUser","useState","loading","setLoading","useEffect","auth","getSession","then","_ref2","_session$user","data","session","subscription","onAuthStateChange","_event","_session$user2","unsubscribe","value","signUp","signIn","signInWithPassword","signOut","React","createElement","Provider","closeAllMenus","menuItems","document","querySelectorAll","overlay","querySelector","forEach","item","classList","remove","subMenu","body","style","overflow","addEventListener","healthOverview","getElementById","window","location","href","Navbar","navigate","useNavigate","isAdmin","setIsAdmin","userProfile","setUserProfile","e","preventDefault","toggle","contains","setupMenuListeners","checkUserRole","fetchUserProfile","_user$user_metadata","getUser","user_metadata","role","select","eq","id","single","handleMenuClick","currentTarget","handleLogout","className","Link","to","src","alt","data-link","onClick","profile_picture","first_name","last_name","Footer","Date","getFullYear","DashboardLayout","Login","showSignup","setShowSignup","notification","setNotification","loginEmail","setLoginEmail","loginPassword","setLoginPassword","firstName","setFirstName","lastName","setLastName","signupEmail","setSignupEmail","signupPassword","setSignupPassword","confirmPassword","setConfirmPassword","showNotification","type","arguments","length","undefined","setTimeout","width","height","onSubmit","email","password","options","profileError","insert","created_at","toISOString","updated_at","required","placeholder","onChange","target","autoComplete","Register","formData","setFormData","setError","handleChange","oldProfileError","full_name","FaUser","FaEnvelope","FaLock","FaUserMd","disabled","Spinner","viewBox","points","fill","strokeWidth","strokeLinecap","strokeLinejoin","EmergencyQRCode","size","showDownloadButton","showHeader","showOptions","showCard","profile","setProfile","qrData","setQrData","includeAllergies","setIncludeAllergies","includeDiseases","setIncludeDiseases","includeContacts","setIncludeContacts","includeMedications","setIncludeMedications","fetchProfileData","generateQRData","profileData","code","allergiesData","allergiesError","diseasesData","diseasesError","medicationsData","medicationsError","allergies","medications","emergencyData","dob","date_of_birth","bloodType","blood_group","weight","map","a","allergy_name","conditions","d","disease_name","emergency_contact_name","emergencyContact","phone","emergency_contact_phone","relationship","emergency_contact_relationship","m","dosage","daily_dose","qrString","JSON","stringify","handleProfileRedirect","animation","qrCodeContent","Fragment","display","justifyContent","alignItems","margin","QRCodeCanvas","level","includeMargin","FaQrcode","Button","variant","downloadQRCode","canvas","pngUrl","toDataURL","downloadLink","download","appendChild","click","removeChild","FaDownload","Card","Header","FaEdit","Body","Form","Check","label","checked","Alert","Dashboard","_healthData$profile","healthData","setHealthData","vitals","appointments","alerts","userError","newProfile","createError","prev","fetchData","mainFeatureCards","title","icon","link","color","slice","card","index","key","HealthOverview","userId","setUserId","showModal","setShowModal","newReport","setNewReport","disease_id","since","file","preview","setPreview","notificationTimeout","setNotificationTimeout","userDiseases","setUserDiseases","extractedParameters","setExtractedParameters","showDeleteModal","setShowDeleteModal","reportToDelete","setReportToDelete","useCallback","duration","clearTimeout","timeout","fetchUserDiseases","uid","fetchHealthData","err","fetchUser","Container","top","right","zIndex","minWidth","maxWidth","boxShadow","aria-label","Row","report","_report$user_diseases","Col","md","sm","Title","user_diseases","Text","toLocaleDateString","handleDeleteReport","reportId","open","document_url","Modal","show","onHide","centered","closeButton","_extractedParameters$","_extractedParameters$2","_extractedParameters$3","_extractedParameters$4","_extractedParameters$5","_extractedParameters$6","Error","fileExt","split","pop","fileName","now","uploadData","uploadError","upload","publicUrl","getPublicUrl","reportData","user_id","ai_summary","aiAnalysis","summary","String","substring","insertedReport","reportError","parameters","Object","keys","parameterData","entries","record_id","parameter_name","parameter_value","paramError","conditionData","filter","condition","trim","condition_name","condError","medicationData","medication","medication_name","medError","recommendations","recError","recommendation_text","Group","Label","Select","disease","Control","accept","files","_result$aiAnalysis5","_result$aiAnalysis5$s","_result$aiAnalysis6","_result$aiAnalysis6$c","_result$aiAnalysis7","_result$aiAnalysis7$m","_result$aiAnalysis8","_result$aiAnalysis8$r","startsWith","FormData","append","debugResponse","fetch","ok","debugData","json","environment","OPENAI_API_KEY","text","debugError","response","method","errorData","errorMessage","details","result","_result$aiAnalysis","_result$aiAnalysis2","_result$aiAnalysis3","_result$aiAnalysis4","hasParameters","Boolean","parametersType","parametersKeys","parametersValues","values","v","hasAiAnalysis","aiAnalysisType","aiAnalysisKeys","conditionsType","isConditionsArray","Array","isArray","medicationsType","isMedicationsArray","parse","jsonError","parametersCount","summaryLength","conditionsLength","medicationsLength","recommendationsLength","htmlFor","minHeight","cursor","aria-hidden","fetchError","pathMatch","match","userFolder","storagePath","storageError","deleteError","delete","prevData","MedicalHistoryPage","medicalRecords","setMedicalRecords","isEditing","setIsEditing","currentRecord","setCurrentRecord","diagnosis_date","doctor","treatment","notes","fetchMedicalRecords","order","ascending","resetForm","FaHistory","update","rows","FaPlus","record","scrollTo","behavior","handleEdit","confirm","handleDelete","FaTrash","ChronicDiseaseManagementPage","chronicDiseases","setChronicDiseases","currentDisease","setCurrentDisease","severity","symptoms","fetchChronicDiseases","getSeverityBadgeClass","FaDiagnoses","med","symptom","VaccinationHistoryPage","vaccinations","setVaccinations","activeTab","setActiveTab","currentVaccination","setCurrentVaccination","vaccine_name","date_administered","administered_by","lot_number","next_dose_date","showAddModal","setShowAddModal","fetchVaccinations","handleSubmit","vaccination","isDueSoon","nextDoseDate","today","diffTime","diffDays","Math","ceil","isOverdue","hasUpcomingVaccines","some","vax","FaSyringe","FaListAlt","fontSize","FaCalendarCheck","FaCalendarAlt","status","getStatusInfo","FaInfoCircle","FaStickyNote","FaShieldVirus","FaHospital","FaClock","MedicationTracker","setMedications","newMedication","setNewMedication","total_tablets","dose_per_intake","times_per_day","frequency","selected_days","reminder_time","history","setHistory","showHistory","setShowHistory","activeMedication","setActiveMedication","hasLowStock","setHasLowStock","fetchMedications","checkLowStock","remaining_tablets","handleAddMedication","parseInt","fetchHistory","medicationId","limit","FaPills","renderMedicationsList","lowStockMeds","FaExclamationTriangle","join","remaining","updateError","last_taken_at","historyError","medication_id","taken_at","handleTakeDose","FaCheck","handleMissDose","FaTimes","showMedicationHistory","FaBell","day","newDays","handleDaySelection","toLocaleTimeString","charAt","toUpperCase","colSpan","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","Legend","HealthAnalyticsPage","selectedMetric","setSelectedMetric","timeRange","setTimeRange","chartData","setChartData","showAddForm","setShowAddForm","newMetric","setNewMetric","heart_rate","blood_pressure_systolic","blood_pressure_diastolic","blood_sugar","oxygen_saturation","recorded_at","prepareChartData","handleInputChange","filteredData","oneMonthAgo","setMonth","getMonth","threeMonthsAgo","sixMonthsAgo","oneYearAgo","setFullYear","labels","borderColor","backgroundColor","datasets","getMetricLabel","tension","metric","getLatestMetricValue","sortedData","sort","b","latestValue","FaChartLine","exportToCSV","csvData","csvContent","row","blob","Blob","url","URL","createObjectURL","setAttribute","visibility","metricData","fromEntries","_","step","min","max","FaWeight","FaHeartbeat","FaTint","FaLungs","getMetricIcon","Line","responsive","plugins","legend","position","tooltip","mode","intersect","scales","y","beginAtZero","UpcomingAppointmentsPage","setAppointments","currentAppointment","setCurrentAppointment","doctor_name","specialty","date","time","reminder_set","fetchAppointments","gte","isToday","dateString","isUpcoming","app","appointment","FaMapMarkerAlt","AppointmentHistoryPage","searchTerm","setSearchTerm","filterDate","setFilterDate","filterDoctor","setFilterDoctor","sortOrder","setSortOrder","fetchAppointmentHistory","lt","filteredAppointments","matchesSearch","toLowerCase","matchesDate","matchesDoctor","dateA","dateB","FaSearch","handleSortChange","exportToCsv","cell","FaFileDownload","TelehealthConsultationsPage","consultations","setConsultations","currentConsultation","setCurrentConsultation","consultation_type","meeting_link","fetchConsultations","isPast","upcomingConsultations","consultation","pastConsultations","FaVideo","cons","FaPhone","FaLink","rel","AppointmentRemindersPage","reminders","setReminders","reminderSettings","setReminderSettings","email_reminders","sms_reminders","browser_notifications","phone_number","appointmentsData","appointmentsError","telehealthData","telehealthError","allAppointments","tel","settingsData","settingsError","remindersData","remindersError","handleSettingsChange","reminder","appointment_type","appointment_time","toLocaleString","reminderId","r","deleteReminder","appointmentDate","reminderHours","reminderTime","getTime","reminderError","appointment_id","sent","toggleReminder","FaToggleOn","FaToggleOff","HelpCenterPage","activeCategory","setActiveCategory","expandedFaqs","setExpandedFaqs","faqs","setFaqs","tutorials","setTutorials","categories","setCategories","fetchHelpCenterData","faqData","faqError","tutorialData","tutorialError","faqCategories","Set","faq","tutorialCategories","tutorial","allCategories","staticFaqs","staticTutorials","question","answer","filteredFaqs","matchesCategory","filteredTutorials","FaBook","replace","FaQuestionCircle","faqId","faq_id","viewed_at","trackFaqView","FaChevronUp","FaChevronDown","FaFileAlt","tutorial_id","tutorialId","clicked_at","trackTutorialClick","ContactSupportPage","supportTicket","setSupportTicket","subject","priority","attachFile","faqSuggestions","setFaqSuggestions","searchText","suggestions","keywords","keyword","FaLifeRing","FaLightbulb","attachmentUrl","fileData","fileError","urlData","attachment_url","FaComments","LiveChat","messages","setMessages","newMessage","setNewMessage","isTyping","setIsTyping","isRecording","setIsRecording","chatStatus","setChatStatus","supportAgent","setSupportAgent","chatSubscription","setChatSubscription","messagesEndRef","useRef","initializeChat","scrollToBottom","sessionData","sessionError","sessionId","newSession","messagesData","messagesError","channel","on","event","schema","table","payload","new","subscribe","agentData","agentError","current","scrollIntoView","FaFile","ref","session_id","onFocus","onBlur","random","filePath","messageError","FaPaperPlane","ProfilePage","gender","medical_conditions","address","bio","diseaseNames","setDiseaseNames","newDiseaseName","setNewDiseaseName","setParameters","newParameter","setNewParameter","unit","editing","setEditing","activeSection","setActiveSection","uploadingImage","setUploadingImage","setAllergies","newAllergy","setNewAllergy","commonDiseases","setCommonDiseases","showSidebar","setShowSidebar","fetchProfile","fetchDiseases","fetchAllergies","fetchParameters","section","URLSearchParams","search","get","fetchCommonDiseases","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","prevProfile","success","existingDisease","checkError","info","date_diagnosed","allergy","existingAllergy","warning","param","date_recorded","updatedProfile","SecuritySettings","settings","setSettings","twoFactorEnabled","emailNotifications","loginNotifications","passwordExpiry","maxLoginAttempts","setSuccess","fetchSecuritySettings","FaShieldAlt","FaUserLock","FaKey","DataBackup","backupHistory","setBackupHistory","fetchBackupHistory","healthMetrics","medicalConditions","healthAlerts","Promise","all","backup","backupError","backup_data","backupData","exportDate","revokeObjectURL","FaUpload","reader","FileReader","onload","cond","alert","readAsText","SetupDatabase","setResult","logs","setLogs","originalConsoleLog","originalConsoleError","originalConsoleWarn","FaDatabase","_len","args","_key","_len2","_key2","_len3","_key3","setupResult","setupSupabaseTables","FaSpinner","maxHeight","DatabaseSetup","setStatus","Navigate","FaTable","FaFolder","profilesError","sql_command","metricsError","analysesError","chatError","recsError","HealthMetricsVisualizer","initialTimeRange","metrics","setMetrics","metricOptions","fetchMetrics","timeRangeMap","chartOptions","find","option","dates","metricValue","systolic","parseFloat","MedicalImageAnalyzer","imageUrl","setImageUrl","imageType","setImageType","headers","REACT_APP_OPENAI_API_KEY","model","content","image_url","max_tokens","dbError","analysis_type","analysis_result","choices","analyzeImage","whiteSpace","HealthAssistant","input","setInput","setMode","getModeSystemPrompt","handleSend","userMessage","timestamp","current_medications","temperature","FaUtensils","FaFirstAid","FaRobot","overflowY","onKeyPress","BarElement","ArcElement","RadialLinearScale","AIInsightsDashboard","insights","setInsights","healthTrends","imageAnalyses","chatHistory","selectedTimeRange","setSelectedTimeRange","fetchAIInsights","imageData","chatData","recommendationsData","Radar","pointBackgroundColor","FaFileMedical","analysis","analyzed_at","image_type","confidence","FaBrain","Pie","rec","recommendation","Bar","borderWidth","HealthMetricsAI","setAnalysis","fetchHealthMetrics","mockMetrics","bloodPressure","diastolic","heartRate","analyzeMetrics","trend","change","overall","callOpenAI","prompt","MedicalImageAnalysis","image","setImage","imagePreview","setImagePreview","results","setResults","analysisType","setAnalysisType","fileInputRef","getDisclaimer","baseDisclaimer","saveAnalysisToDatabase","analysisText","readAsDataURL","onloadend","base64Image","basePrompt","prompts","getAnalysisPrompt","isImageAnalysis","interpretation","findings","disclaimer","apiError","onerror","paragraph","idx","HealthRecommendations","_focusAreas$find2","setRecommendations","selectedFocus","setSelectedFocus","additionalContext","setAdditionalContext","focusAreas","fetchRecommendationHistory","checkUser","_data$user_conditions","_data$user_medication","bmi","heightInMeters","toFixed","user_conditions","c","user_medications","saveRecommendationsToDatabase","focus_area","calculateAge","dateOfBirth","birthDate","age","getDate","area","newRecommendations","warnings","_focusAreas$find","h","viewHistoricalRecommendation","fa","_rec$action_steps","action_steps","App","Router","basename","future","v7_startTransition","v7_relativeSplatPath","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","theme","transition","Routes","Route","path","element","isLocalhost","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","origin","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e6f4c246.chunk.js","sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\n// Initialize the Supabase client\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL || 'https://aqdzmfhakqdwquszaqle.supabase.co';\r\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFxZHptZmhha3Fkd3F1c3phcWxlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzE0MDgyNTAsImV4cCI6MjA0Njk4NDI1MH0.4euPXQKyddaJuGhf5Etqdla8LF-h-p-gs1uVxw6dutQ';\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey); ","const { supabase } = require('./supabaseClient');\r\n\r\n// Initialize the Supabase client\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\r\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  throw new Error('Missing Supabase credentials. Please check your .env file.');\r\n}\r\n\r\n/**\r\n * Create the execute_sql function in Supabase\r\n */\r\nconst createExecuteSqlFunction = async () => {\r\n  try {\r\n    const createFunctionSQL = `\r\n      CREATE OR REPLACE FUNCTION execute_sql(sql text)\r\n      RETURNS void AS $$\r\n      BEGIN\r\n        EXECUTE sql;\r\n      END;\r\n      $$ LANGUAGE plpgsql SECURITY DEFINER;\r\n    `;\r\n\r\n    const { error } = await supabase.rpc('execute_sql', { sql: createFunctionSQL });\r\n    if (error) {\r\n      console.warn('Warning: Could not create execute_sql function. It might already exist.');\r\n    }\r\n  } catch (error) {\r\n    console.warn('Warning: Error creating execute_sql function:', error.message);\r\n  }\r\n};\r\n\r\n/**\r\n * Insert sample data into the diseases table\r\n */\r\nconst insertSampleData = async () => {\r\n  try {\r\n    console.log('Inserting sample data...');\r\n\r\n    const diseases = [\r\n      { name: 'Hypertension', category: 'Cardiovascular', description: 'High blood pressure condition' },\r\n      { name: 'Diabetes', category: 'Endocrine', description: 'Blood sugar regulation disorder' },\r\n      { name: 'Asthma', category: 'Respiratory', description: 'Chronic respiratory condition' },\r\n      { name: 'Arthritis', category: 'Musculoskeletal', description: 'Joint inflammation condition' },\r\n      { name: 'Depression', category: 'Mental Health', description: 'Mood disorder' },\r\n      { name: 'Anxiety', category: 'Mental Health', description: 'Anxiety disorder' },\r\n      { name: 'Migraine', category: 'Neurological', description: 'Severe headache condition' },\r\n      { name: 'Allergies', category: 'Immunological', description: 'Immune system response' },\r\n      { name: 'Hypothyroidism', category: 'Endocrine', description: 'Underactive thyroid condition' },\r\n      { name: 'Hyperthyroidism', category: 'Endocrine', description: 'Overactive thyroid condition' }\r\n    ];\r\n\r\n    const { error } = await supabase.from('diseases').upsert(diseases);\r\n    if (error) throw error;\r\n\r\n    console.log('Sample data inserted successfully');\r\n  } catch (error) {\r\n    console.error('Error inserting sample data:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Create storage buckets\r\n */\r\nconst createStorageBuckets = async () => {\r\n  try {\r\n    console.log('Creating storage buckets...');\r\n\r\n    // First, enable storage\r\n    const enableStorageSQL = `\r\n      ALTER DATABASE postgres SET \"app.settings.storage.enabled\" TO 'true';\r\n    `;\r\n    await supabase.rpc('execute_sql', { sql: enableStorageSQL });\r\n\r\n    // Create buckets\r\n    const buckets = [\r\n      'profile-pictures',\r\n      'medical-reports',\r\n      'health-reports',\r\n      'chat-attachments',\r\n      'support-attachments'\r\n    ];\r\n\r\n    for (const bucket of buckets) {\r\n      try {\r\n        const { error } = await supabase.storage.createBucket(bucket, { public: true });\r\n        if (error && !error.message.includes('already exists')) {\r\n          console.warn(`Warning creating bucket ${bucket}:`, error.message);\r\n        }\r\n      } catch (error) {\r\n        console.warn(`Error creating bucket ${bucket}:`, error.message);\r\n      }\r\n    }\r\n\r\n    // Create storage policies\r\n    const createPoliciesSQL = `\r\n      DO $$ \r\n      BEGIN\r\n        CREATE POLICY \"Allow public access to profile pictures\"\r\n        ON storage.objects FOR ALL\r\n        USING (bucket_id = 'profile-pictures');\r\n        \r\n        CREATE POLICY \"Allow public access to medical reports\"\r\n        ON storage.objects FOR ALL\r\n        USING (bucket_id = 'medical-reports');\r\n        \r\n        CREATE POLICY \"Allow public access to health reports\"\r\n        ON storage.objects FOR ALL\r\n        USING (bucket_id = 'health-reports');\r\n        \r\n        CREATE POLICY \"Allow public access to chat attachments\"\r\n        ON storage.objects FOR ALL\r\n        USING (bucket_id = 'chat-attachments');\r\n        \r\n        CREATE POLICY \"Allow public access to support attachments\"\r\n        ON storage.objects FOR ALL\r\n        USING (bucket_id = 'support-attachments');\r\n      EXCEPTION\r\n        WHEN others THEN\r\n          NULL;\r\n      END $$;\r\n    `;\r\n\r\n    await supabase.rpc('execute_sql', { sql: createPoliciesSQL });\r\n    console.log('Storage buckets and policies created successfully');\r\n  } catch (error) {\r\n    console.warn('Warning: Error setting up storage:', error.message);\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  createExecuteSqlFunction,\r\n  insertSampleData,\r\n  createStorageBuckets\r\n}; ","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { supabase } from '../utils/supabaseClient';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check active sessions and sets the user\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setUser(session?.user ?? null);\n      setLoading(false);\n    });\n\n    // Listen for changes on auth state (logged in, signed out, etc.)\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, session) => {\n      setUser(session?.user ?? null);\n      setLoading(false);\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const value = {\n    user,\n    loading,\n    signUp: (data) => supabase.auth.signUp(data),\n    signIn: (data) => supabase.auth.signInWithPassword(data),\n    signOut: () => supabase.auth.signOut(),\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n} ","// src/utils/menuHandlers.js\r\nexport function setupMenuListeners() {\r\n    const menuItems = document.querySelectorAll('.menu-item');\r\n    const overlay = document.querySelector('.overlay');\r\n    menuItems.forEach(item => {\r\n      item.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        const subMenu = item.querySelector('.sub-menu');\r\n        if (subMenu) {\r\n          subMenu.classList.toggle('active');\r\n          item.classList.toggle('active');\r\n          if (overlay) overlay.classList.toggle('active');\r\n          document.body.style.overflow = subMenu.classList.contains('active') ? 'hidden' : '';\r\n        }\r\n      });\r\n    });\r\n    if (overlay) {\r\n      overlay.addEventListener('click', closeAllMenus);\r\n    }\r\n  }\r\n  \r\n  function closeAllMenus() {\r\n    const menuItems = document.querySelectorAll('.menu-item');\r\n    const overlay = document.querySelector('.overlay');\r\n    menuItems.forEach(item => {\r\n      item.classList.remove('active');\r\n      const subMenu = item.querySelector('.sub-menu');\r\n      if (subMenu) subMenu.classList.remove('active');\r\n    });\r\n    if (overlay) overlay.classList.remove('active');\r\n    document.body.style.overflow = '';\r\n  }\r\n  \r\n  // Additional event listeners (as in your original file) can be added here.\r\n  document.addEventListener('DOMContentLoaded', () => {\r\n    const healthOverview = document.getElementById('health-overview');\r\n    if (healthOverview) {\r\n      healthOverview.addEventListener('click', () => {\r\n        window.location.href = 'view-reports.html';\r\n      });\r\n    }\r\n    // Repeat for other specific menu items...\r\n  });\r\n  ","import React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { setupMenuListeners } from '../utils/menuHandlers';\nimport { supabase } from '../utils/supabaseClient';\nimport './Navbar.css'; // Import the dedicated Navbar CSS file\n\nconst Navbar = () => {\n  const navigate = useNavigate();\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [userProfile, setUserProfile] = useState(null);\n\n  useEffect(() => {\n    setupMenuListeners();\n    checkUserRole();\n    fetchUserProfile();\n  }, []);\n\n  const checkUserRole = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (user && user.user_metadata?.role === 'admin') {\n        setIsAdmin(true);\n      }\n    } catch (error) {\n      console.error('Error checking user role:', error);\n    }\n  };\n\n  const fetchUserProfile = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (user) {\n        const { data, error } = await supabase\n          .from('detailed_profiles')\n          .select('first_name, last_name, profile_picture')\n          .eq('id', user.id)\n          .single();\n          \n        if (!error && data) {\n          setUserProfile(data);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n    }\n  };\n\n  const handleMenuClick = (e) => {\n    e.preventDefault();\n    const targetId = e.currentTarget.id;\n    switch (targetId) {\n      case 'health-overview':\n        navigate('/health-overview');\n        break;\n      case 'medical-history':\n        navigate('/medical-history');\n        break;\n      case 'chronic-disease-management':\n        navigate('/chronic-disease-management');\n        break;\n      case 'vaccination-history':\n        navigate('/vaccination-history');\n        break;\n      case 'health-analytics':\n        navigate('/health-analytics');\n        break;\n      case 'medication-tracker':\n        navigate('/medication-tracker');\n        break;\n      case 'profile-settings':\n        navigate('/profile');\n        break;\n      case 'upcoming-appointments':\n        navigate('/appointments/upcoming');\n        break;\n      case 'appointment-history':\n        navigate('/appointments/history');\n        break;\n      case 'telehealth-consultations':\n        navigate('/appointments/telehealth');\n        break;\n      case 'appointment-reminders':\n        navigate('/appointments/reminders');\n        break;\n      case 'help-center':\n        navigate('/help-center');\n        break;\n      case 'contact-support':\n        navigate('/support/contact');\n        break;\n      case 'live-chat':\n        navigate('/support/chat');\n        break;\n      case 'security-settings':\n        navigate('/settings/security');\n        break;\n      case 'data-backup':\n        navigate('/settings/backup');\n        break;\n      case 'database-setup':\n        navigate('/admin/database-setup');\n        break;\n      case 'logout-div':\n        handleLogout();\n        break;\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      const { error } = await supabase.auth.signOut();\n      if (error) throw error;\n      navigate('/');\n    } catch (error) {\n      console.error('Error logging out:', error.message);\n    }\n  };\n\n  return (\n    <header className=\"modern-navbar\">\n      <div className=\"navbar-container\">\n        <div className=\"navbar-logo\">\n          <Link to=\"/dashboard\">\n            <img \n              src={process.env.PUBLIC_URL + '/favicon_io/android-chrome-512x512-Photoroom.png'} \n              alt=\"DigiHealth Logo\" \n              className=\"logo-image\" \n            />\n          </Link>\n        </div>\n        \n        <nav id=\"menu\" className=\"navbar-menu\">\n          <div className=\"menu-item\">\n            <div className=\"menu-text\">\n              <a href=\"#\" data-link>Your Journey</a>\n            </div>\n            <div className=\"sub-menu double\">\n              <div className=\"icon-box\" id=\"health-overview\" onClick={handleMenuClick}>\n                <div className=\"icon\"><i className=\"fa fa-hospital-user\"></i></div>\n                <div className=\"text\">\n                  <div className=\"title\">Health Overview</div>\n                  <div className=\"sub-text\">See, add and update your Journey</div>\n                </div>\n              </div>\n              {/* <div className=\"icon-box\" id=\"medical-history\" onClick={handleMenuClick}>\n                <div className=\"icon\"><i className=\"fa fa-timeline\"></i></div>\n                <div className=\"text\">\n                  <div className=\"title\">Medical History</div>\n                  <div className=\"sub-text\">Through your Journey</div>\n                </div>\n              </div> */}\n              {/* <div className=\"icon-box\" id=\"chronic-disease-management\" onClick={handleMenuClick}>\n                <div className=\"icon\"><i className=\"fa fa-diagnoses\"></i></div>\n                <div className=\"text\">\n                  <div className=\"title\">Chronic Disease Management</div>\n                  <div className=\"sub-text\">Manage your chronic conditions</div>\n                </div>\n              </div> */}\n              <div className=\"icon-box\" id=\"vaccination-history\" onClick={handleMenuClick}>\n                <div className=\"icon\"><i className=\"fa fa-syringe\"></i></div>\n                <div className=\"text\">\n                  <div className=\"title\">Vaccination History</div>\n                  <div className=\"sub-text\">View and manage vaccinations</div>\n                </div>\n              </div>\n              <div className=\"icon-box\" id=\"medication-tracker\" onClick={handleMenuClick}>\n                <div className=\"icon\"><i className=\"fa fa-pills\"></i></div>\n                <div className=\"text\">\n                  <div className=\"title\">Medication Tracker</div>\n                  <div className=\"sub-text\">Track prescribed medications</div>\n                </div>\n              </div>\n              <div className=\"icon-box\" id=\"health-analytics\" onClick={handleMenuClick}>\n                <div className=\"icon\"><i className=\"fa fa-chart-line\"></i></div>\n                <div className=\"text\">\n                  <div className=\"title\">Health Analytics</div>\n                  <div className=\"sub-text\">View your health trends</div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"menu-item\">\n            <div className=\"menu-text\">\n              <a href=\"#\" data-link>Appointments</a>\n            </div>\n            <div className=\"sub-menu double\">\n              <div className=\"icon-box\" id=\"upcoming-appointments\" onClick={handleMenuClick}>\n                <div className=\"icon\"><i className=\"fa fa-calendar-check\"></i></div>\n                <div className=\"text\">\n                  <div className=\"title\">Upcoming Appointments</div>\n                  <div className=\"sub-text\">View and manage appointments</div>\n                </div>\n              </div>\n              <div className=\"icon-box\" id=\"appointment-history\" onClick={handleMenuClick}>\n                <div className=\"icon\"><i className=\"fa fa-history\"></i></div>\n                <div className=\"text\">\n                  <div className=\"title\">Appointment History</div>\n                  <div className=\"sub-text\">Check past appointments</div>\n                </div>\n              </div>\n              <div className=\"icon-box\" id=\"telehealth-consultations\" onClick={handleMenuClick}>\n                <div className=\"icon\"><i className=\"fa fa-phone-alt\"></i></div>\n                <div className=\"text\">\n                  <div className=\"title\">Telehealth Consultations</div>\n                  <div className=\"sub-text\">Book virtual appointments</div>\n                </div>\n              </div>\n              <div className=\"icon-box\" id=\"appointment-reminders\" onClick={handleMenuClick}>\n                <div className=\"icon\"><i className=\"fa fa-clock\"></i></div>\n                <div className=\"text\">\n                  <div className=\"title\">Appointment Reminders</div>\n                  <div className=\"sub-text\">Set and manage reminders</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"menu-item\">\n            <div className=\"menu-text\">\n              <a href=\"#\" data-link>Support</a>\n            </div>\n            <div className=\"sub-menu double\">\n              <div className=\"icon-box\" id=\"help-center\" onClick={handleMenuClick}>\n                <div className=\"icon\"><i className=\"fa fa-book\"></i></div>\n                <div className=\"text\">\n                  <div className=\"title\">Help Center</div>\n                  <div className=\"sub-text\">FAQs and tutorials</div>\n                </div>\n              </div>\n              <div className=\"icon-box\" id=\"contact-support\" onClick={handleMenuClick}>\n                <div className=\"icon\"><i className=\"fa fa-life-ring\"></i></div>\n                <div className=\"text\">\n                  <div className=\"title\">Contact Support</div>\n                  <div className=\"sub-text\">Reach out to our team</div>\n                </div>\n              </div>\n              <div className=\"icon-box\" id=\"live-chat\" onClick={handleMenuClick}>\n                <div className=\"icon\"><i className=\"fa fa-comment-dots\"></i></div>\n                <div className=\"text\">\n                  <div className=\"title\">Live Chat</div>\n                  <div className=\"sub-text\">Chat with support agents</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"menu-item\">\n            <div className=\"menu-text\">\n              <a href=\"#\" data-link>AI Tools</a>\n            </div>\n            <div className=\"sub-menu double\">\n              <div className=\"icon-box\" id=\"ai-image-analysis\" onClick={(e) => {\n                e.preventDefault();\n                navigate('/ai/image-analysis');\n              }}>\n                <div className=\"icon\"><i className=\"fa fa-microscope\"></i></div>\n                <div className=\"text\">\n                  <div className=\"title\">Medical Image Analysis</div>\n                  <div className=\"sub-text\">AI analysis of medical images</div>\n                </div>\n              </div>\n              <div className=\"icon-box\" id=\"ai-health-assistant\" onClick={(e) => {\n                e.preventDefault();\n                navigate('/ai/health-assistant');\n              }}>\n                <div className=\"icon\"><i className=\"fa fa-robot\"></i></div>\n                <div className=\"text\">\n                  <div className=\"title\">Health Assistant</div>\n                  <div className=\"sub-text\">Chat with our AI assistant</div>\n                </div>\n              </div>\n              <div className=\"icon-box\" id=\"ai-recommendations\" onClick={(e) => {\n                e.preventDefault();\n                navigate('/ai/health-recommendations');\n              }}>\n                <div className=\"icon\"><i className=\"fa fa-lightbulb\"></i></div>\n                <div className=\"text\">\n                  <div className=\"title\">Health Recommendations</div>\n                  <div className=\"sub-text\">Get personalized health insights</div>\n                </div>\n              </div>\n              <div className=\"icon-box\" id=\"ai-symptom-checker\" onClick={(e) => {\n                e.preventDefault();\n                navigate('/ai/symptom-checker');\n              }}>\n                <div className=\"icon\"><i className=\"fa fa-stethoscope\"></i></div>\n                <div className=\"text\">\n                  <div className=\"title\">Symptom Checker</div>\n                  <div className=\"sub-text\">AI-powered symptom analysis</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </nav>\n        \n        <div className=\"navbar-profile\">\n          <div className=\"profile-menu menu-item\">\n            <div className=\"profile-button\">\n              {userProfile?.profile_picture ? (\n                <img \n                  src={userProfile.profile_picture} \n                  alt=\"Profile\" \n                  className=\"profile-image\" \n                />\n              ) : (\n                <div className=\"profile-avatar\">\n                  <i className=\"fas fa-user\"></i>\n                </div>\n              )}\n            </div>\n            <div className=\"sub-menu profile-dropdown\">\n              <div className=\"profile-info\">\n                <div className=\"profile-name\">\n                  {userProfile ? `${userProfile.first_name || ''} ${userProfile.last_name || ''}` : 'User'}\n                </div>\n              </div>\n              <div className=\"icon-box\" id=\"profile-settings\" onClick={handleMenuClick}>\n                <div className=\"icon\"><i className=\"fa fa-user-cog\"></i></div>\n                <div className=\"text\">\n                  <div className=\"title\">Profile Settings</div>\n                </div>\n              </div>\n              <div className=\"icon-box\" id=\"security-settings\" onClick={handleMenuClick}>\n                <div className=\"icon\"><i className=\"fa fa-shield-alt\"></i></div>\n                <div className=\"text\">\n                  <div className=\"title\">Security Settings</div>\n                </div>\n              </div>\n              <div className=\"icon-box\" id=\"data-backup\" onClick={handleMenuClick}>\n                <div className=\"icon\"><i className=\"fa fa-database\"></i></div>\n                <div className=\"text\">\n                  <div className=\"title\">Data Backup</div>\n                </div>\n              </div>\n              {isAdmin && (\n                <div className=\"icon-box\" id=\"database-setup\" onClick={handleMenuClick}>\n                  <div className=\"icon\"><i className=\"fa fa-server\"></i></div>\n                  <div className=\"text\">\n                    <div className=\"title\">Database Setup</div>\n                  </div>\n                </div>\n              )}\n              <div className=\"icon-box logout\" id=\"logout-div\" onClick={handleLogout}>\n                <div className=\"icon\"><i className=\"fa fa-sign-out-alt\"></i></div>\n                <div className=\"text\">\n                  <div className=\"title\">Logout</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"modern-footer\">\r\n            <div className=\"footer-content\">\r\n                <div className=\"footer-info\">\r\n                    <p>&copy; {new Date().getFullYear()} DiGiHealth. All rights reserved.</p>\r\n                </div>\r\n                <div className=\"footer-links\">\r\n                    <a href=\"/terms\">Terms</a>\r\n                    <a href=\"/privacy\">Privacy</a>\r\n                    <a href=\"/support\">Support</a>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport Navbar from './Navbar';\r\nimport Footer from './Footer';\r\nimport '../dashboardstyle.css';\r\n\r\nconst DashboardLayout = ({ children }) => {\r\n  return (\r\n    <div className=\"dashboard-layout\">\r\n      <Navbar />\r\n      <main className=\"dashboard-main\">\r\n        <div className=\"content-wrapper\">\r\n          {children}\r\n        </div>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","// src/pages/Login.jsx\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../utils/supabaseClient'; // Update import\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles.css';\n\nconst Login = () => {\n  const [showSignup, setShowSignup] = useState(false);\n  const [notification, setNotification] = useState(null);\n  \n  // Login form state\n  const [loginEmail, setLoginEmail] = useState('');\n  const [loginPassword, setLoginPassword] = useState('');\n  \n  // Signup form state\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [signupEmail, setSignupEmail] = useState('');\n  const [signupPassword, setSignupPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  \n  const navigate = useNavigate();\n\n  // Notification helper\n  const showNotification = (message, type = 'info') => {\n    console.log(`Notification: ${message}, Type: ${type}`); // Log the notification type\n    setNotification({ message, type });\n    setTimeout(() => setNotification(null), 3000);\n  };\n\n  // Handle Login\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const { error } = await supabase.auth.signInWithPassword({\n        email: loginEmail,\n        password: loginPassword,\n      });\n      if (error) throw error;\n      showNotification('Login successful!', 'success');\n      // Delay redirect to allow the notification to be seen\n      setTimeout(() => {\n        navigate('/dashboard');\n      }, 3000); // Adjust delay as needed\n    } catch (error) {\n      console.error('Login error:', error.message);\n      showNotification(error.message, 'danger');\n    }\n  };\n\n  // Handle Signup\n  const handleSignup = async (e) => {\n    e.preventDefault();\n    if (signupPassword !== confirmPassword) {\n      showNotification(\"Passwords don't match\", 'error');\n      return;\n    }\n    try {\n      const { data, error } = await supabase.auth.signUp({\n        email: signupEmail,\n        password: signupPassword,\n        options: {\n          data: {\n            first_name: firstName,\n            last_name: lastName,\n          },\n        },\n      });\n      if (error) throw error;\n\n      // Optionally insert additional profile data into your \"profiles\" table\n      if (data.user) {\n        const { error: profileError } = await supabase.from('detailed_profiles').insert([\n          {\n            id: data.user.id,\n            first_name: firstName,\n            last_name: lastName,\n            email: signupEmail,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n          },\n        ]);\n        if (profileError) throw profileError;\n      }\n      \n      showNotification('Account created successfully!', 'success');\n      // Redirect to dashboard after signup (update the path as needed)\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Signup error:', error.message);\n      showNotification(error.message, 'danger');\n    }\n  };\n\n  return (\n    <div id=\"app\">\n      <header>\n        <img\n          src={process.env.PUBLIC_URL + '/favicon_io/android-chrome-512x512-Photoroom.png'}\n          alt=\"Logo\"\n          className=\"logo\" style={{width: \"250px\", height: \"100%\"}}\n        />\n      </header>\n\n      {/* Notification Container */}\n      {notification && (\n        <div className={`alert alert-${notification.type} alert-dismissible fade show`} role=\"alert\">\n          {notification.message}\n{/*           <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={() => setNotification(null)}></button> */}\n        </div>\n      )}\n\n      <div id=\"login-signup\">\n        {/* Login Form */}\n        {!showSignup ? (\n          <div id=\"login-form\">\n            <h2>Login</h2>\n            <form className=\"form1\" onSubmit={handleLogin}>\n              <label>\n                <input\n                  required\n                  name=\"email\"\n                  type=\"email\"\n                  className=\"input\"\n                  id=\"login-email\"\n                  autoComplete=\"new-password\"\n                  value={loginEmail}\n                  onChange={(e) => setLoginEmail(e.target.value)}\n                />\n                <span>Email</span>\n              </label>\n              <label>\n                <input\n                  required\n                  name=\"password\"\n                  type=\"password\"\n                  className=\"input\"\n                  id=\"login-password\"\n                  autoComplete=\"login-password\"\n                  value={loginPassword}\n                  onChange={(e) => setLoginPassword(e.target.value)}\n                />\n                <span>Password</span>\n              </label>\n              <div>\n                <button type=\"submit\" id=\"login-button\">\n                  Login\n                </button>\n                <button type=\"button\" onClick={() => setShowSignup(true)}>\n                  Sign Up\n                </button>\n              </div>\n            </form>\n          </div>\n        ) : (\n          // Signup Form\n          <div id=\"signup-form\">\n            <form className=\"form\" onSubmit={handleSignup}>\n              <p className=\"message\">Signup now</p>\n              <div className=\"flex\">\n                <label>\n                  <input\n                    required\n                    name=\"firstname\"\n                    type=\"text\"\n                    className=\"input\"\n                    placeholder=\" \"\n                    value={firstName}\n                    onChange={(e) => setFirstName(e.target.value)}\n                  />\n                  <span>Firstname</span>\n                </label>\n                <label>\n                  <input\n                    required\n                    name=\"lastname\"\n                    type=\"text\"\n                    className=\"input\"\n                    placeholder=\" \"\n                    value={lastName}\n                    onChange={(e) => setLastName(e.target.value)}\n                  />\n                  <span>Lastname</span>\n                </label>\n              </div>\n              <label>\n                <input\n                  required\n                  name=\"email\"\n                  type=\"email\"\n                  className=\"input\"\n                  id=\"signup-email\"\n                  placeholder=\" \"\n                  value={signupEmail}\n                  onChange={(e) => setSignupEmail(e.target.value)}\n                />\n                <span>Email</span>\n              </label>\n              <label>\n                <input\n                  required\n                  name=\"password\"\n                  type=\"password\"\n                  className=\"input\"\n                  id=\"signup-password\"\n                  placeholder=\" \"\n                  value={signupPassword}\n                  onChange={(e) => setSignupPassword(e.target.value)}\n                />\n                <span>Password</span>\n              </label>\n              <label>\n                <input\n                  required\n                  name=\"confirmPassword\"\n                  type=\"password\"\n                  className=\"input\"\n                  placeholder=\" \"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                />\n                <span>Confirm password</span>\n              </label>\n              <button type=\"submit\" className=\"submit\">\n                Submit\n              </button>\n              <p className=\"signin\">\n                Already have an account?{' '}\n                <a href=\"/\" onClick={() => setShowSignup(false)}>\n                  Signin\n                </a>\n              </p>\n            </form>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Login;","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { supabase } from '../utils/supabaseClient';\r\nimport { FaUser, FaEnvelope, FaLock, FaUserMd } from 'react-icons/fa';\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    role: 'patient'\r\n  });\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setLoading(true);\r\n\r\n    if (formData.password !== formData.confirmPassword) {\r\n      setError('Passwords do not match');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { data, error } = await supabase.auth.signUp({\r\n        email: formData.email,\r\n        password: formData.password,\r\n        options: {\r\n          data: {\r\n            first_name: formData.firstName,\r\n            last_name: formData.lastName,\r\n            role: formData.role\r\n          }\r\n        }\r\n      });\r\n\r\n      if (error) throw error;\r\n\r\n      // Create profile in detailed_profiles table\r\n      if (data.user) {\r\n        const { error: profileError } = await supabase\r\n          .from('detailed_profiles')\r\n          .insert([\r\n            {\r\n              id: data.user.id,\r\n              first_name: formData.firstName,\r\n              last_name: formData.lastName,\r\n              email: formData.email,\r\n              created_at: new Date().toISOString()\r\n            }\r\n          ]);\r\n\r\n        if (profileError) throw profileError;\r\n        \r\n        // Also create in profiles table for backward compatibility\r\n        const { error: oldProfileError } = await supabase\r\n          .from('profiles')\r\n          .insert([\r\n            {\r\n              id: data.user.id,\r\n              full_name: `${formData.firstName} ${formData.lastName}`,\r\n              email: formData.email,\r\n              role: formData.role,\r\n              created_at: new Date().toISOString()\r\n            }\r\n          ]);\r\n\r\n        if (oldProfileError) throw oldProfileError;\r\n      }\r\n\r\n      navigate('/dashboard');\r\n    } catch (error) {\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-body\">\r\n              <h2 className=\"text-center mb-4\">Register</h2>\r\n              {error && (\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {error}\r\n                </div>\r\n              )}\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"row mb-3\">\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"form-label\">First Name</label>\r\n                    <div className=\"input-group\">\r\n                      <span className=\"input-group-text\">\r\n                        <FaUser />\r\n                      </span>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"firstName\"\r\n                        value={formData.firstName}\r\n                        onChange={handleChange}\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"form-label\">Last Name</label>\r\n                    <div className=\"input-group\">\r\n                      <span className=\"input-group-text\">\r\n                        <FaUser />\r\n                      </span>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"lastName\"\r\n                        value={formData.lastName}\r\n                        onChange={handleChange}\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email</label>\r\n                  <div className=\"input-group\">\r\n                    <span className=\"input-group-text\">\r\n                      <FaEnvelope />\r\n                    </span>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      name=\"email\"\r\n                      value={formData.email}\r\n                      onChange={handleChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Password</label>\r\n                  <div className=\"input-group\">\r\n                    <span className=\"input-group-text\">\r\n                      <FaLock />\r\n                    </span>\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      name=\"password\"\r\n                      value={formData.password}\r\n                      onChange={handleChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Confirm Password</label>\r\n                  <div className=\"input-group\">\r\n                    <span className=\"input-group-text\">\r\n                      <FaLock />\r\n                    </span>\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      name=\"confirmPassword\"\r\n                      value={formData.confirmPassword}\r\n                      onChange={handleChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Role</label>\r\n                  <div className=\"input-group\">\r\n                    <span className=\"input-group-text\">\r\n                      <FaUserMd />\r\n                    </span>\r\n                    <select\r\n                      className=\"form-select\"\r\n                      name=\"role\"\r\n                      value={formData.role}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option value=\"patient\">Patient</option>\r\n                      <option value=\"doctor\">Doctor</option>\r\n                      <option value=\"admin\">Admin</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary w-100\"\r\n                  disabled={loading}\r\n                >\r\n                  {loading ? 'Registering...' : 'Register'}\r\n                </button>\r\n              </form>\r\n              <div className=\"text-center mt-3\">\r\n                Already have an account?{' '}\r\n                <a href=\"/\" className=\"text-decoration-none\">\r\n                  Login\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register; ","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner-overlay\">\r\n      <div className=\"medical-spinner\">\r\n        <div className=\"spinner-container\">\r\n          <div className=\"cross-container\">\r\n            <div className=\"cross-horizontal\"></div>\r\n            <div className=\"cross-vertical\"></div>\r\n          </div>\r\n          <div className=\"spinner-ring\"></div>\r\n        </div>\r\n        \r\n        <div className=\"heartbeat-container\">\r\n          <svg viewBox=\"0 0 400 100\" className=\"ecg-line\">\r\n            <polyline\r\n              className=\"ecg-path\"\r\n              points=\"0,50 30,50 45,50 60,20 75,80 90,50 105,50 120,50 150,50 170,50 185,50 200,20 215,80 230,50 245,50 270,50 300,50 320,50 335,50 350,20 365,80 380,50 395,50 400,50\"\r\n              fill=\"none\"\r\n              strokeWidth=\"3\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        \r\n        <div className=\"spinner-text\">Loading...</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;","import React, { useEffect, useState } from 'react';\r\nimport { Card, Button, Spinner, Form, Alert } from 'react-bootstrap';\r\nimport { FaQrcode, FaEdit, FaDownload } from 'react-icons/fa';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { supabase } from '../utils/supabaseClient';\r\nimport { QRCodeCanvas } from 'qrcode.react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst EmergencyQRCode = ({ \r\n  size = 140, \r\n  showDownloadButton = true, \r\n  showHeader = true, \r\n  showOptions = true,\r\n  showCard = true,\r\n  onClick = null\r\n}) => {\r\n  const { user } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [profile, setProfile] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [qrData, setQrData] = useState('');\r\n  const [includeAllergies, setIncludeAllergies] = useState(true);\r\n  const [includeDiseases, setIncludeDiseases] = useState(true);\r\n  const [includeContacts, setIncludeContacts] = useState(true);\r\n  const [includeMedications, setIncludeMedications] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log('EmergencyQRCode mounted, user:', user ? `ID: ${user.id}` : 'No user');\r\n    fetchProfileData();\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (profile) {\r\n      generateQRData();\r\n    }\r\n  }, [profile, includeAllergies, includeDiseases, includeContacts, includeMedications]);\r\n\r\n  const fetchProfileData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (!user) {\r\n        console.error('No user is logged in');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      // Fetch basic profile information\r\n      const { data: profileData, error: profileError } = await supabase\r\n        .from('detailed_profiles')\r\n        .select('*')\r\n        .eq('id', user.id)\r\n        .single();\r\n\r\n      if (profileError) {\r\n        console.error('Error fetching profile:', profileError);\r\n        if (profileError.code === 'PGRST116') {\r\n          // Profile doesn't exist yet, create a default one\r\n          console.log('Creating new profile for user:', user.id);\r\n        } else {\r\n          throw profileError;\r\n        }\r\n      }\r\n\r\n      // Fetch allergies\r\n      const { data: allergiesData, error: allergiesError } = await supabase\r\n        .from('user_allergies')\r\n        .select('*')\r\n        .eq('user_id', user.id);\r\n\r\n      if (allergiesError) throw allergiesError;\r\n\r\n      // Fetch diseases\r\n      const { data: diseasesData, error: diseasesError } = await supabase\r\n        .from('user_diseases')\r\n        .select('*')\r\n        .eq('user_id', user.id);\r\n\r\n      if (diseasesError) throw diseasesError;\r\n\r\n      // Fetch medications\r\n      const { data: medicationsData, error: medicationsError } = await supabase\r\n        .from('medications')\r\n        .select('*')\r\n        .eq('user_id', user.id);\r\n\r\n      if (medicationsError) throw medicationsError;\r\n\r\n      setProfile({\r\n        ...profileData,\r\n        allergies: allergiesData || [],\r\n        diseases: diseasesData || [],\r\n        medications: medicationsData || []\r\n      });\r\n      console.log('Profile data loaded:', profileData);\r\n    } catch (error) {\r\n      console.error('Error fetching profile data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const generateQRData = () => {\r\n    if (!profile) return;\r\n\r\n    // Add console logging to debug\r\n    console.log('Generating QR data from profile:', profile);\r\n\r\n    let emergencyData = {\r\n      name: profile.first_name && profile.last_name \r\n        ? `${profile.first_name} ${profile.last_name}` \r\n        : 'Unknown',\r\n      dob: profile.date_of_birth || 'Unknown',\r\n      bloodType: profile.blood_group || 'Unknown',\r\n      weight: profile.weight ? `${profile.weight} kg` : 'Unknown',\r\n      height: profile.height ? `${profile.height} cm` : 'Unknown'\r\n    };\r\n\r\n    if (includeAllergies && profile.allergies && profile.allergies.length > 0) {\r\n      emergencyData.allergies = profile.allergies.map(a => a.allergy_name || a.name);\r\n    }\r\n\r\n    if (includeDiseases && profile.diseases && profile.diseases.length > 0) {\r\n      emergencyData.conditions = profile.diseases.map(d => d.disease_name || d.name);\r\n    }\r\n\r\n    if (includeContacts && profile.emergency_contact_name) {\r\n      emergencyData.emergencyContact = {\r\n        name: profile.emergency_contact_name,\r\n        phone: profile.emergency_contact_phone,\r\n        relationship: profile.emergency_contact_relationship\r\n      };\r\n    }\r\n\r\n    if (includeMedications && profile.medications && profile.medications.length > 0) {\r\n      emergencyData.medications = profile.medications.map(m => ({\r\n        name: m.name,\r\n        dosage: m.daily_dose ? `${m.daily_dose} tablets daily` : 'As prescribed'\r\n      }));\r\n    }\r\n\r\n    // Even if we don't have much data, generate a basic QR code\r\n    const qrString = JSON.stringify(emergencyData);\r\n    console.log('QR data generated:', qrString);\r\n    setQrData(qrString);\r\n  };\r\n\r\n  const downloadQRCode = () => {\r\n    const canvas = document.getElementById('emergency-qrcode');\r\n    if (canvas) {\r\n      try {\r\n        const pngUrl = canvas.toDataURL('image/png');\r\n        \r\n        const downloadLink = document.createElement('a');\r\n        downloadLink.href = pngUrl;\r\n        downloadLink.download = 'emergency-medical-id.png';\r\n        document.body.appendChild(downloadLink);\r\n        downloadLink.click();\r\n        document.body.removeChild(downloadLink);\r\n      } catch (error) {\r\n        console.error('Error downloading QR code:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleProfileRedirect = () => {\r\n    navigate('/profile?section=emergency-qr');\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <Spinner animation=\"border\" role=\"status\" size=\"sm\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const qrCodeContent = (\r\n    <>\r\n      <div className={`qrcode-container p-2 bg-light rounded ${onClick ? 'cursor-pointer' : ''}`} \r\n           onClick={onClick || (showCard ? null : () => handleProfileRedirect())}\r\n           style={{\r\n             display: 'flex', \r\n             justifyContent: 'center', \r\n             alignItems: 'center', \r\n             height: size + 20, \r\n             width: size + 20,\r\n             margin: '0 auto'\r\n            }}>\r\n        {qrData ? (\r\n          <QRCodeCanvas\r\n            id=\"emergency-qrcode\"\r\n            value={qrData}\r\n            size={size}\r\n            level=\"H\"\r\n            includeMargin={true}\r\n          />\r\n        ) : (\r\n          <div style={{width: size, height: size}} className=\"d-flex justify-content-center align-items-center border rounded\">\r\n            <div className=\"text-center p-2\">\r\n              <FaQrcode size={size/3} className=\"text-muted mb-2\" />\r\n              <p className=\"small text-muted mb-0\">Set up your profile to create emergency QR</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {showDownloadButton && qrData && (\r\n        <div className=\"mt-3 d-flex flex-wrap gap-2 justify-content-center\">\r\n          <Button \r\n            variant=\"primary\" \r\n            size=\"sm\"\r\n            className=\"d-flex align-items-center\"\r\n            onClick={downloadQRCode}\r\n          >\r\n            <FaDownload className=\"me-1\" /> Download QR Code\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  if (!showCard) {\r\n    return qrCodeContent;\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-4\">\r\n      <Card className=\"shadow\">\r\n        {showHeader && (\r\n          <Card.Header className=\"bg-primary text-white d-flex justify-content-between align-items-center\">\r\n            <div className=\"d-flex align-items-center\">\r\n              <FaQrcode className=\"me-2\" />\r\n              <h5 className=\"mb-0\">Emergency Medical QR Code</h5>\r\n            </div>\r\n            <Button\r\n              variant=\"outline-light\"\r\n              size=\"sm\"\r\n              className=\"d-flex align-items-center\"\r\n              onClick={handleProfileRedirect}\r\n            >\r\n              <FaEdit className=\"me-1\" /> Manage\r\n            </Button>\r\n          </Card.Header>\r\n        )}\r\n        <Card.Body className=\"d-flex flex-column align-items-center\">\r\n          {showHeader && (\r\n            <div className=\"text-center mb-3\">\r\n              <p>This QR code contains your essential medical information for emergency situations.</p>\r\n            </div>\r\n          )}\r\n          \r\n          {qrCodeContent}\r\n          \r\n          {showOptions && (\r\n            <div className=\"mt-4 w-100\">\r\n              <h6>Information Included:</h6>\r\n              <Form>\r\n                <div className=\"d-flex flex-wrap gap-3\">\r\n                  <Form.Check \r\n                    type=\"switch\"\r\n                    id=\"include-allergies\"\r\n                    label=\"Allergies\"\r\n                    checked={includeAllergies}\r\n                    onChange={e => setIncludeAllergies(e.target.checked)}\r\n                  />\r\n                  <Form.Check \r\n                    type=\"switch\"\r\n                    id=\"include-diseases\"\r\n                    label=\"Medical Conditions\"\r\n                    checked={includeDiseases}\r\n                    onChange={e => setIncludeDiseases(e.target.checked)}\r\n                  />\r\n                  <Form.Check \r\n                    type=\"switch\"\r\n                    id=\"include-contacts\"\r\n                    label=\"Emergency Contacts\"\r\n                    checked={includeContacts}\r\n                    onChange={e => setIncludeContacts(e.target.checked)}\r\n                  />\r\n                  <Form.Check \r\n                    type=\"switch\"\r\n                    id=\"include-medications\"\r\n                    label=\"Medications\"\r\n                    checked={includeMedications}\r\n                    onChange={e => setIncludeMedications(e.target.checked)}\r\n                  />\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          )}\r\n          \r\n          <Alert variant=\"info\" className=\"mt-3\">\r\n            <small>Keep your profile information up-to-date for effective emergency response.</small>\r\n          </Alert>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmergencyQRCode; ","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../utils/supabaseClient';\nimport '../dashboardstyle.css'; // Dashboard-specific styles\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport Spinner from '../components/Spinner'; // Import Spinner component\nimport EmergencyQRCode from '../components/EmergencyQRCode'; // Import EmergencyQRCode\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link } from 'react-router-dom';\nimport { Col, Card, Button, Row } from 'react-bootstrap';\nimport { FaQrcode, FaEdit, FaInfoCircle } from 'react-icons/fa';\n\nconst Dashboard = () => {\n    const navigate = useNavigate();\n    const { user } = useAuth();\n    const [notification, setNotification] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [healthData, setHealthData] = useState({\n        vitals: [],\n        medications: [],\n        appointments: [],\n        conditions: [],\n        alerts: [],\n        profile: null\n    });\n    const [error, setError] = useState(null);\n\n    const showNotification = (message, type = 'info') => {\n        setNotification({ message, type });\n        setTimeout(() => setNotification(null), 3000);\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const { data: { user }, error: userError } = await supabase.auth.getUser();\n                if (userError || !user) {\n                    navigate('/');\n                    return;\n                }\n                \n                const { data: profileData, error: profileError } = await supabase\n                    .from('detailed_profiles')\n                    .select('*')\n                    .eq('id', user.id)\n                    .single();\n\n                if (profileError) {\n                    if (profileError.code === 'PGRST116') {\n                        // Profile doesn't exist, create one\n                        const { data: newProfile, error: createError } = await supabase\n                            .from('detailed_profiles')\n                            .insert([{ id: user.id }])\n                            .select()\n                            .single();\n                            \n                        if (createError) throw createError;\n                        setHealthData(prev => ({ ...prev, profile: newProfile }));\n                    } else {\n                        throw profileError;\n                    }\n                } else {\n                    setHealthData(prev => ({ ...prev, profile: profileData }));\n                }\n            } catch (error) {\n                console.error('Error fetching data:', error);\n                setError('Failed to load dashboard data');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, [navigate]);\n\n    const mainFeatureCards = [\n        {\n            title: 'Profile',\n            icon: 'fa-user',\n            description: 'View and manage your profile information',\n            link: '/profile',\n            color: 'primary'\n        },\n        {\n            title: 'Health Records',\n            icon: 'fa-file-medical',\n            description: 'Access your health records and history',\n            link: '/health-records',\n            color: 'info'\n        },\n        {\n            title: 'Appointments',\n            icon: 'fa-calendar-check',\n            description: 'Schedule and manage appointments',\n            link: '/appointments',\n            color: 'success'\n        },\n        {\n            title: 'Medications',\n            icon: 'fa-pills',\n            description: 'Track your medications and prescriptions',\n            link: '/medications',\n            color: 'warning'\n        }\n    ];\n\n    const aiFeatureCards = [\n        {\n            title: 'Health Recommendations',\n            icon: 'fa-chart-line',\n            description: 'AI-powered health recommendations based on your profile',\n            link: '/ai/health-recommendations',\n            color: 'primary'\n        },\n        {\n            title: 'Medical Image Analysis',\n            icon: 'fa-microscope',\n            description: 'AI analysis of medical images',\n            link: '/ai/image-analysis',\n            color: 'info'\n        },\n        {\n            title: 'Health Assistant',\n            icon: 'fa-robot',\n            description: 'Chat with our AI health assistant',\n            link: '/ai/health-assistant',\n            color: 'success'\n        },\n        {\n            title: 'Symptom Checker',\n            icon: 'fa-stethoscope',\n            description: 'AI-powered symptom analysis',\n            link: '/ai/symptom-checker',\n            color: 'danger'\n        }\n    ];\n\n    if (loading) return <Spinner />;\n    if (error) return <div className=\"alert alert-danger\">{error}</div>;\n\n    return (\n        <div className=\"container-fluid py-4\" >\n            <div className=\"row mb-4\">\n                <div className=\"col\">\n                    <h1 className=\"h3\">Welcome, {healthData.profile?.first_name || 'User'}!</h1>\n                    <p className=\"text-muted\">Here's an overview of your health information</p>\n                </div>\n            </div>\n\n            {/* Main Features Section and Emergency QR Code in a row */}\n            <div className=\"row g-4 mb-5\">\n            <h4 className=\"mb-3\">Main Features</h4>\n                {/* First 3 main feature cards */}\n                {mainFeatureCards.slice(0, 3).map((card, index) => (\n                    <div key={index} className=\"col-12 col-md-6 col-lg-3\">\n                        <Link to={card.link} className=\"text-decoration-none h-100\">\n                            <div className={`card hover-card border-${card.color} h-100`}>\n                                <div className=\"card-body d-flex flex-column\">\n                                    <div className=\"d-flex align-items-center mb-2\">\n                                        <div className={`icon-circle bg-${card.color} text-white`}>\n                                            <i className={`fas ${card.icon}`}></i>\n                                        </div>\n                                        <h5 className=\"card-title mb-0 ms-3\">{card.title}</h5>\n                                    </div>\n                                    <p className=\"card-text text-muted flex-grow-1\">{card.description}</p>\n                                </div>\n                            </div>\n                        </Link>\n                    </div>\n                ))}\n\n                {/* Emergency QR Code */}\n                <div className=\"col-12 col-md-6 col-lg-3\">\n                    <Card className=\"hover-card border-danger h-100\">\n                        <Card.Body className=\"d-flex flex-column\">\n                            <div className=\"d-flex align-items-center mb-2\">\n                                <div className=\"icon-circle bg-danger text-white\">\n                                    <FaQrcode />\n                                </div>\n                                <h5 className=\"card-title mb-0 ms-3\">Emergency QR</h5>\n                            </div>\n                            <div className=\"d-flex flex-column align-items-center justify-content-center flex-grow-1\">\n                                {user ? (\n                                    <>\n                                        <EmergencyQRCode \n                                            size={110} \n                                            showDownloadButton={false} \n                                            showHeader={false}\n                                            showOptions={false}\n                                            showCard={false}\n                                            onClick={() => navigate('/profile?section=emergency-qr')}\n                                        />\n                                        {/* <p className=\"text-muted small mt-2 text-center\">Click to view emergency QR</p> */}\n                                    </>\n                                ) : (\n                                    <div className=\"text-center\">\n                                        <Spinner animation=\"border\" role=\"status\" size=\"sm\">\n                                            <span className=\"visually-hidden\">Loading...</span>\n                                        </Spinner>\n                                        <p className=\"text-muted small mt-2\">Loading user data...</p>\n                                    </div>\n                                )}\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n\n            {/* 4th main feature card moved to next row */}\n            <div className=\"row g-4 mb-5\">\n                <div className=\"col-12 col-md-6 col-lg-3\">\n                    <Link to={mainFeatureCards[3].link} className=\"text-decoration-none h-100\">\n                        <div className={`card hover-card border-${mainFeatureCards[3].color} h-100`}>\n                            <div className=\"card-body d-flex flex-column\">\n                                <div className=\"d-flex align-items-center mb-2\">\n                                    <div className={`icon-circle bg-${mainFeatureCards[3].color} text-white`}>\n                                        <i className={`fas ${mainFeatureCards[3].icon}`}></i>\n                                    </div>\n                                    <h5 className=\"card-title mb-0 ms-3\">{mainFeatureCards[3].title}</h5>\n                                </div>\n                                <p className=\"card-text text-muted flex-grow-1\">{mainFeatureCards[3].description}</p>\n                            </div>\n                        </div>\n                    </Link>\n                </div>\n\n                {/* This div is intentionally left empty for grid balance */}\n                <div className=\"col-12 col-md-6 col-lg-9\"></div>\n            </div>\n\n            {/* AI Features Section */}\n            <h4 className=\"mb-3\">AI-Powered Features</h4>\n            <div className=\"row g-4 mb-5\">\n                {aiFeatureCards.map((card, index) => (\n                    <div key={index} className=\"col-12 col-md-6 col-lg-3\">\n                        <Link to={card.link} className=\"text-decoration-none h-100\">\n                            <div className={`card hover-card border-${card.color} h-100`}>\n                                <div className=\"card-body d-flex flex-column\">\n                                    <div className=\"d-flex align-items-center mb-2\">\n                                        <div className={`icon-circle bg-${card.color} text-white`}>\n                                            <i className={`fas ${card.icon}`}></i>\n                                        </div>\n                                        <h5 className=\"card-title mb-0 ms-3\">{card.title}</h5>\n                                    </div>\n                                    <p className=\"card-text text-muted flex-grow-1\">{card.description}</p>\n                                </div>\n                            </div>\n                        </Link>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Modal, Button, Form, Card, Container, Row, Col } from 'react-bootstrap';\nimport { supabase } from '../utils/supabaseClient';\nimport Spinner from '../components/Spinner';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useNavigate } from 'react-router-dom';\n\nconst styles = {\n  actionButton: {\n    display: 'inline-block',\n    opacity: 1,\n    visibility: 'visible'\n  }\n};\n\nconst HealthOverview = () => {\n  const [healthData, setHealthData] = useState([]);\n  const [userId, setUserId] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [newReport, setNewReport] = useState({ \n    disease_id: '', \n    since: '', \n    file: null \n  });\n  const [preview, setPreview] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const [notificationTimeout, setNotificationTimeout] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [userDiseases, setUserDiseases] = useState([]);\n  const [extractedParameters, setExtractedParameters] = useState({});\n\n  // Add these state variables for confirmation modal\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [reportToDelete, setReportToDelete] = useState(null);\n\n  const navigate = useNavigate();\n\n  // Define showNotification with useCallback\n  const showNotification = useCallback((message, type = 'info', duration = 5000) => {\n    // Clear any existing timeout\n    if (notificationTimeout) {\n      clearTimeout(notificationTimeout);\n      setNotificationTimeout(null);\n    }\n\n    setNotification({ message, type });\n    \n    // Set timeout to clear notification\n    const timeout = setTimeout(() => {\n      setNotification(null);\n      setNotificationTimeout(null);\n    }, duration);\n    \n    setNotificationTimeout(timeout);\n  }, [notificationTimeout]);\n\n  const fetchUserDiseases = useCallback(async (uid) => {\n    const { data, error } = await supabase\n      .from('user_diseases')\n      .select('*')\n      .eq('user_id', uid);\n    if (!error) setUserDiseases(data);\n  }, []);\n\n  const fetchHealthData = useCallback(async (uid) => {\n    setLoading(true);\n    try {\n      const { data, error } = await supabase\n        .from('healthrecords')\n        .select(`\n          *,\n          user_diseases(disease_name)\n        `)\n        .eq('user_id', uid);\n        \n      if (error) {\n        console.error('Error fetching health data:', error);\n        showNotification(`Error loading health data: ${error.message}`, 'danger');\n        return;\n      }\n      \n      setHealthData(data);\n    } catch (err) {\n      console.error('Exception fetching health data:', err);\n      showNotification(`Error: ${err.message}`, 'danger');\n    } finally {\n      setLoading(false);\n    }\n  }, [showNotification]);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      setLoading(true);\n      const { data: { user }, error } = await supabase.auth.getUser();\n      if (error) return;\n      if (user) {\n        setUserId(user.id);\n        fetchHealthData(user.id);\n        fetchUserDiseases(user.id);\n      }\n      setLoading(false);\n    };\n\n    fetchUser();\n  }, [fetchHealthData, fetchUserDiseases]);\n\n  const handleFileChange = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    \n    setNewReport({ ...newReport, file });\n    setLoading(true);\n    \n    try {\n      // Show preview for image files\n      if (file.type.startsWith('image/')) {\n        // Warn user that image analysis is temporarily disabled\n        showNotification('Image processing is temporarily unavailable. Please use PDF files for now.', 'warning');\n        setLoading(false);\n        return;\n      } else {\n        setPreview(null);\n      }\n      \n      // Create a FormData object to send the file\n      const formData = new FormData();\n      formData.append('file', file);\n      \n      // First, check if backend is responding with debug endpoint\n      try {\n        const debugResponse = await fetch('https://digihealth-backend.onrender.com/api/check-env');\n        if (!debugResponse.ok) {\n          console.warn('Backend environment check failed', await debugResponse.text());\n        } else {\n          const debugData = await debugResponse.json();\n          console.log('Backend environment status:', debugData);\n          \n          // Check if the OpenAI API key is missing\n          if (debugData.environment && debugData.environment.OPENAI_API_KEY === 'not set') {\n            showNotification('The AI service is currently unavailable. File upload will proceed without AI analysis.', 'warning', 10000);\n            \n            // Set default empty analysis structure\n            setExtractedParameters({\n              parameters: {},\n              aiAnalysis: {\n                conditions: [],\n                medications: [],\n                recommendations: \"AI analysis unavailable. Please review the document manually.\",\n                summary: \"This document was uploaded but could not be analyzed by AI due to service unavailability.\"\n              }\n            });\n            \n            // End processing here but allow normal upload flow to continue\n            setLoading(false);\n            return;\n          }\n        }\n      } catch (debugError) {\n        console.error('Error checking backend environment:', debugError);\n        // Continue processing, as this is just a pre-check\n      }\n      \n      // Send to backend for processing\n      console.log('Sending file to backend:', file.name, file.type, file.size);\n      const response = await fetch('https://digihealth-backend.onrender.com/api/process-file', {\n        method: 'POST',\n        body: formData,\n      });\n      \n      if (!response.ok) {\n        let errorMessage = 'Error processing file';\n        let errorData;\n        \n        try {\n          errorData = await response.json();\n          console.error('Backend error response:', errorData);\n          errorMessage = errorData.error || errorMessage;\n          \n          // Special handling for API key issues\n          if (errorData.details && (\n              errorData.details.includes('API key') || \n              errorData.details.includes('authentication') ||\n              errorData.details.includes('401'))\n          ) {\n            showNotification('The AI service is temporarily unavailable. Your file will be uploaded but not analyzed.', 'warning', 10000);\n            \n            // Set default empty analysis structure\n            setExtractedParameters({\n              parameters: {},\n              aiAnalysis: {\n                conditions: [],\n                medications: [],\n                recommendations: \"AI analysis unavailable. Please review the document manually.\",\n                summary: \"This document was uploaded but could not be analyzed by AI due to service unavailability.\"\n              }\n            });\n            \n            // End processing here but allow normal upload flow to continue\n            setLoading(false);\n            return;\n          }\n        } catch (e) {\n          console.error('Failed to parse error response', e);\n        }\n        \n        throw new Error(errorMessage);\n      }\n      \n      let result;\n      try {\n        result = await response.json();\n      console.log('Backend response:', result);\n\n        // Log the structure of the response for debugging\n        console.log('Response structure details:', {\n          hasParameters: Boolean(result.parameters),\n          parametersType: typeof result.parameters,\n          parametersKeys: result.parameters ? Object.keys(result.parameters) : [],\n          parametersValues: result.parameters ? Object.values(result.parameters).map(v => typeof v) : [],\n          hasAiAnalysis: Boolean(result.aiAnalysis),\n          aiAnalysisType: typeof result.aiAnalysis,\n          aiAnalysisKeys: result.aiAnalysis ? Object.keys(result.aiAnalysis) : [],\n          conditionsType: result.aiAnalysis?.conditions ? typeof result.aiAnalysis.conditions : 'undefined',\n          isConditionsArray: result.aiAnalysis?.conditions ? Array.isArray(result.aiAnalysis.conditions) : false,\n          medicationsType: result.aiAnalysis?.medications ? typeof result.aiAnalysis.medications : 'undefined',\n          isMedicationsArray: result.aiAnalysis?.medications ? Array.isArray(result.aiAnalysis.medications) : false\n        });\n        \n        // Ensure all parameter values are strings to avoid React rendering issues\n        if (result && result.parameters) {\n          Object.keys(result.parameters).forEach(key => {\n            const value = result.parameters[key];\n            if (value === null || value === undefined) {\n              result.parameters[key] = 'N/A';\n            } else if (typeof value === 'object') {\n              result.parameters[key] = JSON.stringify(value);\n            } else {\n              result.parameters[key] = String(value);\n            }\n          });\n        }\n        \n        // Ensure aiAnalysis and its properties exist and are correctly formatted\n        if (result && result.aiAnalysis) {\n          // Ensure conditions is an array of strings\n          if (!Array.isArray(result.aiAnalysis.conditions)) {\n            console.warn('Conditions is not an array, converting:', result.aiAnalysis.conditions);\n            \n            if (typeof result.aiAnalysis.conditions === 'string') {\n              // If it's a string, try to parse as JSON\n              try {\n                result.aiAnalysis.conditions = JSON.parse(result.aiAnalysis.conditions);\n              } catch {\n                // If parsing fails, make it a single-item array\n                result.aiAnalysis.conditions = [result.aiAnalysis.conditions];\n              }\n            } else if (!result.aiAnalysis.conditions) {\n              // If it doesn't exist or is null/undefined\n              result.aiAnalysis.conditions = [];\n            } else if (typeof result.aiAnalysis.conditions === 'object') {\n              // If it's a non-array object, convert to array of strings\n              result.aiAnalysis.conditions = Object.values(result.aiAnalysis.conditions).map(String);\n            } else {\n              // Fallback to empty array\n              result.aiAnalysis.conditions = [];\n            }\n          }\n          \n          // Ensure medications is an array of strings\n          if (!Array.isArray(result.aiAnalysis.medications)) {\n            console.warn('Medications is not an array, converting:', result.aiAnalysis.medications);\n            \n            if (typeof result.aiAnalysis.medications === 'string') {\n              try {\n                result.aiAnalysis.medications = JSON.parse(result.aiAnalysis.medications);\n              } catch {\n                result.aiAnalysis.medications = [result.aiAnalysis.medications];\n              }\n            } else if (!result.aiAnalysis.medications) {\n              result.aiAnalysis.medications = [];\n            } else if (typeof result.aiAnalysis.medications === 'object') {\n              result.aiAnalysis.medications = Object.values(result.aiAnalysis.medications).map(String);\n            } else {\n              result.aiAnalysis.medications = [];\n            }\n          }\n          \n          // Ensure all elements in arrays are strings\n          result.aiAnalysis.conditions = result.aiAnalysis.conditions\n            .filter(item => item !== null && item !== undefined)\n            .map(item => String(item));\n            \n          result.aiAnalysis.medications = result.aiAnalysis.medications\n            .filter(item => item !== null && item !== undefined)\n            .map(item => String(item));\n            \n          // Ensure summary and recommendations are strings\n          result.aiAnalysis.summary = String(result.aiAnalysis.summary || '');\n          result.aiAnalysis.recommendations = String(result.aiAnalysis.recommendations || '');\n        } else if (result) {\n          // Create default aiAnalysis if missing\n        result.aiAnalysis = {\n          conditions: [],\n          medications: [],\n            recommendations: '',\n            summary: ''\n          };\n        }\n      } catch (jsonError) {\n        console.error('Failed to parse response JSON:', jsonError);\n        throw new Error('Failed to parse server response. The file may be too large or in an unsupported format.');\n      }\n\n      // Add validation for the response structure\n      if (!result || (Object.keys(result).length === 0)) {\n        console.error('Empty response structure:', result);\n        throw new Error('Server returned an empty response');\n      }\n      \n      if (!result.parameters && !result.aiAnalysis) {\n        console.error('Invalid response structure:', result);\n        throw new Error('Server returned an invalid response structure');\n      }\n\n      setExtractedParameters(result);\n      \n      // Determine what message to show\n      let message;\n      if (result.parameters && Object.keys(result.parameters).length > 0) {\n        message = 'File processed successfully. Review the extracted information below.';\n      } else if (result.aiAnalysis && (\n        (result.aiAnalysis.summary && result.aiAnalysis.summary.length > 0) || \n        (result.aiAnalysis.conditions && result.aiAnalysis.conditions.length > 0) ||\n        (result.aiAnalysis.medications && result.aiAnalysis.medications.length > 0) ||\n        (result.aiAnalysis.recommendations && result.aiAnalysis.recommendations.length > 0)\n      )) {\n        message = 'No specific parameters were extracted, but AI analysis is available.';\n      } else {\n        message = 'File processed, but limited information could be extracted. You can still upload it.';\n      }\n      \n      // Show success notification\n      showNotification(message, 'success');\n      \n      console.log('Backend response structure details:', {\n        hasParameters: Boolean(result.parameters) && Object.keys(result.parameters).length > 0,\n        parametersCount: result.parameters ? Object.keys(result.parameters).length : 0,\n        hasAiAnalysis: Boolean(result.aiAnalysis),\n        summaryLength: result.aiAnalysis?.summary?.length || 0,\n        conditionsLength: result.aiAnalysis?.conditions?.length || 0,\n        medicationsLength: result.aiAnalysis?.medications?.length || 0,\n        recommendationsLength: result.aiAnalysis?.recommendations?.length || 0\n      });\n\n    } catch (error) {\n      console.error('Error processing file:', error);\n      \n      // Handle specific error cases\n      if (error.message.includes('API key') || error.message.includes('OpenAI')) {\n        showNotification('AI service is unavailable. Your file will be uploaded without analysis.', 'warning');\n        \n        // Set default empty analysis structure for upload to continue\n        setExtractedParameters({\n          parameters: {},\n          aiAnalysis: {\n            conditions: [],\n            medications: [],\n            recommendations: \"AI analysis unavailable. Please review the document manually.\",\n            summary: \"This document was uploaded but could not be analyzed by AI due to service unavailability.\"\n          }\n        });\n      } else {\n        showNotification(`Error processing file: ${error.message}`, 'danger');\n        setExtractedParameters({});\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n  \n    try {\n      if (!newReport.file) {\n        throw new Error('Please select a file to upload');\n      }\n      \n      if (!newReport.disease_id) {\n        throw new Error('Please select a disease');\n      }\n      \n      if (!newReport.since) {\n        throw new Error('Please select a date');\n      }\n      \n      // Upload file to Supabase Storage\n      const fileExt = newReport.file.name.split('.').pop();\n      const fileName = `${userId}/${Date.now()}.${fileExt}`;\n      \n      const { data: uploadData, error: uploadError } = await supabase.storage\n        .from('health-reports')\n        .upload(fileName, newReport.file);\n  \n      if (uploadError) {\n        console.error('Supabase storage upload error:', uploadError);\n        throw new Error(`Error uploading file: ${uploadError.message}`);\n      }\n  \n      // Get the public URL\n      const { data: { publicUrl } } = supabase.storage\n        .from('health-reports')\n        .getPublicUrl(fileName);\n  \n      // Insert report into healthrecords\n      const reportData = {\n          user_id: userId,\n          disease_id: newReport.disease_id,\n          since: newReport.since,\n          document_url: publicUrl,\n          created_at: new Date().toISOString(),\n        ai_summary: extractedParameters?.aiAnalysis?.summary ? \n          String(extractedParameters.aiAnalysis.summary).substring(0, 255) : \n          'No summary available'\n      };\n      \n      const { data: insertedReport, error: reportError } = await supabase\n        .from('healthrecords')\n        .insert([reportData])\n        .select()\n        .single();\n  \n      if (reportError) {\n        console.error('Error inserting report data:', reportError);\n        throw new Error(`Error saving report: ${reportError.message}`);\n      }\n  \n      // Save extracted parameters if any\n      if (extractedParameters?.parameters && Object.keys(extractedParameters.parameters).length > 0) {\n        const parameterData = Object.entries(extractedParameters.parameters).map(([key, value]) => ({\n          user_id: userId,\n          record_id: insertedReport.id,\n          parameter_name: key,\n          parameter_value: typeof value === 'object' ? \n            JSON.stringify(value).substring(0, 255) : \n            String(value || \"N/A\").substring(0, 255),\n          created_at: new Date().toISOString()\n        }));\n        \n        const { error: paramError } = await supabase\n          .from('health_parameters')\n          .insert(parameterData);\n      \n        if (paramError) {\n          console.error('Error saving parameters:', paramError);\n          // Continue with other operations even if parameter saving fails\n        }\n      }\n  \n      // Save conditions if any\n      if (extractedParameters?.aiAnalysis?.conditions?.length > 0) {\n        const conditionData = extractedParameters.aiAnalysis.conditions\n          .filter(condition => condition && condition.trim())\n          .map(condition => ({\n            record_id: insertedReport.id,\n            condition_name: String(condition).substring(0, 255),\n            user_id: userId,\n            created_at: new Date().toISOString()\n          }));\n        \n        const { error: condError } = await supabase\n          .from('report_conditions')\n          .insert(conditionData);\n      \n        if (condError) {\n          console.error('Error saving conditions:', condError);\n          // Continue with other operations even if conditions saving fails\n        }\n      }\n      \n      // Save medications if any\n      if (extractedParameters?.aiAnalysis?.medications?.length > 0) {\n        const medicationData = extractedParameters.aiAnalysis.medications\n          .filter(medication => medication && medication.trim())\n          .map(medication => ({\n            record_id: insertedReport.id,\n            medication_name: String(medication).substring(0, 255),\n            user_id: userId,\n            created_at: new Date().toISOString()\n          }));\n        \n        const { error: medError } = await supabase\n          .from('report_medications')\n          .insert(medicationData);\n      \n        if (medError) {\n          console.error('Error saving medications:', medError);\n          // Continue with other operations even if medications saving fails\n        }\n      }\n      \n      // Save recommendations if any\n      if (extractedParameters?.aiAnalysis?.recommendations) {\n        const { error: recError } = await supabase\n          .from('report_recommendations')\n          .insert([{\n            record_id: insertedReport.id,\n            recommendation_text: String(extractedParameters.aiAnalysis.recommendations).substring(0, 255),\n            user_id: userId,\n            created_at: new Date().toISOString()\n          }]);\n      \n        if (recError) {\n          console.error('Error saving recommendations:', recError);\n          // Continue with other operations even if recommendations saving fails\n        }\n      }\n  \n      // Refresh data\n      await fetchHealthData(userId);\n      \n      // Reset form\n      setShowModal(false);\n      setNewReport({ disease_id: '', since: '', file: null });\n      setPreview(null);\n      setExtractedParameters({});\n      \n      showNotification('Report uploaded successfully!', 'success');\n      \n    } catch (error) {\n      console.error('Error uploading report:', error);\n      showNotification(`Error uploading report: ${error.message}`, 'danger');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add these functions to your component\n  const handleDeleteReport = (reportId) => {\n    setReportToDelete(reportId);\n    setShowDeleteModal(true);\n  };\n\n  const confirmDelete = async () => {\n    setLoading(true);\n    try {\n      // First, get the report details using the ID\n      const { data: report, error: fetchError } = await supabase\n        .from('healthrecords')\n        .select('document_url')\n        .eq('id', reportToDelete)\n        .single();\n      \n      if (fetchError) {\n        console.error('Error fetching report:', fetchError);\n        throw new Error(`Error fetching report: ${fetchError.message}`);\n      }\n      \n      if (!report || !report.document_url) {\n        throw new Error('Report or document URL not found');\n      }\n\n      // Delete the file from storage first\n          const pathMatch = report.document_url.match(/health-reports\\/([^\\/]+)\\/([^\\/]+)$/);\n          if (pathMatch && pathMatch.length >= 3) {\n            const userFolder = pathMatch[1];\n        const fileName = pathMatch[2];\n        const storagePath = `${userFolder}/${fileName}`;\n          \n          const { error: storageError } = await supabase.storage\n            .from('health-reports')\n            .remove([storagePath]);\n          \n          if (storageError) {\n            console.error('Error deleting file:', storageError);\n          throw new Error(`Error deleting file: ${storageError.message}`);\n        }\n      }\n\n      // Then delete the record from the database\n      const { error: deleteError } = await supabase\n        .from('healthrecords')\n        .delete()\n        .eq('id', reportToDelete);\n      \n      if (deleteError) {\n        console.error('Error deleting record:', deleteError);\n        throw new Error(`Error deleting record: ${deleteError.message}`);\n      }\n\n      // Update UI\n      setHealthData(prevData => prevData.filter(report => report.id !== reportToDelete));\n      showNotification('Report deleted successfully', 'success');\n    } catch (error) {\n      console.error('Error in delete process:', error);\n      showNotification(`Error deleting report: ${error.message}`, 'danger');\n    } finally {\n      setLoading(false);\n      setShowDeleteModal(false);\n      setReportToDelete(null);\n    }\n  };\n\n  // Clean up timeout on component unmount\n  useEffect(() => {\n    return () => {\n      if (notificationTimeout) {\n        clearTimeout(notificationTimeout);\n      }\n    };\n  }, [notificationTimeout]);\n\n  // Add a test function to validate rendering with sample data\n  const testBackendResponse = async () => {\n    try {\n      showNotification('Testing with sample data...', 'info');\n      setLoading(true);\n      \n      const response = await fetch('https://digihealth-backend.onrender.com/api/test-response');\n      if (!response.ok) {\n        throw new Error('Error fetching test data');\n      }\n      \n      const result = await response.json();\n      console.log('Test response received:', result);\n      \n      // Set the extracted parameters with the test data\n      setExtractedParameters(result);\n      \n      showNotification('Test data loaded successfully! You can view it in the modal.', 'success');\n      \n      // Open the modal to display the test data\n      setNewReport({\n        disease_id: userDiseases.length > 0 ? userDiseases[0].id : '',\n        since: new Date().toISOString().split('T')[0],\n        file: null\n      });\n      setShowModal(true);\n    } catch (error) {\n      console.error('Error testing backend response:', error);\n      showNotification(`Error: ${error.message}`, 'danger');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container className=\"py-4\">\n      {loading && <Spinner />}\n      {notification && (\n        <div \n          className={`alert alert-${notification.type} position-fixed d-flex justify-content-between align-items-center`} \n          style={{\n            top: '20px', \n            right: '20px', \n            zIndex: 1050,\n            minWidth: '300px',\n            maxWidth: '500px',\n            boxShadow: '0 4px 8px rgba(0,0,0,0.1)'\n          }}\n          role=\"alert\"\n        >\n          <span>{notification.message}</span>\n          <button \n            type=\"button\" \n            className=\"btn-close ms-3\" \n            onClick={() => setNotification(null)}\n            aria-label=\"Close\"\n          ></button>\n        </div>\n      )}\n      <div className=\"d-flex justify-content-between align-items-center mb-4\">\n        <h2 className=\"text-primary\">Health Reports</h2>\n        <Button variant=\"primary\" onClick={() => setShowModal(true)}>+ Upload Report</Button>\n      </div>\n      \n      <Row className=\"g-4\">\n        {healthData.map((report) => (\n          <Col md={4} sm={6} key={report.id}>\n            <Card className=\"shadow-sm border-0 hover-card h-100\">\n              <Card.Body className=\"p-4 d-flex flex-column\">\n                <div className=\"d-flex align-items-center mb-3\">\n                  <div className=\"icon-circle bg-primary text-white me-3\">\n                    <i className=\"fas fa-file-medical\"></i>\n                  </div>\n                  <div>\n                    <Card.Title className=\"mb-1\">{report.user_diseases?.disease_name}</Card.Title>\n                    <Card.Text className=\"text-muted mb-0\">Since: {new Date(report.since).toLocaleDateString()}</Card.Text>\n                  </div>\n                </div>\n                <div className=\"mt-auto pt-3 d-flex justify-content-end gap-2\">\n                  <Button \n                    variant=\"outline-danger\" \n                    size=\"sm\" \n                    onClick={() => handleDeleteReport(report.id)}\n                    className=\"d-flex align-items-center\"\n                  >\n                    <i className=\"fas fa-trash me-1\"></i> Delete\n                  </Button>\n                  <Button \n                    variant=\"outline-primary\" \n                    size=\"sm\" \n                    onClick={() => window.open(report.document_url, '_blank')}\n                    className=\"d-flex align-items-center\"\n                  >\n                    <i className=\"fas fa-eye me-1\"></i> View\n                  </Button>\n                </div>\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n      \n      <Modal show={showModal} onHide={() => setShowModal(false)} centered size=\"md\">\n        <Modal.Header closeButton className=\"border-bottom-0 pb-0\">\n          <Modal.Title className=\"h4 fw-bold text-dark\">Upload New Health Report</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"pt-4\">\n          <Form onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label className=\"fw-bold d-flex align-items-center text-dark fs-6\">\n                <i className=\"fas fa-disease me-2 text-primary\"></i>\n                Select Health Condition\n              </Form.Label>\n              <div className=\"d-flex gap-2\">\n              <Form.Select \n                value={newReport.disease_id}\n                  onChange={(e) => {\n                    if (e.target.value === 'add_new') {\n                      setShowModal(false);\n                      navigate('/profile');\n                    } else {\n                      setNewReport({ ...newReport, disease_id: e.target.value });\n                    }\n                  }}\n                required\n                  className=\"form-select\"\n              >\n                  <option value=\"\">Choose a health condition</option>\n                {userDiseases.map((disease) => (\n                  <option key={disease.id} value={disease.id}>\n                    {disease.disease_name}\n                  </option>\n                ))}\n                  <option value=\"add_new\" className=\"text-primary\">\n                    + Add New Condition\n                  </option>\n              </Form.Select>\n                <Button \n                  variant=\"outline-primary\" \n                  size=\"sm\"\n                  onClick={() => {\n                    setShowModal(false);\n                    navigate('/profile');\n                  }}\n                  className=\"d-flex align-items-center\"\n                >\n                  <i className=\"fas fa-plus me-1\"></i> Add New\n                </Button>\n              </div>\n              <Form.Text className=\"text-muted small\">\n                Select an existing condition or add a new one to your profile\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label className=\"fw-bold d-flex align-items-center text-dark fs-6\">\n                <i className=\"fas fa-calendar-alt me-2 text-primary\"></i>\n                Report Date\n              </Form.Label>\n              <Form.Control \n                type=\"date\" \n                value={newReport.since}\n                onChange={(e) => setNewReport({ ...newReport, since: e.target.value })}\n                required\n                className=\"form-control\"\n              />\n              <Form.Text className=\"text-muted small\">\n                When was this report created?\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label className=\"fw-bold d-flex align-items-center text-dark fs-6\">\n                <i className=\"fas fa-file-upload me-2 text-primary\"></i>\n                Upload Report\n              </Form.Label>\n              <div className=\"border rounded p-3 text-center bg-light\">\n              <Form.Control \n                type=\"file\" \n                accept=\".pdf,.doc,.docx,.jpg,.jpeg,.png\" \n                onChange={handleFileChange}\n                required\n                  className=\"form-control\"\n                  style={{ display: 'none' }}\n                  id=\"file-upload\"\n                />\n                <label \n                  htmlFor=\"file-upload\" \n                  className=\"btn btn-outline-primary w-100 d-flex flex-column align-items-center justify-content-center\"\n                  style={{ minHeight: '120px', cursor: 'pointer' }}\n                >\n                  <i className=\"fas fa-cloud-upload-alt fa-2x mb-2 text-primary\"></i>\n                  <span className=\"h6 mb-1 text-dark\">Click to upload or drag and drop</span>\n                  <small className=\"text-muted\">Supported formats: PDF, DOC, DOCX, JPG, JPEG, PNG</small>\n                </label>\n              </div>\n              <Form.Text className=\"text-muted small\">\n                Upload your medical report or test results. Our AI will analyze the content automatically.\n              </Form.Text>\n            </Form.Group>\n\n            {preview && (\n              <div className=\"mb-3\">\n                <Form.Label className=\"fw-bold d-flex align-items-center text-dark fs-6\">\n                  <i className=\"fas fa-image me-2 text-primary\"></i>\n                  Preview\n                </Form.Label>\n                <img src={preview} alt=\"Preview\" className=\"img-fluid rounded shadow-sm\" />\n              </div>\n            )}\n\n            {extractedParameters?.aiAnalysis ? (\n              <div className=\"mb-3\">\n                <h5 className=\"fw-bold mb-2 d-flex align-items-center text-dark fs-6\">\n                  <i className=\"fas fa-robot me-2 text-primary\"></i>\n                  AI Analysis\n                </h5>\n                <div className=\"card border-0 shadow-sm\">\n                  <div className=\"card-body\">\n                    {extractedParameters.aiAnalysis.summary ? (\n                      <>\n                        <h6 className=\"fw-bold mb-2 d-flex align-items-center text-dark fs-6\">\n                          <i className=\"fas fa-file-alt me-2 text-primary\"></i>\n                          Summary\n                        </h6>\n                        <p className=\"mb-3 text-dark\">{String(extractedParameters.aiAnalysis.summary)}</p>\n                      </>\n                    ) : (\n                      <p className=\"text-muted\">No summary available for this document.</p>\n                    )}\n                    \n                    {extractedParameters.aiAnalysis.conditions && \n                      extractedParameters.aiAnalysis.conditions.length > 0 && (\n                      <>\n                        <h6 className=\"fw-bold mb-2 d-flex align-items-center text-dark fs-6\">\n                          <i className=\"fas fa-clipboard-list me-2 text-primary\"></i>\n                          Conditions Identified\n                        </h6>\n                        <ul className=\"list-group list-group-flush mb-3\">\n                          {extractedParameters.aiAnalysis.conditions.map((condition, index) => (\n                            <li key={index} className=\"list-group-item text-dark\">\n                              <i className=\"fas fa-check-circle text-success me-2\"></i>\n                              {String(condition)}\n                            </li>\n                          ))}\n                        </ul>\n                      </>\n                    )}\n                    \n                    {extractedParameters.aiAnalysis.medications && \n                      extractedParameters.aiAnalysis.medications.length > 0 && (\n                      <>\n                        <h6 className=\"fw-bold mb-2 d-flex align-items-center text-dark fs-6\">\n                          <i className=\"fas fa-pills me-2 text-primary\"></i>\n                          Medications\n                        </h6>\n                        <ul className=\"list-group list-group-flush mb-3\">\n                          {extractedParameters.aiAnalysis.medications.map((medication, index) => (\n                            <li key={index} className=\"list-group-item text-dark\">\n                              <i className=\"fas fa-pills text-info me-2\"></i>\n                              {String(medication)}\n                            </li>\n                          ))}\n                        </ul>\n                      </>\n                    )}\n                    \n                    {extractedParameters.aiAnalysis.recommendations && (\n                      <>\n                        <h6 className=\"fw-bold mb-2 d-flex align-items-center text-dark fs-6\">\n                          <i className=\"fas fa-lightbulb me-2 text-primary\"></i>\n                          Recommendations\n                        </h6>\n                        <p className=\"text-dark\">{String(extractedParameters.aiAnalysis.recommendations)}</p>\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ) : null}\n\n            <div className=\"d-flex justify-content-end mt-3\">\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                size=\"sm\"\n                disabled={loading}\n                className=\"px-3 d-flex align-items-center\"\n              >\n                {loading ? (\n                  <>\n                    <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                    Uploading...\n                  </>\n                ) : (\n                  <>\n                    <i className=\"fas fa-upload me-2\"></i>\n                    Upload Report\n                  </>\n                )}\n            </Button>\n            </div>\n          </Form>\n        </Modal.Body>\n      </Modal>\n\n      <Modal show={showDeleteModal} onHide={() => setShowDeleteModal(false)} centered>\n        <Modal.Header closeButton className=\"border-bottom-0 pb-0\">\n          <Modal.Title className=\"h4 fw-bold text-dark\">Confirm Delete</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"pt-4\">\n          <div className=\"text-center mb-4\">\n            <i className=\"fas fa-exclamation-triangle text-warning fa-3x mb-3\"></i>\n            <h5 className=\"fw-bold text-dark mb-3\">Are you sure you want to delete this report?</h5>\n            <p className=\"text-dark\">This action cannot be undone.</p>\n          </div>\n          <div className=\"d-flex justify-content-center gap-3\">\n            <Button \n              variant=\"outline-secondary\" \n              onClick={() => setShowDeleteModal(false)}\n              size=\"sm\"\n              className=\"px-3\"\n            >\n              Cancel\n            </Button>\n            <Button \n              variant=\"danger\" \n              onClick={confirmDelete}\n              size=\"sm\"\n              className=\"px-3 bg-danger text-white\"\n              disabled={loading}\n            >\n              {loading ? (\n                <>\n                  <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                  Deleting...\n                </>\n              ) : (\n                'Delete'\n              )}\n            </Button>\n          </div>\n        </Modal.Body>\n      </Modal>\n\n      <div className=\"mt-5 pt-5 border-top\">\n        <h5>Troubleshooting</h5>\n        <Button \n          variant=\"outline-secondary\" \n          size=\"sm\" \n          onClick={testBackendResponse}\n          className=\"mt-2\"\n        >\n          Test Rendering\n        </Button>\n        <small className=\"d-block text-muted mt-2\">\n          Use this button to test rendering with sample data if you encounter issues.\n        </small>\n      </div>\n    </Container>\n  );\n};\n\nexport default HealthOverview;\n","import React, { useState, useEffect } from 'react';\nimport { supabase } from '../utils/supabaseClient';\nimport Spinner from '../components/Spinner';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaHistory, FaPlus, FaTrash, FaEdit } from 'react-icons/fa';\nimport '../styles.css';\n\nconst MedicalHistoryPage = () => {\n  const [medicalRecords, setMedicalRecords] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [notification, setNotification] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentRecord, setCurrentRecord] = useState({\n    id: null,\n    condition: '',\n    diagnosis_date: '',\n    doctor: '',\n    treatment: '',\n    notes: ''\n  });\n\n  useEffect(() => {\n    fetchMedicalRecords();\n  }, []);\n\n  const fetchMedicalRecords = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        window.location.href = '/';\n        return;\n      }\n      \n      const { data, error } = await supabase\n        .from('medical_history')\n        .select('*')\n        .eq('user_id', user.id)\n        .order('diagnosis_date', { ascending: false });\n        \n      if (error) throw error;\n      setMedicalRecords(data || []);\n    } catch (error) {\n      console.error('Error fetching medical records:', error);\n      setNotification({ message: 'Error fetching medical records.', type: 'danger' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentRecord(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    \n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        window.location.href = '/';\n        return;\n      }\n      \n      if (isEditing) {\n        // Update existing record\n        const { error } = await supabase\n          .from('medical_history')\n          .update({\n            condition: currentRecord.condition,\n            diagnosis_date: currentRecord.diagnosis_date,\n            doctor: currentRecord.doctor,\n            treatment: currentRecord.treatment,\n            notes: currentRecord.notes\n          })\n          .eq('id', currentRecord.id);\n          \n        if (error) throw error;\n        setNotification({ message: 'Medical record updated successfully!', type: 'success' });\n      } else {\n        // Add new record\n        const { error } = await supabase\n          .from('medical_history')\n          .insert([{\n            condition: currentRecord.condition,\n            diagnosis_date: currentRecord.diagnosis_date,\n            doctor: currentRecord.doctor,\n            treatment: currentRecord.treatment,\n            notes: currentRecord.notes,\n            user_id: user.id\n          }]);\n          \n        if (error) throw error;\n        setNotification({ message: 'Medical record added successfully!', type: 'success' });\n      }\n      \n      // Reset form and fetch updated records\n      resetForm();\n      fetchMedicalRecords();\n    } catch (error) {\n      console.error('Error saving medical record:', error);\n      setNotification({ message: 'Error saving medical record.', type: 'danger' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEdit = (record) => {\n    setIsEditing(true);\n    setCurrentRecord(record);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  const handleDelete = async (id) => {\n    if (!window.confirm('Are you sure you want to delete this record?')) return;\n    \n    setLoading(true);\n    try {\n      const { error } = await supabase\n        .from('medical_history')\n        .delete()\n        .eq('id', id);\n        \n      if (error) throw error;\n      \n      setMedicalRecords(medicalRecords.filter(record => record.id !== id));\n      setNotification({ message: 'Medical record deleted successfully!', type: 'success' });\n    } catch (error) {\n      console.error('Error deleting medical record:', error);\n      setNotification({ message: 'Error deleting medical record.', type: 'danger' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetForm = () => {\n    setIsEditing(false);\n    setCurrentRecord({\n      id: null,\n      condition: '',\n      diagnosis_date: '',\n      doctor: '',\n      treatment: '',\n      notes: ''\n    });\n  };\n\n  if (loading && medicalRecords.length === 0) {\n    return <Spinner />;\n  }\n\n  return (\n    <div className=\"container mt-4\">\n      {notification && (\n        <div className={`alert alert-${notification.type} text-center`}>\n          {notification.message}\n        </div>\n      )}\n      \n      <h1 className=\"text-center mb-4\">\n        <FaHistory className=\"me-2\" /> Medical History\n      </h1>\n      \n      <div className=\"card shadow-lg p-4 mb-4\">\n        <h3>{isEditing ? 'Edit Medical Record' : 'Add New Medical Record'}</h3>\n        <form onSubmit={handleSubmit}>\n          <div className=\"row\">\n            <div className=\"col-md-6 mb-3\">\n              <label htmlFor=\"condition\" className=\"form-label\">Condition/Diagnosis</label>\n              <input \n                type=\"text\" \n                className=\"form-control\" \n                id=\"condition\" \n                name=\"condition\" \n                value={currentRecord.condition} \n                onChange={handleChange} \n                required \n              />\n            </div>\n            <div className=\"col-md-6 mb-3\">\n              <label htmlFor=\"diagnosis_date\" className=\"form-label\">Diagnosis Date</label>\n              <input \n                type=\"date\" \n                className=\"form-control\" \n                id=\"diagnosis_date\" \n                name=\"diagnosis_date\" \n                value={currentRecord.diagnosis_date} \n                onChange={handleChange} \n                required \n              />\n            </div>\n          </div>\n          \n          <div className=\"row\">\n            <div className=\"col-md-6 mb-3\">\n              <label htmlFor=\"doctor\" className=\"form-label\">Doctor/Healthcare Provider</label>\n              <input \n                type=\"text\" \n                className=\"form-control\" \n                id=\"doctor\" \n                name=\"doctor\" \n                value={currentRecord.doctor} \n                onChange={handleChange} \n              />\n            </div>\n            <div className=\"col-md-6 mb-3\">\n              <label htmlFor=\"treatment\" className=\"form-label\">Treatment</label>\n              <input \n                type=\"text\" \n                className=\"form-control\" \n                id=\"treatment\" \n                name=\"treatment\" \n                value={currentRecord.treatment} \n                onChange={handleChange} \n              />\n            </div>\n          </div>\n          \n          <div className=\"mb-3\">\n            <label htmlFor=\"notes\" className=\"form-label\">Notes</label>\n            <textarea \n              className=\"form-control\" \n              id=\"notes\" \n              name=\"notes\" \n              rows=\"3\" \n              value={currentRecord.notes} \n              onChange={handleChange}\n            ></textarea>\n          </div>\n          \n          <div className=\"d-flex justify-content-between\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              {isEditing ? <><FaEdit className=\"me-2\" /> Update Record</> : <><FaPlus className=\"me-2\" /> Add Record</>}\n            </button>\n            {isEditing && (\n              <button type=\"button\" className=\"btn btn-secondary\" onClick={resetForm}>\n                Cancel\n              </button>\n            )}\n          </div>\n        </form>\n      </div>\n      \n      <h2 className=\"text-center mb-3\">Your Medical History</h2>\n      \n      {medicalRecords.length === 0 ? (\n        <div className=\"alert alert-info text-center\">\n          No medical records found. Add your first record above.\n        </div>\n      ) : (\n        <div className=\"table-responsive\">\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th>Condition</th>\n                <th>Diagnosis Date</th>\n                <th>Doctor</th>\n                <th>Treatment</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {medicalRecords.map((record) => (\n                <tr key={record.id}>\n                  <td>{record.condition}</td>\n                  <td>{new Date(record.diagnosis_date).toLocaleDateString()}</td>\n                  <td>{record.doctor}</td>\n                  <td>{record.treatment}</td>\n                  <td>\n                    <button \n                      className=\"btn btn-sm btn-primary me-2\" \n                      onClick={() => handleEdit(record)}\n                    >\n                      <FaEdit />\n                    </button>\n                    <button \n                      className=\"btn btn-sm btn-danger\" \n                      onClick={() => handleDelete(record.id)}\n                    >\n                      <FaTrash />\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MedicalHistoryPage; ","// src/utils/main.js\r\nimport { supabase } from './supabaseClient';\r\n\r\n// Deprecation warning\r\nconsole.warn('Importing supabase from utils/main.js is deprecated. Please import directly from utils/supabaseClient.js');\r\n\r\n// Remove the duplicate Supabase client initialization\r\nexport { supabase };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../utils/main';\r\nimport Spinner from '../components/Spinner';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FaDiagnoses, FaPlus, FaTrash, FaEdit, FaChartLine } from 'react-icons/fa';\r\nimport '../styles.css';\r\n\r\nconst ChronicDiseaseManagementPage = () => {\r\n  const [chronicDiseases, setChronicDiseases] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [notification, setNotification] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentDisease, setCurrentDisease] = useState({\r\n    id: null,\r\n    disease_name: '',\r\n    diagnosis_date: '',\r\n    severity: 'Mild',\r\n    medications: '',\r\n    symptoms: '',\r\n    notes: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchChronicDiseases();\r\n  }, []);\r\n\r\n  const fetchChronicDiseases = async () => {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) {\r\n        window.location.href = '/';\r\n        return;\r\n      }\r\n      \r\n      const { data, error } = await supabase\r\n        .from('chronic_diseases')\r\n        .select('*')\r\n        .eq('user_id', user.id)\r\n        .order('diagnosis_date', { ascending: false });\r\n        \r\n      if (error) throw error;\r\n      setChronicDiseases(data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching chronic diseases:', error);\r\n      setNotification({ message: 'Error fetching chronic diseases.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentDisease(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) {\r\n        window.location.href = '/';\r\n        return;\r\n      }\r\n      \r\n      if (isEditing) {\r\n        // Update existing disease\r\n        const { error } = await supabase\r\n          .from('chronic_diseases')\r\n          .update({\r\n            disease_name: currentDisease.disease_name,\r\n            diagnosis_date: currentDisease.diagnosis_date,\r\n            severity: currentDisease.severity,\r\n            medications: currentDisease.medications,\r\n            symptoms: currentDisease.symptoms,\r\n            notes: currentDisease.notes\r\n          })\r\n          .eq('id', currentDisease.id);\r\n          \r\n        if (error) throw error;\r\n        setNotification({ message: 'Chronic disease updated successfully!', type: 'success' });\r\n      } else {\r\n        // Add new disease\r\n        const { error } = await supabase\r\n          .from('chronic_diseases')\r\n          .insert([{\r\n            disease_name: currentDisease.disease_name,\r\n            diagnosis_date: currentDisease.diagnosis_date,\r\n            severity: currentDisease.severity,\r\n            medications: currentDisease.medications,\r\n            symptoms: currentDisease.symptoms,\r\n            notes: currentDisease.notes,\r\n            user_id: user.id\r\n          }]);\r\n          \r\n        if (error) throw error;\r\n        setNotification({ message: 'Chronic disease added successfully!', type: 'success' });\r\n      }\r\n      \r\n      // Reset form and fetch updated diseases\r\n      resetForm();\r\n      fetchChronicDiseases();\r\n    } catch (error) {\r\n      console.error('Error saving chronic disease:', error);\r\n      setNotification({ message: 'Error saving chronic disease.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (disease) => {\r\n    setIsEditing(true);\r\n    setCurrentDisease(disease);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Are you sure you want to delete this chronic disease record?')) return;\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const { error } = await supabase\r\n        .from('chronic_diseases')\r\n        .delete()\r\n        .eq('id', id);\r\n        \r\n      if (error) throw error;\r\n      \r\n      setChronicDiseases(chronicDiseases.filter(disease => disease.id !== id));\r\n      setNotification({ message: 'Chronic disease deleted successfully!', type: 'success' });\r\n    } catch (error) {\r\n      console.error('Error deleting chronic disease:', error);\r\n      setNotification({ message: 'Error deleting chronic disease.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setIsEditing(false);\r\n    setCurrentDisease({\r\n      id: null,\r\n      disease_name: '',\r\n      diagnosis_date: '',\r\n      severity: 'Mild',\r\n      medications: '',\r\n      symptoms: '',\r\n      notes: ''\r\n    });\r\n  };\r\n\r\n  const getSeverityBadgeClass = (severity) => {\r\n    switch (severity) {\r\n      case 'Mild':\r\n        return 'bg-success';\r\n      case 'Moderate':\r\n        return 'bg-warning text-dark';\r\n      case 'Severe':\r\n        return 'bg-danger';\r\n      default:\r\n        return 'bg-secondary';\r\n    }\r\n  };\r\n\r\n  if (loading && chronicDiseases.length === 0) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      {notification && (\r\n        <div className={`alert alert-${notification.type} text-center`}>\r\n          {notification.message}\r\n        </div>\r\n      )}\r\n      \r\n      <h1 className=\"text-center mb-4\">\r\n        <FaDiagnoses className=\"me-2\" /> Chronic Disease Management\r\n      </h1>\r\n      \r\n      <div className=\"card shadow-lg p-4 mb-4\">\r\n        <h3>{isEditing ? 'Edit Chronic Disease' : 'Add New Chronic Disease'}</h3>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 mb-3\">\r\n              <label htmlFor=\"disease_name\" className=\"form-label\">Disease Name</label>\r\n              <input \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                id=\"disease_name\" \r\n                name=\"disease_name\" \r\n                value={currentDisease.disease_name} \r\n                onChange={handleChange} \r\n                required \r\n              />\r\n            </div>\r\n            <div className=\"col-md-6 mb-3\">\r\n              <label htmlFor=\"diagnosis_date\" className=\"form-label\">Diagnosis Date</label>\r\n              <input \r\n                type=\"date\" \r\n                className=\"form-control\" \r\n                id=\"diagnosis_date\" \r\n                name=\"diagnosis_date\" \r\n                value={currentDisease.diagnosis_date} \r\n                onChange={handleChange} \r\n                required \r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 mb-3\">\r\n              <label htmlFor=\"severity\" className=\"form-label\">Severity</label>\r\n              <select \r\n                className=\"form-control\" \r\n                id=\"severity\" \r\n                name=\"severity\" \r\n                value={currentDisease.severity} \r\n                onChange={handleChange}\r\n              >\r\n                <option value=\"Mild\">Mild</option>\r\n                <option value=\"Moderate\">Moderate</option>\r\n                <option value=\"Severe\">Severe</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-md-6 mb-3\">\r\n              <label htmlFor=\"medications\" className=\"form-label\">Medications</label>\r\n              <input \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                id=\"medications\" \r\n                name=\"medications\" \r\n                value={currentDisease.medications} \r\n                onChange={handleChange} \r\n                placeholder=\"Separate multiple medications with commas\"\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"symptoms\" className=\"form-label\">Symptoms</label>\r\n            <input \r\n              type=\"text\" \r\n              className=\"form-control\" \r\n              id=\"symptoms\" \r\n              name=\"symptoms\" \r\n              value={currentDisease.symptoms} \r\n              onChange={handleChange} \r\n              placeholder=\"Separate multiple symptoms with commas\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"notes\" className=\"form-label\">Notes</label>\r\n            <textarea \r\n              className=\"form-control\" \r\n              id=\"notes\" \r\n              name=\"notes\" \r\n              rows=\"3\" \r\n              value={currentDisease.notes} \r\n              onChange={handleChange}\r\n            ></textarea>\r\n          </div>\r\n          \r\n          <div className=\"d-flex justify-content-between\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              {isEditing ? <><FaEdit className=\"me-2\" /> Update Disease</> : <><FaPlus className=\"me-2\" /> Add Disease</>}\r\n            </button>\r\n            {isEditing && (\r\n              <button type=\"button\" className=\"btn btn-secondary\" onClick={resetForm}>\r\n                Cancel\r\n              </button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n      \r\n      <h2 className=\"text-center mb-3\">Your Chronic Diseases</h2>\r\n      \r\n      {chronicDiseases.length === 0 ? (\r\n        <div className=\"alert alert-info text-center\">\r\n          No chronic diseases found. Add your first record above.\r\n        </div>\r\n      ) : (\r\n        <div className=\"row\">\r\n          {chronicDiseases.map((disease) => (\r\n            <div key={disease.id} className=\"col-md-6 col-lg-4 mb-4\">\r\n              <div className=\"card h-100 shadow\">\r\n                <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n                  <h5 className=\"mb-0\">{disease.disease_name}</h5>\r\n                  <span className={`badge ${getSeverityBadgeClass(disease.severity)}`}>\r\n                    {disease.severity}\r\n                  </span>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <p><strong>Diagnosed:</strong> {new Date(disease.diagnosis_date).toLocaleDateString()}</p>\r\n                  \r\n                  {disease.medications && (\r\n                    <p>\r\n                      <strong>Medications:</strong><br />\r\n                      {disease.medications.split(',').map((med, index) => (\r\n                        <span key={index} className=\"badge bg-info text-dark me-1 mb-1\">\r\n                          {med.trim()}\r\n                        </span>\r\n                      ))}\r\n                    </p>\r\n                  )}\r\n                  \r\n                  {disease.symptoms && (\r\n                    <p>\r\n                      <strong>Symptoms:</strong><br />\r\n                      {disease.symptoms.split(',').map((symptom, index) => (\r\n                        <span key={index} className=\"badge bg-secondary me-1 mb-1\">\r\n                          {symptom.trim()}\r\n                        </span>\r\n                      ))}\r\n                    </p>\r\n                  )}\r\n                  \r\n                  {disease.notes && (\r\n                    <p>\r\n                      <strong>Notes:</strong><br />\r\n                      {disease.notes}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                <div className=\"card-footer d-flex justify-content-between\">\r\n                  <button \r\n                    className=\"btn btn-sm btn-primary\" \r\n                    onClick={() => handleEdit(disease)}\r\n                  >\r\n                    <FaEdit className=\"me-1\" /> Edit\r\n                  </button>\r\n                  <button \r\n                    className=\"btn btn-sm btn-danger\" \r\n                    onClick={() => handleDelete(disease.id)}\r\n                  >\r\n                    <FaTrash className=\"me-1\" /> Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChronicDiseaseManagementPage; ","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Container, Row, Col, Card, Form, Button, Spinner, ListGroup, Modal } from 'react-bootstrap';\r\nimport { supabase } from '../utils/supabaseClient';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { \r\n  FaSyringe, FaPlus, FaTrash, FaEdit, FaCalendarCheck, \r\n  FaCalendarAlt, FaUserMd, FaInfoCircle, FaShieldVirus, \r\n  FaHospital, FaClock, FaStickyNote, FaHistory, FaListAlt\r\n} from 'react-icons/fa';\r\nimport './VaccinationHistoryPage.css';\r\n\r\nconst VaccinationHistoryPage = () => {\r\n  const [vaccinations, setVaccinations] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [notification, setNotification] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [activeTab, setActiveTab] = useState('records'); // 'records' or 'form'\r\n  const [currentVaccination, setCurrentVaccination] = useState({\r\n    id: null,\r\n    vaccine_name: '',\r\n    date_administered: '',\r\n    administered_by: '',\r\n    lot_number: '',\r\n    next_dose_date: '',\r\n    notes: ''\r\n  });\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const fetchVaccinations = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      \r\n      if (!user) {\r\n        console.log('No user logged in');\r\n        setLoading(false);\r\n        return; // Return early instead of redirecting\r\n      }\r\n      \r\n      const { data, error } = await supabase\r\n        .from('vaccinations')\r\n        .select('*')\r\n        .eq('user_id', user.id)\r\n        .order('vaccine_date', { ascending: false });\r\n      \r\n      if (error) {\r\n        console.error('Error fetching vaccinations:', error);\r\n        return;\r\n      }\r\n      \r\n      setVaccinations(data || []);\r\n    } catch (error) {\r\n      console.error('Unexpected error:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    fetchVaccinations();\r\n  }, [fetchVaccinations]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentVaccination(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) {\r\n        window.location.href = '/';\r\n        return;\r\n      }\r\n      \r\n      if (isEditing) {\r\n        // Update existing vaccination\r\n        const { error } = await supabase\r\n          .from('vaccinations')\r\n          .update({\r\n            vaccine_name: currentVaccination.vaccine_name,\r\n            date_administered: currentVaccination.date_administered,\r\n            administered_by: currentVaccination.administered_by,\r\n            lot_number: currentVaccination.lot_number,\r\n            next_dose_date: currentVaccination.next_dose_date,\r\n            notes: currentVaccination.notes\r\n          })\r\n          .eq('id', currentVaccination.id);\r\n          \r\n        if (error) throw error;\r\n        setNotification({ message: 'Vaccination record updated successfully!', type: 'success' });\r\n      } else {\r\n        // Add new vaccination\r\n        const { error } = await supabase\r\n          .from('vaccinations')\r\n          .insert([{\r\n            vaccine_name: currentVaccination.vaccine_name,\r\n            date_administered: currentVaccination.date_administered,\r\n            administered_by: currentVaccination.administered_by,\r\n            lot_number: currentVaccination.lot_number,\r\n            next_dose_date: currentVaccination.next_dose_date,\r\n            notes: currentVaccination.notes,\r\n            user_id: user.id\r\n          }]);\r\n          \r\n        if (error) throw error;\r\n        setNotification({ message: 'Vaccination record added successfully!', type: 'success' });\r\n      }\r\n      \r\n      // Reset form and fetch updated vaccinations\r\n      resetForm();\r\n      fetchVaccinations();\r\n      setActiveTab('records'); // Switch back to records view after successful submission\r\n    } catch (error) {\r\n      console.error('Error saving vaccination record:', error);\r\n      setNotification({ message: 'Error saving vaccination record.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (vaccination) => {\r\n    setIsEditing(true);\r\n    setCurrentVaccination(vaccination);\r\n    setActiveTab('form');\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Are you sure you want to delete this vaccination record?')) return;\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const { error } = await supabase\r\n        .from('vaccinations')\r\n        .delete()\r\n        .eq('id', id);\r\n        \r\n      if (error) throw error;\r\n      \r\n      setVaccinations(vaccinations.filter(vaccination => vaccination.id !== id));\r\n      setNotification({ message: 'Vaccination record deleted successfully!', type: 'success' });\r\n    } catch (error) {\r\n      console.error('Error deleting vaccination record:', error);\r\n      setNotification({ message: 'Error deleting vaccination record.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setIsEditing(false);\r\n    setCurrentVaccination({\r\n      id: null,\r\n      vaccine_name: '',\r\n      date_administered: '',\r\n      administered_by: '',\r\n      lot_number: '',\r\n      next_dose_date: '',\r\n      notes: ''\r\n    });\r\n  };\r\n\r\n  // Check if a vaccination is due soon (within 30 days)\r\n  const isDueSoon = (nextDoseDate) => {\r\n    if (!nextDoseDate) return false;\r\n    \r\n    const today = new Date();\r\n    const dueDate = new Date(nextDoseDate);\r\n    const diffTime = dueDate - today;\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    \r\n    return diffDays >= 0 && diffDays <= 30;\r\n  };\r\n\r\n  // Check if a vaccination is overdue\r\n  const isOverdue = (nextDoseDate) => {\r\n    if (!nextDoseDate) return false;\r\n    \r\n    const today = new Date();\r\n    const dueDate = new Date(nextDoseDate);\r\n    \r\n    return dueDate < today;\r\n  };\r\n\r\n  // Get status text and class\r\n  const getStatusInfo = (vaccination) => {\r\n    if (isOverdue(vaccination.next_dose_date)) {\r\n      return { text: 'Overdue', className: 'status-overdue' };\r\n    } else if (isDueSoon(vaccination.next_dose_date)) {\r\n      return { text: 'Due Soon', className: 'status-due-soon' };\r\n    } else if (vaccination.next_dose_date) {\r\n      return { text: 'Scheduled', className: '' };\r\n    } else {\r\n      return { text: 'Completed', className: 'status-completed' };\r\n    }\r\n  };\r\n\r\n  // Add function to handle opening the add modal\r\n  const handleOpenAddModal = () => {\r\n    resetForm(); // Ensure the form is reset\r\n    setShowAddModal(true);\r\n  };\r\n\r\n  if (loading && vaccinations.length === 0) {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const hasUpcomingVaccines = vaccinations.some(vax => \r\n    isDueSoon(vax.next_dose_date) || isOverdue(vax.next_dose_date)\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <h1 className=\"my-4 page-title\">\r\n        <FaSyringe className=\"me-2 text-primary\" /> Vaccination History\r\n      </h1>\r\n      \r\n      {loading ? (\r\n        <div className=\"text-center\">\r\n          <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"tabs-container\">\r\n            <div className=\"nav-tabs-wrapper\">\r\n              <ul className=\"nav nav-tabs\">\r\n                <li className=\"nav-item\">\r\n                  <button \r\n                    className={`nav-link ${activeTab === 'records' ? 'active' : ''}`} \r\n                    onClick={() => setActiveTab('records')}\r\n                  >\r\n                    <FaListAlt className=\"me-2\" /> Vaccination Records\r\n                    {hasUpcomingVaccines && <span className=\"upcoming-badge ms-2\">!</span>}\r\n                  </button>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <button \r\n                    className={`nav-link ${activeTab === 'form' ? 'active' : ''}`} \r\n                    onClick={() => {\r\n                      setActiveTab('form');\r\n                      if (isEditing) {\r\n                        resetForm();\r\n                      }\r\n                    }}\r\n                  >\r\n                    <FaPlus className=\"me-2\" /> {isEditing ? 'Edit Record' : 'Add New Record'}\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            \r\n            <div className=\"tab-content\">\r\n              {activeTab === 'records' && (\r\n                <div className=\"tab-pane active\">\r\n                  {vaccinations.length === 0 ? (\r\n                    <div className=\"empty-state\">\r\n                      <FaSyringe className=\"mb-3\" style={{ fontSize: '3rem', color: 'var(--secondary-color)' }} />\r\n                      <h3 className=\"text-primary\">No vaccination records found</h3>\r\n                      <p>Click \"Add New Record\" tab to record your first vaccination</p>\r\n                      <Button variant=\"primary\" onClick={() => setActiveTab('form')}>\r\n                        <FaPlus className=\"me-2\" /> Add New Record\r\n                      </Button>\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      {/* Upcoming Vaccinations Section */}\r\n                      {hasUpcomingVaccines && (\r\n                        <div className=\"upcoming-section\">\r\n                          <div className=\"upcoming-header\">\r\n                            <h3 className=\"mb-0\"><FaCalendarCheck className=\"me-2\" /> Upcoming & Overdue Vaccinations</h3>\r\n                          </div>\r\n                          <div className=\"upcoming-body\">\r\n                            <div className=\"table-responsive\">\r\n                              <table className=\"table\">\r\n                                <thead>\r\n                                  <tr>\r\n                                    <th>Vaccine</th>\r\n                                    <th>Due Date</th>\r\n                                    <th>Status</th>\r\n                                    <th>Actions</th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {vaccinations\r\n                                    .filter(vax => isDueSoon(vax.next_dose_date) || isOverdue(vax.next_dose_date))\r\n                                    .map(vax => (\r\n                                      <tr key={`upcoming-${vax.id}`}>\r\n                                        <td><FaSyringe className=\"me-2 text-primary\" /> {vax.vaccine_name}</td>\r\n                                        <td><FaCalendarAlt className=\"me-2 text-primary\" /> {new Date(vax.next_dose_date).toLocaleDateString()}</td>\r\n                                        <td>\r\n                                          <span className={`status-badge ${isOverdue(vax.next_dose_date) ? 'status-overdue' : 'status-due-soon'}`}>\r\n                                            {isOverdue(vax.next_dose_date) ? 'Overdue' : 'Due Soon'}\r\n                                          </span>\r\n                                        </td>\r\n                                        <td>\r\n                                          <button className=\"btn btn-sm btn-primary me-2\" onClick={() => handleEdit(vax)}>\r\n                                            <FaEdit className=\"me-1\" /> Edit\r\n                                          </button>\r\n                                        </td>\r\n                                      </tr>\r\n                                    ))\r\n                                  }\r\n                                </tbody>\r\n                              </table>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      <h2 className=\"section-title\">Your Vaccination History</h2>\r\n                      \r\n                      <div className=\"vaccination-cards\">\r\n                        {vaccinations.map((vaccination) => {\r\n                          const status = getStatusInfo(vaccination);\r\n                          return (\r\n                            <div className=\"vaccine-card\" key={vaccination.id}>\r\n                              <h4><FaSyringe className=\"me-2 text-primary\" />{vaccination.vaccine_name}</h4>\r\n                              \r\n                              <div className=\"vaccine-card-info\">\r\n                                <p>\r\n                                  <strong><FaCalendarAlt className=\"me-1 text-primary\" /> Date Administered:</strong> \r\n                                  {new Date(vaccination.date_administered).toLocaleDateString()}\r\n                                </p>\r\n                                {vaccination.administered_by && (\r\n                                  <p><strong><FaUserMd className=\"me-1 text-primary\" /> Healthcare Provider:</strong> {vaccination.administered_by}</p>\r\n                                )}\r\n                                {vaccination.lot_number && (\r\n                                  <p><strong><FaInfoCircle className=\"me-1 text-primary\" /> Lot Number:</strong> {vaccination.lot_number}</p>\r\n                                )}\r\n                                <p>\r\n                                  <strong><FaCalendarCheck className=\"me-1 text-primary\" /> Next Dose:</strong> \r\n                                  {vaccination.next_dose_date\r\n                                    ? new Date(vaccination.next_dose_date).toLocaleDateString()\r\n                                    : 'N/A'\r\n                                  }\r\n                                  {status.className && (\r\n                                    <span className={`status-badge ${status.className}`}>\r\n                                      {status.text}\r\n                                    </span>\r\n                                  )}\r\n                                </p>\r\n                                {vaccination.notes && (\r\n                                  <p><strong><FaStickyNote className=\"me-1 text-primary\" /> Notes:</strong> {vaccination.notes}</p>\r\n                                )}\r\n                              </div>\r\n                              \r\n                              <div className=\"vaccine-card-actions\">\r\n                                <button \r\n                                  className=\"btn btn-primary\" \r\n                                  onClick={() => handleEdit(vaccination)}\r\n                                >\r\n                                  <FaEdit className=\"me-2\" /> Edit\r\n                                </button>\r\n                                <button \r\n                                  className=\"btn btn-danger\" \r\n                                  onClick={() => handleDelete(vaccination.id)}\r\n                                >\r\n                                  <FaTrash className=\"me-2\" /> Delete\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n              \r\n              {activeTab === 'form' && (\r\n                <div className=\"tab-pane active\">\r\n                  <div className=\"vaccine-form-card\">\r\n                    <h3 className=\"form-title\">\r\n                      {isEditing ? (\r\n                        <><FaEdit className=\"me-2 text-primary\" /> Edit Vaccination Record</>\r\n                      ) : (\r\n                        <><FaPlus className=\"me-2 text-primary\" /> Add New Vaccination</>\r\n                      )}\r\n                    </h3>\r\n                    \r\n                    <form onSubmit={handleSubmit} className=\"vaccination-form\">\r\n                      <div className=\"form-section\">\r\n                        <h4 className=\"form-section-title\">\r\n                          <FaShieldVirus className=\"me-2 text-primary\" /> Basic Information\r\n                        </h4>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-6 mb-3\">\r\n                            <label htmlFor=\"vaccine_name\" className=\"form-label text-dark\">\r\n                              <span className=\"text-danger\">*</span> Vaccine Name\r\n                            </label>\r\n                            <input \r\n                              type=\"text\" \r\n                              className=\"form-control\" \r\n                              id=\"vaccine_name\" \r\n                              name=\"vaccine_name\" \r\n                              value={currentVaccination.vaccine_name} \r\n                              onChange={handleChange} \r\n                              placeholder=\"Enter vaccine name\"\r\n                              required \r\n                            />\r\n                            <small className=\"form-text text-muted\">\r\n                              <FaInfoCircle className=\"me-1\" /> E.g., Influenza, COVID-19, Tetanus, HPV\r\n                            </small>\r\n                          </div>\r\n                          <div className=\"col-md-6 mb-3\">\r\n                            <label htmlFor=\"date_administered\" className=\"form-label text-dark\">\r\n                              <span className=\"text-danger\">*</span> Date Administered\r\n                            </label>\r\n                            <input \r\n                              type=\"date\" \r\n                              className=\"form-control\" \r\n                              id=\"date_administered\" \r\n                              name=\"date_administered\" \r\n                              value={currentVaccination.date_administered} \r\n                              onChange={handleChange} \r\n                              required \r\n                            />\r\n                            <small className=\"form-text text-muted\">\r\n                              <FaCalendarAlt className=\"me-1\" /> When was the vaccine administered?\r\n                            </small>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      <div className=\"form-section\">\r\n                        <h4 className=\"form-section-title\">\r\n                          <FaUserMd className=\"me-2 text-primary\" /> Additional Details\r\n                        </h4>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-6 mb-3\">\r\n                            <label htmlFor=\"administered_by\" className=\"form-label text-dark\">\r\n                              <FaHospital className=\"me-1 text-primary\" /> Healthcare Provider\r\n                            </label>\r\n                            <input \r\n                              type=\"text\" \r\n                              className=\"form-control\" \r\n                              id=\"administered_by\" \r\n                              name=\"administered_by\" \r\n                              value={currentVaccination.administered_by} \r\n                              onChange={handleChange} \r\n                              placeholder=\"Enter provider name or facility\"\r\n                            />\r\n                            <small className=\"form-text text-muted\">\r\n                              <FaInfoCircle className=\"me-1\" /> Doctor, clinic, or healthcare facility\r\n                            </small>\r\n                          </div>\r\n                          <div className=\"col-md-6 mb-3\">\r\n                            <label htmlFor=\"lot_number\" className=\"form-label text-dark\">\r\n                              <FaInfoCircle className=\"me-1 text-primary\" /> Lot Number\r\n                            </label>\r\n                            <input \r\n                              type=\"text\" \r\n                              className=\"form-control\" \r\n                              id=\"lot_number\" \r\n                              name=\"lot_number\" \r\n                              value={currentVaccination.lot_number} \r\n                              onChange={handleChange} \r\n                              placeholder=\"Enter vaccine lot number\"\r\n                            />\r\n                            <small className=\"form-text text-muted\">\r\n                              <FaInfoCircle className=\"me-1\" /> Found on your vaccination card\r\n                            </small>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-6 mb-3\">\r\n                            <label htmlFor=\"next_dose_date\" className=\"form-label text-dark\">\r\n                              <FaCalendarCheck className=\"me-1 text-primary\" /> Next Dose Date\r\n                            </label>\r\n                            <input \r\n                              type=\"date\" \r\n                              className=\"form-control\" \r\n                              id=\"next_dose_date\" \r\n                              name=\"next_dose_date\" \r\n                              value={currentVaccination.next_dose_date} \r\n                              onChange={handleChange}\r\n                            />\r\n                            <small className=\"form-text text-muted\">\r\n                              <FaClock className=\"me-1\" /> If another dose is required\r\n                            </small>\r\n                          </div>\r\n                          <div className=\"col-md-6 mb-3\">\r\n                            <label htmlFor=\"notes\" className=\"form-label text-dark\">\r\n                              <FaStickyNote className=\"me-1 text-primary\" /> Notes\r\n                            </label>\r\n                            <textarea \r\n                              className=\"form-control\" \r\n                              id=\"notes\" \r\n                              name=\"notes\" \r\n                              rows=\"3\" \r\n                              value={currentVaccination.notes} \r\n                              onChange={handleChange}\r\n                              placeholder=\"Any reactions, side effects, or important information\"\r\n                            ></textarea>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      <div className=\"form-actions\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-lg\">\r\n                          {isEditing ? (\r\n                            <><FaEdit className=\"me-2\" /> Update Record</>\r\n                          ) : (\r\n                            <><FaPlus className=\"me-2\" /> Save Record</>\r\n                          )}\r\n                        </button>\r\n                        {isEditing && (\r\n                          <button type=\"button\" className=\"btn btn-secondary btn-lg ms-3\" onClick={resetForm}>\r\n                            Cancel\r\n                          </button>\r\n                        )}\r\n                        <button \r\n                          type=\"button\" \r\n                          className=\"btn btn-light btn-lg ms-auto\" \r\n                          onClick={() => setActiveTab('records')}\r\n                        >\r\n                          Back to Records\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n      \r\n      {notification && (\r\n        <div className={`alert alert-${notification.type} text-center alert-dismissible fade show`}>\r\n          {notification.message}\r\n          <button \r\n            type=\"button\" \r\n            className=\"btn-close\" \r\n            onClick={() => setNotification(null)}\r\n            aria-label=\"Close\"\r\n          ></button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Add Vaccination Modal */}\r\n      <Modal \r\n        show={showAddModal} \r\n        onHide={() => setShowAddModal(false)} \r\n        size=\"lg\" \r\n        centered\r\n        className=\"vaccination-modal\"\r\n      >\r\n        <Modal.Header closeButton className=\"border-bottom-0 pb-0\">\r\n          <Modal.Title>\r\n            <FaPlus className=\"me-2 text-primary\" /> Add New Vaccination\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"pt-0\">\r\n          <div className=\"vaccine-form-card border-0\">\r\n            <form onSubmit={(e) => {\r\n              e.preventDefault();\r\n              handleSubmit(e);\r\n              setShowAddModal(false);\r\n            }} className=\"vaccination-form\">\r\n              <div className=\"form-section\">\r\n                <h4 className=\"form-section-title text-dark\">\r\n                  <FaShieldVirus className=\"me-2 text-primary\" /> Basic Information\r\n                </h4>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6 mb-3\">\r\n                    <label htmlFor=\"vaccine_name\" className=\"form-label text-dark\">\r\n                      <span className=\"text-danger\">*</span> Vaccine Name\r\n                    </label>\r\n                    <input \r\n                      type=\"text\" \r\n                      className=\"form-control\" \r\n                      id=\"vaccine_name\" \r\n                      name=\"vaccine_name\" \r\n                      value={currentVaccination.vaccine_name} \r\n                      onChange={handleChange} \r\n                      placeholder=\"Enter vaccine name\"\r\n                      required \r\n                    />\r\n                    <small className=\"form-text text-muted\">\r\n                      <FaInfoCircle className=\"me-1\" /> E.g., Influenza, COVID-19, Tetanus, HPV\r\n                    </small>\r\n                  </div>\r\n                  <div className=\"col-md-6 mb-3\">\r\n                    <label htmlFor=\"date_administered\" className=\"form-label text-dark\">\r\n                      <span className=\"text-danger\">*</span> Date Administered\r\n                    </label>\r\n                    <input \r\n                      type=\"date\" \r\n                      className=\"form-control\" \r\n                      id=\"date_administered\" \r\n                      name=\"date_administered\" \r\n                      value={currentVaccination.date_administered} \r\n                      onChange={handleChange} \r\n                      required \r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"form-section\">\r\n                <h4 className=\"form-section-title text-dark\">\r\n                  <FaUserMd className=\"me-2 text-primary\" /> Additional Details\r\n                </h4>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6 mb-3\">\r\n                    <label htmlFor=\"administered_by\" className=\"form-label text-dark\">\r\n                      Healthcare Provider\r\n                    </label>\r\n                    <input \r\n                      type=\"text\" \r\n                      className=\"form-control\" \r\n                      id=\"administered_by\" \r\n                      name=\"administered_by\" \r\n                      value={currentVaccination.administered_by} \r\n                      onChange={handleChange} \r\n                      placeholder=\"Enter provider name or facility\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6 mb-3\">\r\n                    <label htmlFor=\"lot_number\" className=\"form-label text-dark\">\r\n                      Lot Number\r\n                    </label>\r\n                    <input \r\n                      type=\"text\" \r\n                      className=\"form-control\" \r\n                      id=\"lot_number\" \r\n                      name=\"lot_number\" \r\n                      value={currentVaccination.lot_number} \r\n                      onChange={handleChange} \r\n                      placeholder=\"Enter vaccine lot number\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6 mb-3\">\r\n                    <label htmlFor=\"next_dose_date\" className=\"form-label text-dark\">\r\n                      <FaCalendarCheck className=\"me-1 text-primary\" /> Next Dose Date\r\n                    </label>\r\n                    <input \r\n                      type=\"date\" \r\n                      className=\"form-control\" \r\n                      id=\"next_dose_date\" \r\n                      name=\"next_dose_date\" \r\n                      value={currentVaccination.next_dose_date} \r\n                      onChange={handleChange}\r\n                    />\r\n                    <small className=\"form-text text-muted\">\r\n                      <FaClock className=\"me-1\" /> If another dose is required\r\n                    </small>\r\n                  </div>\r\n                  <div className=\"col-md-6 mb-3\">\r\n                    <label htmlFor=\"notes\" className=\"form-label text-dark\">\r\n                      <FaStickyNote className=\"me-1 text-primary\" /> Notes\r\n                    </label>\r\n                    <textarea \r\n                      className=\"form-control\" \r\n                      id=\"notes\" \r\n                      name=\"notes\" \r\n                      rows=\"2\" \r\n                      value={currentVaccination.notes} \r\n                      onChange={handleChange}\r\n                      placeholder=\"Any reactions, side effects, or important information\"\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"d-flex justify-content-end mt-3\">\r\n                <Button variant=\"secondary\" className=\"me-2\" onClick={() => setShowAddModal(false)}>\r\n                  Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  <FaPlus className=\"me-2\" /> Save Vaccination\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default VaccinationHistoryPage; ","import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\nimport Spinner from '../components/Spinner';\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\r\nimport { \r\n  FaPills, FaTrash, FaPlus, FaExclamationTriangle, FaHistory, \r\n  FaBell, FaCheck, FaTimes, FaListAlt, FaEdit, FaCalendarAlt \r\n} from 'react-icons/fa';\r\nimport './MedicationTracker.css';\r\n\r\nconst MedicationTracker = () => {\r\n  const [medications, setMedications] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [notification, setNotification] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('medications'); // 'medications' or 'add'\r\n  const [newMedication, setNewMedication] = useState({\r\n    name: '',\r\n    total_tablets: '',\r\n    dose_per_intake: '',\r\n    times_per_day: 1,\r\n    frequency: 'daily',\r\n    selected_days: [],\r\n    reminder_time: '08:00'\r\n  });\r\n  const [history, setHistory] = useState([]);\r\n  const [showHistory, setShowHistory] = useState(false);\r\n  const [activeMedication, setActiveMedication] = useState(null);\r\n  const [hasLowStock, setHasLowStock] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchMedications();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Check if any medication has low stock\r\n    const checkLowStock = medications.some(med => \r\n      med.remaining_tablets <= (med.dose_per_intake * med.times_per_day * 3)\r\n    );\r\n    setHasLowStock(checkLowStock);\r\n  }, [medications]);\r\n\r\n  const fetchMedications = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) {\r\n        window.location.href = '/';\r\n        return;\r\n      }\r\n      \r\n      const { data, error } = await supabase\r\n        .from('medications')\r\n        .select('*')\r\n        .eq('user_id', user.id)\r\n        .order('name', { ascending: true });\r\n        \r\n      if (error) throw error;\r\n      setMedications(data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching medications:', error);\r\n      setNotification({ message: 'Error fetching medications.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddMedication = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMedication.name || !newMedication.total_tablets || !newMedication.dose_per_intake) {\r\n      setNotification({ message: 'Please fill all required fields.', type: 'danger' });\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) {\r\n        window.location.href = '/';\r\n        return;\r\n      }\r\n\r\n      const { error } = await supabase\r\n        .from('medications')\r\n        .insert([{\r\n          name: newMedication.name,\r\n          total_tablets: parseInt(newMedication.total_tablets),\r\n          dose_per_intake: parseInt(newMedication.dose_per_intake),\r\n          times_per_day: parseInt(newMedication.times_per_day),\r\n          frequency: newMedication.frequency,\r\n          selected_days: newMedication.selected_days,\r\n          reminder_time: newMedication.reminder_time,\r\n          user_id: user.id,\r\n          remaining_tablets: parseInt(newMedication.total_tablets)\r\n        }]);\r\n\r\n      if (error) throw error;\r\n      \r\n      setNewMedication({\r\n        name: '',\r\n        total_tablets: '',\r\n        dose_per_intake: '',\r\n        times_per_day: 1,\r\n        frequency: 'daily',\r\n        selected_days: [],\r\n        reminder_time: '08:00'\r\n      });\r\n      \r\n      setNotification({ message: 'Medication added successfully!', type: 'success' });\r\n      fetchMedications();\r\n      setActiveTab('medications'); // Switch back to medications list after adding\r\n    } catch (error) {\r\n      console.error('Error adding medication:', error);\r\n      setNotification({ message: 'Error adding medication.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Are you sure you want to delete this medication?')) return;\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const { error } = await supabase\r\n        .from('medications')\r\n        .delete()\r\n        .eq('id', id);\r\n        \r\n      if (error) throw error;\r\n      \r\n      setMedications(medications.filter(med => med.id !== id));\r\n      setNotification({ message: 'Medication deleted successfully!', type: 'success' });\r\n    } catch (error) {\r\n      console.error('Error deleting medication:', error);\r\n      setNotification({ message: 'Error deleting medication.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchHistory = async (medicationId) => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('medication_history')\r\n        .select('*')\r\n        .eq('medication_id', medicationId)\r\n        .order('taken_at', { ascending: false })\r\n        .limit(30);\r\n\r\n      if (error) throw error;\r\n      setHistory(data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching history:', error);\r\n    }\r\n  };\r\n\r\n  const handleTakeDose = async (medication) => {\r\n    const remaining = medication.remaining_tablets - medication.dose_per_intake;\r\n    \r\n    if (remaining < 0) {\r\n      setNotification({ message: 'Not enough tablets remaining!', type: 'danger' });\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const { error: updateError } = await supabase\r\n        .from('medications')\r\n        .update({ \r\n          remaining_tablets: remaining,\r\n          last_taken_at: new Date().toISOString() \r\n        })\r\n        .eq('id', medication.id);\r\n\r\n      if (updateError) throw updateError;\r\n\r\n      const { error: historyError } = await supabase\r\n        .from('medication_history')\r\n        .insert([{\r\n          medication_id: medication.id,\r\n          user_id: medication.user_id,\r\n          status: 'taken',\r\n          taken_at: new Date().toISOString()\r\n        }]);\r\n\r\n      if (historyError) throw historyError;\r\n\r\n      setNotification({ message: 'Dose recorded successfully!', type: 'success' });\r\n      fetchMedications();\r\n    } catch (error) {\r\n      console.error('Error recording dose:', error);\r\n      setNotification({ message: 'Error recording dose.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleMissDose = async (medication) => {\r\n    try {\r\n      const { error } = await supabase\r\n        .from('medication_history')\r\n        .insert([{\r\n          medication_id: medication.id,\r\n          user_id: medication.user_id,\r\n          status: 'missed',\r\n          taken_at: new Date().toISOString()\r\n        }]);\r\n\r\n      if (error) throw error;\r\n\r\n      setNotification({ message: 'Missed dose recorded.', type: 'warning' });\r\n      if (activeMedication?.id === medication.id) {\r\n        fetchHistory(medication.id);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error recording missed dose:', error);\r\n      setNotification({ message: 'Error recording missed dose.', type: 'danger' });\r\n    }\r\n  };\r\n\r\n  const showMedicationHistory = (medication) => {\r\n    setActiveMedication(medication);\r\n    fetchHistory(medication.id);\r\n    setShowHistory(true);\r\n  };\r\n\r\n  const handleDaySelection = (day) => {\r\n    setNewMedication(prev => {\r\n      const newDays = prev.selected_days.includes(day)\r\n        ? prev.selected_days.filter(d => d !== day)\r\n        : [...prev.selected_days, day];\r\n      return { ...prev, selected_days: newDays };\r\n    });\r\n  };\r\n\r\n  const renderMedicationsList = () => {\r\n    if (medications.length === 0) {\r\n      return (\r\n        <div className=\"empty-state\">\r\n          <FaPills className=\"mb-3\" style={{ fontSize: '3rem', color: 'var(--secondary-color)' }} />\r\n          <h3 className=\"text-primary\">No medications found</h3>\r\n          <p>Click \"Add New Medication\" to record your first medication</p>\r\n          <Button variant=\"primary\" onClick={() => setActiveTab('add')}>\r\n            <FaPlus className=\"me-2\" /> Add New Medication\r\n          </Button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Identify medications with low stock\r\n    const lowStockMeds = medications.filter(med => \r\n      med.remaining_tablets <= (med.dose_per_intake * med.times_per_day * 3)\r\n    );\r\n\r\n    return (\r\n      <>\r\n        {lowStockMeds.length > 0 && (\r\n          <div className=\"upcoming-section mb-4\">\r\n            <div className=\"upcoming-header\">\r\n              <h3 className=\"mb-0\"><FaExclamationTriangle className=\"me-2 text-primary\" /> Low Stock Medications</h3>\r\n            </div>\r\n            <div className=\"upcoming-body\">\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Medication</th>\r\n                      <th>Remaining</th>\r\n                      <th>Per Dose</th>\r\n                      <th>Actions</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {lowStockMeds.map(med => (\r\n                      <tr key={`low-stock-${med.id}`}>\r\n                        <td><FaPills className=\"me-2 text-primary\" /> {med.name}</td>\r\n                        <td>{med.remaining_tablets} tablets</td>\r\n                        <td>{med.dose_per_intake} tablets</td>\r\n                        <td>\r\n                          <button \r\n                            className=\"btn btn-sm btn-primary me-2\"\r\n                            onClick={() => {\r\n                              setActiveTab('add');\r\n                              // You could add functionality here to pre-fill the form for restock\r\n                            }}\r\n                          >\r\n                            <FaPlus className=\"me-1\" /> Restock\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <h2 className=\"section-title\">Your Medications</h2>\r\n        \r\n        <div className=\"row\">\r\n          {medications.map((medication) => (\r\n            <div key={medication.id} className=\"col-md-6 col-lg-4 mb-4\">\r\n              <div className=\"medication-card\">\r\n                <h4>{medication.name}</h4>\r\n                <p><strong>Total Tablets:</strong> {medication.total_tablets}</p>\r\n                <p><strong>Tablets per Dose:</strong> {medication.dose_per_intake}</p>\r\n                <p><strong>Times per Day:</strong> {\r\n                  medication.times_per_day === 1 ? 'Once a Day' :\r\n                  medication.times_per_day === 2 ? 'Twice a Day' :\r\n                  medication.times_per_day === 3 ? 'Three Times a Day' :\r\n                  'Four Times a Day'\r\n                }</p>\r\n                <p><strong>Frequency:</strong> {\r\n                  medication.frequency === 'daily' ? 'Daily' :\r\n                  medication.frequency === 'twice_week' ? 'Twice a Week' :\r\n                  medication.frequency === 'thrice_week' ? 'Three Times a Week' :\r\n                  medication.frequency === 'once_week' ? 'Once a Week' :\r\n                  'Alternate Days'\r\n                }</p>\r\n                {medication.selected_days && medication.selected_days.length > 0 && (\r\n                  <p><strong>Days:</strong> {medication.selected_days.join(', ')}</p>\r\n                )}\r\n                <p><strong>Remaining:</strong> {medication.remaining_tablets}</p>\r\n                <p><strong>Reminder Time:</strong> {medication.reminder_time}</p>\r\n                \r\n                {medication.remaining_tablets <= (medication.dose_per_intake * medication.times_per_day * 3) && (\r\n                  <p className=\"text-danger\">\r\n                    <FaExclamationTriangle className=\"me-2\" />\r\n                    Low stock! Please restock soon.\r\n                  </p>\r\n                )}\r\n                \r\n                <div className=\"btn-group\">\r\n                  <button\r\n                    className=\"btn btn-success\"\r\n                    onClick={() => handleTakeDose(medication)}\r\n                  >\r\n                    <FaCheck className=\"me-2\" /> Take\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-warning\"\r\n                    onClick={() => handleMissDose(medication)}\r\n                  >\r\n                    <FaTimes className=\"me-2\" /> Missed\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-info\"\r\n                    onClick={() => showMedicationHistory(medication)}\r\n                  >\r\n                    <FaHistory className=\"me-2\" /> History\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => handleDelete(medication.id)}\r\n                  >\r\n                    <FaTrash />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderAddMedicationForm = () => {\r\n    return (\r\n      <div className=\"medication-form-card\">\r\n        <h3 className=\"form-title\">\r\n          <FaPlus className=\"me-2 text-primary\" /> Add New Medication\r\n        </h3>\r\n        \r\n        <form onSubmit={handleAddMedication} className=\"medication-form\">\r\n          <div className=\"form-section\">\r\n            <h4 className=\"form-section-title\">\r\n              <FaPills className=\"me-2 text-primary\" /> Basic Information\r\n            </h4>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 mb-3\">\r\n                <label htmlFor=\"medication_name\" className=\"form-label text-dark\">\r\n                  <span className=\"text-danger\">*</span> Medication Name\r\n                </label>\r\n                <input \r\n                  type=\"text\" \r\n                  className=\"form-control\" \r\n                  id=\"medication_name\" \r\n                  value={newMedication.name}\r\n                  onChange={(e) => setNewMedication(prev => ({ ...prev, name: e.target.value }))}\r\n                  placeholder=\"e.g., Paracetamol\"\r\n                  required \r\n                />\r\n              </div>\r\n              <div className=\"col-md-6 mb-3\">\r\n                <label htmlFor=\"total_tablets\" className=\"form-label text-dark\">\r\n                  <span className=\"text-danger\">*</span> Total Tablets\r\n                </label>\r\n                <input \r\n                  type=\"number\" \r\n                  className=\"form-control\" \r\n                  id=\"total_tablets\" \r\n                  value={newMedication.total_tablets}\r\n                  onChange={(e) => setNewMedication(prev => ({ ...prev, total_tablets: e.target.value }))}\r\n                  placeholder=\"e.g., 30\"\r\n                  required \r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"form-section\">\r\n            <h4 className=\"form-section-title\">\r\n              <FaBell className=\"me-2 text-primary\" /> Dosage Information\r\n            </h4>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4 mb-3\">\r\n                <label htmlFor=\"dose_per_intake\" className=\"form-label text-dark\">\r\n                  <span className=\"text-danger\">*</span> Tablets per Dose\r\n                </label>\r\n                <input \r\n                  type=\"number\" \r\n                  className=\"form-control\" \r\n                  id=\"dose_per_intake\" \r\n                  value={newMedication.dose_per_intake}\r\n                  onChange={(e) => setNewMedication(prev => ({ ...prev, dose_per_intake: e.target.value }))}\r\n                  placeholder=\"e.g., 2\"\r\n                  required \r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 mb-3\">\r\n                <label htmlFor=\"times_per_day\" className=\"form-label text-dark\">\r\n                  Times per Day\r\n                </label>\r\n                <select\r\n                  className=\"form-control\"\r\n                  id=\"times_per_day\"\r\n                  value={newMedication.times_per_day}\r\n                  onChange={(e) => setNewMedication(prev => ({ ...prev, times_per_day: e.target.value }))}\r\n                >\r\n                  <option value=\"1\">Once a Day</option>\r\n                  <option value=\"2\">Twice a Day</option>\r\n                  <option value=\"3\">Three Times a Day</option>\r\n                  <option value=\"4\">Four Times a Day</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3\">\r\n                <label htmlFor=\"reminder_time\" className=\"form-label text-dark\">\r\n                  <FaCalendarAlt className=\"me-1 text-primary\" /> Reminder Time\r\n                </label>\r\n                <input\r\n                  type=\"time\"\r\n                  className=\"form-control\"\r\n                  id=\"reminder_time\"\r\n                  value={newMedication.reminder_time}\r\n                  onChange={(e) => setNewMedication(prev => ({ ...prev, reminder_time: e.target.value }))}\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 mb-3\">\r\n                <label htmlFor=\"frequency\" className=\"form-label text-dark\">\r\n                  Frequency\r\n                </label>\r\n                <select\r\n                  className=\"form-control\"\r\n                  id=\"frequency\"\r\n                  value={newMedication.frequency}\r\n                  onChange={(e) => setNewMedication(prev => ({ ...prev, frequency: e.target.value, selected_days: [] }))}\r\n                >\r\n                  <option value=\"daily\">Daily</option>\r\n                  <option value=\"twice_week\">Twice a Week</option>\r\n                  <option value=\"thrice_week\">Three Times a Week</option>\r\n                  <option value=\"once_week\">Once a Week</option>\r\n                  <option value=\"alternate\">Alternate Days</option>\r\n                </select>\r\n              </div>\r\n              {(newMedication.frequency === 'twice_week' || \r\n                newMedication.frequency === 'thrice_week' || \r\n                newMedication.frequency === 'once_week') && (\r\n                <div className=\"col-md-6 mb-3\">\r\n                  <label className=\"form-label text-dark\">Select Days</label>\r\n                  <div className=\"d-flex flex-wrap gap-2\">\r\n                    {['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'].map(day => (\r\n                      <button\r\n                        key={day}\r\n                        type=\"button\"\r\n                        className={`btn btn-sm ${newMedication.selected_days.includes(day) ? 'btn-primary' : 'btn-outline-primary'}`}\r\n                        onClick={() => handleDaySelection(day)}\r\n                      >\r\n                        {day.substring(0, 3)}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"form-actions\">\r\n            <button type=\"submit\" className=\"btn btn-primary btn-lg\">\r\n              <FaPlus className=\"me-2\" /> Add Medication\r\n            </button>\r\n            <button \r\n              type=\"button\" \r\n              className=\"btn btn-light btn-lg ms-auto\" \r\n              onClick={() => setActiveTab('medications')}\r\n            >\r\n              Back to Medications\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (loading && medications.length === 0) {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <h1 className=\"my-4 page-title\">\r\n        <FaPills className=\"me-2 text-primary\" /> Medication Tracker\r\n      </h1>\r\n\r\n      {notification && (\r\n        <div className={`alert alert-${notification.type} text-center alert-dismissible fade show`}>\r\n          {notification.message}\r\n          <button \r\n            type=\"button\" \r\n            className=\"btn-close\" \r\n            onClick={() => setNotification(null)}\r\n            aria-label=\"Close\"\r\n          ></button>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"tabs-container\">\r\n        <div className=\"nav-tabs-wrapper\">\r\n          <ul className=\"nav nav-tabs\">\r\n            <li className=\"nav-item\">\r\n              <button \r\n                className={`nav-link ${activeTab === 'medications' ? 'active' : ''}`} \r\n                onClick={() => setActiveTab('medications')}\r\n              >\r\n                <FaListAlt className=\"me-2 text-primary\" /> Your Medications\r\n                {hasLowStock && <span className=\"upcoming-badge ms-2\">!</span>}\r\n              </button>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <button \r\n                className={`nav-link ${activeTab === 'add' ? 'active' : ''}`} \r\n                onClick={() => setActiveTab('add')}\r\n              >\r\n                <FaPlus className=\"me-2 text-primary\" /> Add New Medication\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        \r\n        <div className=\"tab-content\">\r\n          {activeTab === 'medications' && (\r\n            <div className=\"tab-pane active\">\r\n              {renderMedicationsList()}\r\n            </div>\r\n          )}\r\n          \r\n          {activeTab === 'add' && (\r\n            <div className=\"tab-pane active\">\r\n              {renderAddMedicationForm()}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {showHistory && activeMedication && (\r\n        <div className=\"history-section\">\r\n          <h3>\r\n            <FaHistory className=\"me-2\" />\r\n            History for {activeMedication.name}\r\n          </h3>\r\n          <table className=\"history-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Time</th>\r\n                <th>Status</th>\r\n                <th>Notes</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {history.length > 0 ? (\r\n                history.map((record) => (\r\n                  <tr key={record.id}>\r\n                    <td>{new Date(record.taken_at).toLocaleDateString()}</td>\r\n                    <td>{new Date(record.taken_at).toLocaleTimeString()}</td>\r\n                    <td>\r\n                      <span className={`status-badge status-${record.status}`}>\r\n                        {record.status.charAt(0).toUpperCase() + record.status.slice(1)}\r\n                      </span>\r\n                    </td>\r\n                    <td>{record.notes || '-'}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"4\" className=\"text-center\">No history records found</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n          <button\r\n            className=\"btn btn-secondary mt-3\"\r\n            onClick={() => setShowHistory(false)}\r\n          >\r\n            Close History\r\n          </button>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MedicationTracker;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\nimport Spinner from '../components/Spinner';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FaChartLine, FaWeight, FaHeartbeat, FaTint, FaLungs, FaPlus, FaTimes } from 'react-icons/fa';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport '../styles.css';\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst HealthAnalyticsPage = () => {\r\n  const [healthData, setHealthData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [notification, setNotification] = useState(null);\r\n  const [selectedMetric, setSelectedMetric] = useState('weight');\r\n  const [timeRange, setTimeRange] = useState('6months');\r\n  const [chartData, setChartData] = useState(null);\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const [newMetric, setNewMetric] = useState({\r\n    weight: '',\r\n    heart_rate: '',\r\n    blood_pressure_systolic: '',\r\n    blood_pressure_diastolic: '',\r\n    blood_sugar: '',\r\n    oxygen_saturation: '',\r\n    recorded_at: new Date().toISOString().split('T')[0]\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchHealthData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (healthData.length > 0) {\r\n      prepareChartData();\r\n    }\r\n  }, [healthData, selectedMetric, timeRange]);\r\n\r\n  const fetchHealthData = async () => {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) {\r\n        window.location.href = '/';\r\n        return;\r\n      }\r\n      \r\n      const { data, error } = await supabase\r\n        .from('health_metrics')\r\n        .select('*')\r\n        .eq('user_id', user.id)\r\n        .order('recorded_at', { ascending: true });\r\n        \r\n      if (error) throw error;\r\n      setHealthData(data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching health data:', error);\r\n      setNotification({ message: 'Error fetching health data.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddMetric = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) {\r\n        window.location.href = '/';\r\n        return;\r\n      }\r\n      \r\n      // Filter out empty values\r\n      const metricData = Object.fromEntries(\r\n        Object.entries(newMetric).filter(([_, value]) => value !== '')\r\n      );\r\n      \r\n      // Add user_id to the data\r\n      metricData.user_id = user.id;\r\n      \r\n      const { error } = await supabase\r\n        .from('health_metrics')\r\n        .insert([metricData]);\r\n        \r\n      if (error) throw error;\r\n      \r\n      setNotification({ message: 'Health metrics added successfully!', type: 'success' });\r\n      setShowAddForm(false);\r\n      \r\n      // Reset form\r\n      setNewMetric({\r\n        weight: '',\r\n        heart_rate: '',\r\n        blood_pressure_systolic: '',\r\n        blood_pressure_diastolic: '',\r\n        blood_sugar: '',\r\n        oxygen_saturation: '',\r\n        recorded_at: new Date().toISOString().split('T')[0]\r\n      });\r\n      \r\n      // Refresh data\r\n      fetchHealthData();\r\n    } catch (error) {\r\n      console.error('Error adding health metrics:', error);\r\n      setNotification({ message: 'Error adding health metrics.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewMetric(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const prepareChartData = () => {\r\n    // Filter data based on time range\r\n    const now = new Date();\r\n    let filteredData = [...healthData];\r\n    \r\n    if (timeRange === '1month') {\r\n      const oneMonthAgo = new Date(now.setMonth(now.getMonth() - 1));\r\n      filteredData = healthData.filter(item => new Date(item.recorded_at) >= oneMonthAgo);\r\n    } else if (timeRange === '3months') {\r\n      const threeMonthsAgo = new Date(now.setMonth(now.getMonth() - 3));\r\n      filteredData = healthData.filter(item => new Date(item.recorded_at) >= threeMonthsAgo);\r\n    } else if (timeRange === '6months') {\r\n      const sixMonthsAgo = new Date(now.setMonth(now.getMonth() - 6));\r\n      filteredData = healthData.filter(item => new Date(item.recorded_at) >= sixMonthsAgo);\r\n    } else if (timeRange === '1year') {\r\n      const oneYearAgo = new Date(now.setFullYear(now.getFullYear() - 1));\r\n      filteredData = healthData.filter(item => new Date(item.recorded_at) >= oneYearAgo);\r\n    }\r\n\r\n    // Prepare data for the selected metric\r\n    const labels = filteredData.map(item => {\r\n      const date = new Date(item.recorded_at);\r\n      return date.toLocaleDateString();\r\n    });\r\n\r\n    const data = filteredData.map(item => item[selectedMetric] || 0);\r\n\r\n    // Set chart colors based on metric\r\n    let borderColor = '#4bc0c0';\r\n    let backgroundColor = 'rgba(75, 192, 192, 0.2)';\r\n    \r\n    switch (selectedMetric) {\r\n      case 'weight':\r\n        borderColor = '#4bc0c0';\r\n        backgroundColor = 'rgba(75, 192, 192, 0.2)';\r\n        break;\r\n      case 'heart_rate':\r\n        borderColor = '#ff6384';\r\n        backgroundColor = 'rgba(255, 99, 132, 0.2)';\r\n        break;\r\n      case 'blood_pressure_systolic':\r\n      case 'blood_pressure_diastolic':\r\n        borderColor = '#ff9f40';\r\n        backgroundColor = 'rgba(255, 159, 64, 0.2)';\r\n        break;\r\n      case 'blood_sugar':\r\n        borderColor = '#9966ff';\r\n        backgroundColor = 'rgba(153, 102, 255, 0.2)';\r\n        break;\r\n      case 'oxygen_saturation':\r\n        borderColor = '#36a2eb';\r\n        backgroundColor = 'rgba(54, 162, 235, 0.2)';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setChartData({\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: getMetricLabel(selectedMetric),\r\n          data,\r\n          borderColor,\r\n          backgroundColor,\r\n          tension: 0.1,\r\n          fill: true,\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const getMetricLabel = (metric) => {\r\n    switch (metric) {\r\n      case 'weight':\r\n        return 'Weight (kg)';\r\n      case 'heart_rate':\r\n        return 'Heart Rate (bpm)';\r\n      case 'blood_pressure_systolic':\r\n        return 'Blood Pressure - Systolic (mmHg)';\r\n      case 'blood_pressure_diastolic':\r\n        return 'Blood Pressure - Diastolic (mmHg)';\r\n      case 'blood_sugar':\r\n        return 'Blood Sugar (mg/dL)';\r\n      case 'oxygen_saturation':\r\n        return 'Oxygen Saturation (%)';\r\n      default:\r\n        return metric;\r\n    }\r\n  };\r\n\r\n  const getMetricIcon = (metric) => {\r\n    switch (metric) {\r\n      case 'weight':\r\n        return <FaWeight />;\r\n      case 'heart_rate':\r\n        return <FaHeartbeat />;\r\n      case 'blood_pressure_systolic':\r\n      case 'blood_pressure_diastolic':\r\n        return <FaTint />;\r\n      case 'blood_sugar':\r\n        return <FaTint />;\r\n      case 'oxygen_saturation':\r\n        return <FaLungs />;\r\n      default:\r\n        return <FaChartLine />;\r\n    }\r\n  };\r\n\r\n  const getLatestMetricValue = (metric) => {\r\n    if (healthData.length === 0) return 'N/A';\r\n    \r\n    // Sort by date descending to get the latest\r\n    const sortedData = [...healthData].sort((a, b) => \r\n      new Date(b.recorded_at) - new Date(a.recorded_at)\r\n    );\r\n    \r\n    const latestValue = sortedData[0][metric];\r\n    if (latestValue === undefined || latestValue === null) return 'N/A';\r\n    \r\n    // Format based on metric type\r\n    switch (metric) {\r\n      case 'weight':\r\n        return `${latestValue} kg`;\r\n      case 'heart_rate':\r\n        return `${latestValue} bpm`;\r\n      case 'blood_pressure_systolic':\r\n        const diastolic = sortedData[0]['blood_pressure_diastolic'] || 'N/A';\r\n        return `${latestValue}/${diastolic} mmHg`;\r\n      case 'blood_pressure_diastolic':\r\n        const systolic = sortedData[0]['blood_pressure_systolic'] || 'N/A';\r\n        return `${systolic}/${latestValue} mmHg`;\r\n      case 'blood_sugar':\r\n        return `${latestValue} mg/dL`;\r\n      case 'oxygen_saturation':\r\n        return `${latestValue}%`;\r\n      default:\r\n        return latestValue;\r\n    }\r\n  };\r\n\r\n  const exportToCSV = () => {\r\n    // Create CSV content\r\n    const headers = ['Date', 'Weight (kg)', 'Heart Rate (bpm)', 'Blood Pressure (mmHg)', 'Blood Sugar (mg/dL)', 'Oxygen Saturation (%)'];\r\n    const csvData = healthData.map(item => [\r\n      new Date(item.recorded_at).toLocaleDateString(),\r\n      item.weight || '',\r\n      item.heart_rate || '',\r\n      `${item.blood_pressure_systolic || ''}/${item.blood_pressure_diastolic || ''}`,\r\n      item.blood_sugar || '',\r\n      item.oxygen_saturation ? `${item.oxygen_saturation}%` : ''\r\n    ]);\r\n    \r\n    const csvContent = [\r\n      headers.join(','),\r\n      ...csvData.map(row => row.join(','))\r\n    ].join('\\n');\r\n    \r\n    // Create and download the file\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.setAttribute('href', url);\r\n    link.setAttribute('download', `health_metrics_${new Date().toISOString().split('T')[0]}.csv`);\r\n    link.style.visibility = 'hidden';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  if (loading && healthData.length === 0) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      {notification && (\r\n        <div className={`alert alert-${notification.type} text-center`}>\r\n          {notification.message}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <h1>\r\n          <FaChartLine className=\"me-2\" /> Health Analytics\r\n        </h1>\r\n        <div>\r\n          <button \r\n            className=\"btn btn-primary me-2\" \r\n            onClick={() => setShowAddForm(!showAddForm)}\r\n          >\r\n            {showAddForm ? <><FaTimes /> Cancel</> : <><FaPlus /> Add New Metrics</>}\r\n          </button>\r\n          {healthData.length > 0 && (\r\n            <button \r\n              className=\"btn btn-success\" \r\n              onClick={exportToCSV}\r\n            >\r\n              Export Data\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Add Health Metrics Form */}\r\n      {showAddForm && (\r\n        <div className=\"card shadow mb-4\">\r\n          <div className=\"card-header bg-primary text-white\">\r\n            <h3 className=\"mb-0\">Add New Health Metrics</h3>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={handleAddMetric}>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6 mb-3\">\r\n                  <label htmlFor=\"recorded_at\" className=\"form-label\">Date</label>\r\n                  <input \r\n                    type=\"date\" \r\n                    className=\"form-control\" \r\n                    id=\"recorded_at\" \r\n                    name=\"recorded_at\" \r\n                    value={newMetric.recorded_at} \r\n                    onChange={handleInputChange} \r\n                    required \r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                  <label htmlFor=\"weight\" className=\"form-label\">Weight (kg)</label>\r\n                  <input \r\n                    type=\"number\" \r\n                    step=\"0.1\" \r\n                    className=\"form-control\" \r\n                    id=\"weight\" \r\n                    name=\"weight\" \r\n                    value={newMetric.weight} \r\n                    onChange={handleInputChange} \r\n                    placeholder=\"e.g. 70.5\" \r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"row\">\r\n                <div className=\"col-md-6 mb-3\">\r\n                  <label htmlFor=\"heart_rate\" className=\"form-label\">Heart Rate (bpm)</label>\r\n                  <input \r\n                    type=\"number\" \r\n                    className=\"form-control\" \r\n                    id=\"heart_rate\" \r\n                    name=\"heart_rate\" \r\n                    value={newMetric.heart_rate} \r\n                    onChange={handleInputChange} \r\n                    placeholder=\"e.g. 72\" \r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                  <label htmlFor=\"oxygen_saturation\" className=\"form-label\">Oxygen Saturation (%)</label>\r\n                  <input \r\n                    type=\"number\" \r\n                    min=\"0\" \r\n                    max=\"100\" \r\n                    className=\"form-control\" \r\n                    id=\"oxygen_saturation\" \r\n                    name=\"oxygen_saturation\" \r\n                    value={newMetric.oxygen_saturation} \r\n                    onChange={handleInputChange} \r\n                    placeholder=\"e.g. 98\" \r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"row\">\r\n                <div className=\"col-md-6 mb-3\">\r\n                  <label htmlFor=\"blood_pressure_systolic\" className=\"form-label\">Blood Pressure - Systolic (mmHg)</label>\r\n                  <input \r\n                    type=\"number\" \r\n                    className=\"form-control\" \r\n                    id=\"blood_pressure_systolic\" \r\n                    name=\"blood_pressure_systolic\" \r\n                    value={newMetric.blood_pressure_systolic} \r\n                    onChange={handleInputChange} \r\n                    placeholder=\"e.g. 120\" \r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                  <label htmlFor=\"blood_pressure_diastolic\" className=\"form-label\">Blood Pressure - Diastolic (mmHg)</label>\r\n                  <input \r\n                    type=\"number\" \r\n                    className=\"form-control\" \r\n                    id=\"blood_pressure_diastolic\" \r\n                    name=\"blood_pressure_diastolic\" \r\n                    value={newMetric.blood_pressure_diastolic} \r\n                    onChange={handleInputChange} \r\n                    placeholder=\"e.g. 80\" \r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"blood_sugar\" className=\"form-label\">Blood Sugar (mg/dL)</label>\r\n                <input \r\n                  type=\"number\" \r\n                  className=\"form-control\" \r\n                  id=\"blood_sugar\" \r\n                  name=\"blood_sugar\" \r\n                  value={newMetric.blood_sugar} \r\n                  onChange={handleInputChange} \r\n                  placeholder=\"e.g. 100\" \r\n                />\r\n              </div>\r\n              \r\n              <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\r\n                {loading ? 'Saving...' : 'Save Metrics'}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {healthData.length === 0 ? (\r\n        <div className=\"alert alert-info text-center\">\r\n          No health data available. Please add health metrics to see analytics.\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* Health Metrics Summary Cards */}\r\n          <div className=\"row mb-4\">\r\n            <div className=\"col-md-4 mb-3\">\r\n              <div className=\"card shadow h-100\">\r\n                <div className=\"card-body text-center\">\r\n                  <h5 className=\"card-title\">\r\n                    <FaWeight className=\"me-2\" /> Weight\r\n                  </h5>\r\n                  <h2 className=\"card-text\">{getLatestMetricValue('weight')}</h2>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n              <div className=\"card shadow h-100\">\r\n                <div className=\"card-body text-center\">\r\n                  <h5 className=\"card-title\">\r\n                    <FaHeartbeat className=\"me-2\" /> Heart Rate\r\n                  </h5>\r\n                  <h2 className=\"card-text\">{getLatestMetricValue('heart_rate')}</h2>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n              <div className=\"card shadow h-100\">\r\n                <div className=\"card-body text-center\">\r\n                  <h5 className=\"card-title\">\r\n                    <FaTint className=\"me-2\" /> Blood Pressure\r\n                  </h5>\r\n                  <h2 className=\"card-text\">{getLatestMetricValue('blood_pressure_systolic')}</h2>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Chart Controls */}\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6 mb-3\">\r\n                  <label htmlFor=\"metricSelect\" className=\"form-label\">Select Metric</label>\r\n                  <select \r\n                    id=\"metricSelect\" \r\n                    className=\"form-select\" \r\n                    value={selectedMetric} \r\n                    onChange={(e) => setSelectedMetric(e.target.value)}\r\n                  >\r\n                    <option value=\"weight\">Weight</option>\r\n                    <option value=\"heart_rate\">Heart Rate</option>\r\n                    <option value=\"blood_pressure_systolic\">Blood Pressure (Systolic)</option>\r\n                    <option value=\"blood_pressure_diastolic\">Blood Pressure (Diastolic)</option>\r\n                    <option value=\"blood_sugar\">Blood Sugar</option>\r\n                    <option value=\"oxygen_saturation\">Oxygen Saturation</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                  <label htmlFor=\"timeRangeSelect\" className=\"form-label\">Time Range</label>\r\n                  <select \r\n                    id=\"timeRangeSelect\" \r\n                    className=\"form-select\" \r\n                    value={timeRange} \r\n                    onChange={(e) => setTimeRange(e.target.value)}\r\n                  >\r\n                    <option value=\"1month\">Last Month</option>\r\n                    <option value=\"3months\">Last 3 Months</option>\r\n                    <option value=\"6months\">Last 6 Months</option>\r\n                    <option value=\"1year\">Last Year</option>\r\n                    <option value=\"all\">All Time</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Chart */}\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header\">\r\n              <h3 className=\"mb-0\">\r\n                {getMetricIcon(selectedMetric)} {getMetricLabel(selectedMetric)} Trend\r\n              </h3>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              {chartData ? (\r\n                <Line \r\n                  data={chartData} \r\n                  options={{\r\n                    responsive: true,\r\n                    plugins: {\r\n                      legend: {\r\n                        position: 'top',\r\n                      },\r\n                      tooltip: {\r\n                        mode: 'index',\r\n                        intersect: false,\r\n                      },\r\n                    },\r\n                    scales: {\r\n                      y: {\r\n                        beginAtZero: false,\r\n                      },\r\n                    },\r\n                  }} \r\n                />\r\n              ) : (\r\n                <p className=\"text-center\">No data available for the selected metric and time range.</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Health Insights */}\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header\">\r\n              <h3 className=\"mb-0\">Health Insights</h3>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <p>\r\n                This dashboard provides a visual representation of your health metrics over time.\r\n                Track your progress and identify trends to better manage your health.\r\n              </p>\r\n              <p>\r\n                For personalized health advice, please consult with your healthcare provider.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HealthAnalyticsPage; ","import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\nimport Spinner from '../components/Spinner';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FaCalendarCheck, FaPlus, FaTrash, FaEdit, FaClock, FaMapMarkerAlt, FaUserMd } from 'react-icons/fa';\r\nimport '../styles.css';\r\n\r\nconst UpcomingAppointmentsPage = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [notification, setNotification] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentAppointment, setCurrentAppointment] = useState({\r\n    id: null,\r\n    doctor_name: '',\r\n    specialty: '',\r\n    date: '',\r\n    time: '',\r\n    location: '',\r\n    notes: '',\r\n    reminder_set: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchAppointments();\r\n  }, []);\r\n\r\n  const fetchAppointments = async () => {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) {\r\n        window.location.href = '/';\r\n        return;\r\n      }\r\n      \r\n      const today = new Date().toISOString().split('T')[0];\r\n      \r\n      const { data, error } = await supabase\r\n        .from('appointments')\r\n        .select('*')\r\n        .eq('user_id', user.id)\r\n        .gte('date', today)\r\n        .order('date', { ascending: true });\r\n        \r\n      if (error) throw error;\r\n      setAppointments(data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching appointments:', error);\r\n      setNotification({ message: 'Error fetching appointments.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setCurrentAppointment(prev => ({\r\n      ...prev,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) {\r\n        window.location.href = '/';\r\n        return;\r\n      }\r\n      \r\n      if (isEditing) {\r\n        // Update existing appointment\r\n        const { error } = await supabase\r\n          .from('appointments')\r\n          .update({\r\n            doctor_name: currentAppointment.doctor_name,\r\n            specialty: currentAppointment.specialty,\r\n            date: currentAppointment.date,\r\n            time: currentAppointment.time,\r\n            location: currentAppointment.location,\r\n            notes: currentAppointment.notes,\r\n            reminder_set: currentAppointment.reminder_set\r\n          })\r\n          .eq('id', currentAppointment.id);\r\n          \r\n        if (error) throw error;\r\n        setNotification({ message: 'Appointment updated successfully!', type: 'success' });\r\n      } else {\r\n        // Add new appointment\r\n        const { error } = await supabase\r\n          .from('appointments')\r\n          .insert([{\r\n            doctor_name: currentAppointment.doctor_name,\r\n            specialty: currentAppointment.specialty,\r\n            date: currentAppointment.date,\r\n            time: currentAppointment.time,\r\n            location: currentAppointment.location,\r\n            notes: currentAppointment.notes,\r\n            reminder_set: currentAppointment.reminder_set,\r\n            user_id: user.id\r\n          }]);\r\n          \r\n        if (error) throw error;\r\n        setNotification({ message: 'Appointment added successfully!', type: 'success' });\r\n      }\r\n      \r\n      // Reset form and fetch updated appointments\r\n      resetForm();\r\n      fetchAppointments();\r\n    } catch (error) {\r\n      console.error('Error saving appointment:', error);\r\n      setNotification({ message: 'Error saving appointment.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (appointment) => {\r\n    setIsEditing(true);\r\n    setCurrentAppointment(appointment);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Are you sure you want to delete this appointment?')) return;\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const { error } = await supabase\r\n        .from('appointments')\r\n        .delete()\r\n        .eq('id', id);\r\n        \r\n      if (error) throw error;\r\n      \r\n      setAppointments(appointments.filter(appointment => appointment.id !== id));\r\n      setNotification({ message: 'Appointment deleted successfully!', type: 'success' });\r\n    } catch (error) {\r\n      console.error('Error deleting appointment:', error);\r\n      setNotification({ message: 'Error deleting appointment.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setIsEditing(false);\r\n    setCurrentAppointment({\r\n      id: null,\r\n      doctor_name: '',\r\n      specialty: '',\r\n      date: '',\r\n      time: '',\r\n      location: '',\r\n      notes: '',\r\n      reminder_set: false\r\n    });\r\n  };\r\n\r\n  // Check if an appointment is today\r\n  const isToday = (dateString) => {\r\n    const today = new Date().toISOString().split('T')[0];\r\n    return dateString === today;\r\n  };\r\n\r\n  // Check if an appointment is within the next 3 days\r\n  const isUpcoming = (dateString) => {\r\n    const today = new Date();\r\n    const appointmentDate = new Date(dateString);\r\n    const diffTime = appointmentDate - today;\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    \r\n    return diffDays > 0 && diffDays <= 3;\r\n  };\r\n\r\n  if (loading && appointments.length === 0) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      {notification && (\r\n        <div className={`alert alert-${notification.type} text-center`}>\r\n          {notification.message}\r\n        </div>\r\n      )}\r\n      \r\n      <h1 className=\"text-center mb-4\">\r\n        <FaCalendarCheck className=\"me-2\" /> Upcoming Appointments\r\n      </h1>\r\n      \r\n      <div className=\"card shadow-lg p-4 mb-4\">\r\n        <h3>{isEditing ? 'Edit Appointment' : 'Schedule New Appointment'}</h3>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 mb-3\">\r\n              <label htmlFor=\"doctor_name\" className=\"form-label\">Doctor Name</label>\r\n              <input \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                id=\"doctor_name\" \r\n                name=\"doctor_name\" \r\n                value={currentAppointment.doctor_name} \r\n                onChange={handleChange} \r\n                required \r\n              />\r\n            </div>\r\n            <div className=\"col-md-6 mb-3\">\r\n              <label htmlFor=\"specialty\" className=\"form-label\">Specialty</label>\r\n              <input \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                id=\"specialty\" \r\n                name=\"specialty\" \r\n                value={currentAppointment.specialty} \r\n                onChange={handleChange} \r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 mb-3\">\r\n              <label htmlFor=\"date\" className=\"form-label\">Date</label>\r\n              <input \r\n                type=\"date\" \r\n                className=\"form-control\" \r\n                id=\"date\" \r\n                name=\"date\" \r\n                value={currentAppointment.date} \r\n                onChange={handleChange} \r\n                required \r\n              />\r\n            </div>\r\n            <div className=\"col-md-6 mb-3\">\r\n              <label htmlFor=\"time\" className=\"form-label\">Time</label>\r\n              <input \r\n                type=\"time\" \r\n                className=\"form-control\" \r\n                id=\"time\" \r\n                name=\"time\" \r\n                value={currentAppointment.time} \r\n                onChange={handleChange} \r\n                required \r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"location\" className=\"form-label\">Location</label>\r\n            <input \r\n              type=\"text\" \r\n              className=\"form-control\" \r\n              id=\"location\" \r\n              name=\"location\" \r\n              value={currentAppointment.location} \r\n              onChange={handleChange} \r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"notes\" className=\"form-label\">Notes</label>\r\n            <textarea \r\n              className=\"form-control\" \r\n              id=\"notes\" \r\n              name=\"notes\" \r\n              rows=\"3\" \r\n              value={currentAppointment.notes} \r\n              onChange={handleChange}\r\n            ></textarea>\r\n          </div>\r\n          \r\n          <div className=\"mb-3 form-check\">\r\n            <input \r\n              type=\"checkbox\" \r\n              className=\"form-check-input\" \r\n              id=\"reminder_set\" \r\n              name=\"reminder_set\" \r\n              checked={currentAppointment.reminder_set} \r\n              onChange={handleChange} \r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"reminder_set\">Set Reminder</label>\r\n          </div>\r\n          \r\n          <div className=\"d-flex justify-content-between\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              {isEditing ? <><FaEdit className=\"me-2\" /> Update Appointment</> : <><FaPlus className=\"me-2\" /> Schedule Appointment</>}\r\n            </button>\r\n            {isEditing && (\r\n              <button type=\"button\" className=\"btn btn-secondary\" onClick={resetForm}>\r\n                Cancel\r\n              </button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n      \r\n      {/* Today's Appointments Section */}\r\n      {appointments.some(app => isToday(app.date)) && (\r\n        <div className=\"card shadow mb-4\">\r\n          <div className=\"card-header bg-primary text-white\">\r\n            <h3 className=\"mb-0\"><FaClock className=\"me-2\" /> Today's Appointments</h3>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              {appointments\r\n                .filter(app => isToday(app.date))\r\n                .map(appointment => (\r\n                  <div key={`today-${appointment.id}`} className=\"col-md-6 mb-3\">\r\n                    <div className=\"card h-100 border-primary\">\r\n                      <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{appointment.doctor_name}</h5>\r\n                        <h6 className=\"card-subtitle mb-2 text-muted\">{appointment.specialty}</h6>\r\n                        <p className=\"card-text\">\r\n                          <FaClock className=\"me-2\" /> {appointment.time}<br />\r\n                          <FaMapMarkerAlt className=\"me-2\" /> {appointment.location}\r\n                        </p>\r\n                        {appointment.notes && <p className=\"card-text\">{appointment.notes}</p>}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <h2 className=\"text-center mb-3\">All Upcoming Appointments</h2>\r\n      \r\n      {appointments.length === 0 ? (\r\n        <div className=\"alert alert-info text-center\">\r\n          No upcoming appointments. Schedule your first appointment above.\r\n        </div>\r\n      ) : (\r\n        <div className=\"row\">\r\n          {appointments.map((appointment) => (\r\n            <div key={appointment.id} className=\"col-md-6 col-lg-4 mb-4\">\r\n              <div className={`card h-100 shadow ${isToday(appointment.date) ? 'border-primary' : isUpcoming(appointment.date) ? 'border-warning' : ''}`}>\r\n                <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n                  <h5 className=\"mb-0\">\r\n                    <FaUserMd className=\"me-2\" /> {appointment.doctor_name}\r\n                  </h5>\r\n                  {isToday(appointment.date) && (\r\n                    <span className=\"badge bg-primary\">Today</span>\r\n                  )}\r\n                  {isUpcoming(appointment.date) && !isToday(appointment.date) && (\r\n                    <span className=\"badge bg-warning text-dark\">Soon</span>\r\n                  )}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  {appointment.specialty && (\r\n                    <p className=\"card-text\"><strong>Specialty:</strong> {appointment.specialty}</p>\r\n                  )}\r\n                  <p className=\"card-text\">\r\n                    <FaCalendarCheck className=\"me-2\" /> {new Date(appointment.date).toLocaleDateString()}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <FaClock className=\"me-2\" /> {appointment.time}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <FaMapMarkerAlt className=\"me-2\" /> {appointment.location}\r\n                  </p>\r\n                  {appointment.notes && (\r\n                    <p className=\"card-text\">\r\n                      <strong>Notes:</strong><br />\r\n                      {appointment.notes}\r\n                    </p>\r\n                  )}\r\n                  {appointment.reminder_set && (\r\n                    <p className=\"card-text\">\r\n                      <span className=\"badge bg-info text-dark\">Reminder Set</span>\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                <div className=\"card-footer d-flex justify-content-between\">\r\n                  <button \r\n                    className=\"btn btn-sm btn-primary\" \r\n                    onClick={() => handleEdit(appointment)}\r\n                  >\r\n                    <FaEdit className=\"me-1\" /> Edit\r\n                  </button>\r\n                  <button \r\n                    className=\"btn btn-sm btn-danger\" \r\n                    onClick={() => handleDelete(appointment.id)}\r\n                  >\r\n                    <FaTrash className=\"me-1\" /> Cancel\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpcomingAppointmentsPage; ","import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../utils/main';\r\nimport Spinner from '../components/Spinner';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FaHistory, FaSearch, FaFileDownload, FaUserMd, FaCalendarAlt, FaMapMarkerAlt, FaClock } from 'react-icons/fa';\r\nimport '../styles.css';\r\n\r\nconst AppointmentHistoryPage = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [notification, setNotification] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterDate, setFilterDate] = useState('');\r\n  const [filterDoctor, setFilterDoctor] = useState('');\r\n  const [sortOrder, setSortOrder] = useState('desc');\r\n\r\n  useEffect(() => {\r\n    fetchAppointmentHistory();\r\n  }, []);\r\n\r\n  const fetchAppointmentHistory = async () => {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) {\r\n        window.location.href = '/';\r\n        return;\r\n      }\r\n      \r\n      const today = new Date().toISOString().split('T')[0];\r\n      \r\n      const { data, error } = await supabase\r\n        .from('appointments')\r\n        .select('*')\r\n        .eq('user_id', user.id)\r\n        .lt('date', today)\r\n        .order('date', { ascending: false });\r\n        \r\n      if (error) throw error;\r\n      setAppointments(data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching appointment history:', error);\r\n      setNotification({ message: 'Error fetching appointment history.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const handleFilterDate = (e) => {\r\n    setFilterDate(e.target.value);\r\n  };\r\n\r\n  const handleFilterDoctor = (e) => {\r\n    setFilterDoctor(e.target.value);\r\n  };\r\n\r\n  const handleSortChange = () => {\r\n    setSortOrder(sortOrder === 'desc' ? 'asc' : 'desc');\r\n  };\r\n\r\n  const exportToCsv = () => {\r\n    const headers = ['Doctor', 'Specialty', 'Date', 'Time', 'Location', 'Notes'];\r\n    const csvData = filteredAppointments.map(app => [\r\n      app.doctor_name,\r\n      app.specialty,\r\n      new Date(app.date).toLocaleDateString(),\r\n      app.time,\r\n      app.location,\r\n      app.notes\r\n    ]);\r\n    \r\n    const csvContent = [\r\n      headers.join(','),\r\n      ...csvData.map(row => row.map(cell => `\"${cell || ''}\"`).join(','))\r\n    ].join('\\n');\r\n    \r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.setAttribute('href', url);\r\n    link.setAttribute('download', `appointment_history_${new Date().toISOString().split('T')[0]}.csv`);\r\n    link.style.visibility = 'hidden';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  // Filter and sort appointments based on search term, filters, and sort order\r\n  const filteredAppointments = appointments\r\n    .filter(app => {\r\n      const matchesSearch = searchTerm === '' || \r\n        app.doctor_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        (app.specialty && app.specialty.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n        (app.location && app.location.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n        (app.notes && app.notes.toLowerCase().includes(searchTerm.toLowerCase()));\r\n      \r\n      const matchesDate = filterDate === '' || app.date === filterDate;\r\n      \r\n      const matchesDoctor = filterDoctor === '' || \r\n        app.doctor_name.toLowerCase().includes(filterDoctor.toLowerCase());\r\n      \r\n      return matchesSearch && matchesDate && matchesDoctor;\r\n    })\r\n    .sort((a, b) => {\r\n      const dateA = new Date(a.date);\r\n      const dateB = new Date(b.date);\r\n      return sortOrder === 'desc' ? dateB - dateA : dateA - dateB;\r\n    });\r\n\r\n  if (loading && appointments.length === 0) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      {notification && (\r\n        <div className={`alert alert-${notification.type} text-center`}>\r\n          {notification.message}\r\n        </div>\r\n      )}\r\n      \r\n      <h1 className=\"text-center mb-4\">\r\n        <FaHistory className=\"me-2\" /> Appointment History\r\n      </h1>\r\n      \r\n      <div className=\"card shadow mb-4\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-md-6 mb-2\">\r\n              <div className=\"input-group\">\r\n                <span className=\"input-group-text\"><FaSearch /></span>\r\n                <input \r\n                  type=\"text\" \r\n                  className=\"form-control\" \r\n                  placeholder=\"Search appointments...\" \r\n                  value={searchTerm} \r\n                  onChange={handleSearch} \r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3 mb-2\">\r\n              <input \r\n                type=\"date\" \r\n                className=\"form-control\" \r\n                placeholder=\"Filter by date\" \r\n                value={filterDate} \r\n                onChange={handleFilterDate} \r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 mb-2\">\r\n              <input \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                placeholder=\"Filter by doctor\" \r\n                value={filterDoctor} \r\n                onChange={handleFilterDoctor} \r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n            <button \r\n              className=\"btn btn-outline-secondary\" \r\n              onClick={handleSortChange}\r\n            >\r\n              Sort by Date: {sortOrder === 'desc' ? 'Newest First' : 'Oldest First'}\r\n            </button>\r\n            \r\n            <button \r\n              className=\"btn btn-success\" \r\n              onClick={exportToCsv}\r\n              disabled={filteredAppointments.length === 0}\r\n            >\r\n              <FaFileDownload className=\"me-2\" /> Export to CSV\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {appointments.length === 0 ? (\r\n        <div className=\"alert alert-info text-center\">\r\n          No appointment history found.\r\n        </div>\r\n      ) : filteredAppointments.length === 0 ? (\r\n        <div className=\"alert alert-warning text-center\">\r\n          No appointments match your search criteria.\r\n        </div>\r\n      ) : (\r\n        <div className=\"row\">\r\n          {filteredAppointments.map((appointment) => (\r\n            <div key={appointment.id} className=\"col-md-6 col-lg-4 mb-4\">\r\n              <div className=\"card h-100 shadow\">\r\n                <div className=\"card-header\">\r\n                  <h5 className=\"mb-0\">\r\n                    <FaUserMd className=\"me-2\" /> {appointment.doctor_name}\r\n                  </h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  {appointment.specialty && (\r\n                    <p className=\"card-text\"><strong>Specialty:</strong> {appointment.specialty}</p>\r\n                  )}\r\n                  <p className=\"card-text\">\r\n                    <FaCalendarAlt className=\"me-2\" /> {new Date(appointment.date).toLocaleDateString()}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <FaClock className=\"me-2\" /> {appointment.time}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <FaMapMarkerAlt className=\"me-2\" /> {appointment.location}\r\n                  </p>\r\n                  {appointment.notes && (\r\n                    <p className=\"card-text\">\r\n                      <strong>Notes:</strong><br />\r\n                      {appointment.notes}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppointmentHistoryPage; ","import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\nimport Spinner from '../components/Spinner';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FaPhone, FaVideo, FaPlus, FaTrash, FaEdit, FaClock, FaUserMd, FaLink } from 'react-icons/fa';\r\nimport '../styles.css';\r\n\r\nconst TelehealthConsultationsPage = () => {\r\n  const [consultations, setConsultations] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [notification, setNotification] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentConsultation, setCurrentConsultation] = useState({\r\n    id: null,\r\n    doctor_name: '',\r\n    specialty: '',\r\n    date: '',\r\n    time: '',\r\n    consultation_type: 'video',\r\n    meeting_link: '',\r\n    notes: '',\r\n    reminder_set: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchConsultations();\r\n  }, []);\r\n\r\n  const fetchConsultations = async () => {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) {\r\n        window.location.href = '/';\r\n        return;\r\n      }\r\n      \r\n      const { data, error } = await supabase\r\n        .from('telehealth_consultations')\r\n        .select('*')\r\n        .eq('user_id', user.id)\r\n        .order('date', { ascending: true });\r\n        \r\n      if (error) throw error;\r\n      setConsultations(data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching consultations:', error);\r\n      setNotification({ message: 'Error fetching consultations.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setCurrentConsultation(prev => ({\r\n      ...prev,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) {\r\n        window.location.href = '/';\r\n        return;\r\n      }\r\n      \r\n      if (isEditing) {\r\n        // Update existing consultation\r\n        const { error } = await supabase\r\n          .from('telehealth_consultations')\r\n          .update({\r\n            doctor_name: currentConsultation.doctor_name,\r\n            specialty: currentConsultation.specialty,\r\n            date: currentConsultation.date,\r\n            time: currentConsultation.time,\r\n            consultation_type: currentConsultation.consultation_type,\r\n            meeting_link: currentConsultation.meeting_link,\r\n            notes: currentConsultation.notes,\r\n            reminder_set: currentConsultation.reminder_set\r\n          })\r\n          .eq('id', currentConsultation.id);\r\n          \r\n        if (error) throw error;\r\n        setNotification({ message: 'Consultation updated successfully!', type: 'success' });\r\n      } else {\r\n        // Add new consultation\r\n        const { error } = await supabase\r\n          .from('telehealth_consultations')\r\n          .insert([{\r\n            doctor_name: currentConsultation.doctor_name,\r\n            specialty: currentConsultation.specialty,\r\n            date: currentConsultation.date,\r\n            time: currentConsultation.time,\r\n            consultation_type: currentConsultation.consultation_type,\r\n            meeting_link: currentConsultation.meeting_link,\r\n            notes: currentConsultation.notes,\r\n            reminder_set: currentConsultation.reminder_set,\r\n            user_id: user.id\r\n          }]);\r\n          \r\n        if (error) throw error;\r\n        setNotification({ message: 'Consultation added successfully!', type: 'success' });\r\n      }\r\n      \r\n      // Reset form and fetch updated consultations\r\n      resetForm();\r\n      fetchConsultations();\r\n    } catch (error) {\r\n      console.error('Error saving consultation:', error);\r\n      setNotification({ message: 'Error saving consultation.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (consultation) => {\r\n    setIsEditing(true);\r\n    setCurrentConsultation(consultation);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Are you sure you want to delete this consultation?')) return;\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const { error } = await supabase\r\n        .from('telehealth_consultations')\r\n        .delete()\r\n        .eq('id', id);\r\n        \r\n      if (error) throw error;\r\n      \r\n      setConsultations(consultations.filter(consultation => consultation.id !== id));\r\n      setNotification({ message: 'Consultation deleted successfully!', type: 'success' });\r\n    } catch (error) {\r\n      console.error('Error deleting consultation:', error);\r\n      setNotification({ message: 'Error deleting consultation.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setIsEditing(false);\r\n    setCurrentConsultation({\r\n      id: null,\r\n      doctor_name: '',\r\n      specialty: '',\r\n      date: '',\r\n      time: '',\r\n      consultation_type: 'video',\r\n      meeting_link: '',\r\n      notes: '',\r\n      reminder_set: false\r\n    });\r\n  };\r\n\r\n  // Check if a consultation is today\r\n  const isToday = (dateString) => {\r\n    const today = new Date().toISOString().split('T')[0];\r\n    return dateString === today;\r\n  };\r\n\r\n  // Check if a consultation is in the past\r\n  const isPast = (dateString) => {\r\n    const today = new Date().toISOString().split('T')[0];\r\n    return dateString < today;\r\n  };\r\n\r\n  // Check if a consultation is upcoming (within the next 3 days)\r\n  const isUpcoming = (dateString) => {\r\n    const today = new Date();\r\n    const consultationDate = new Date(dateString);\r\n    const diffTime = consultationDate - today;\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    \r\n    return diffDays > 0 && diffDays <= 3;\r\n  };\r\n\r\n  // Filter consultations by upcoming and past\r\n  const upcomingConsultations = consultations.filter(consultation => !isPast(consultation.date));\r\n  const pastConsultations = consultations.filter(consultation => isPast(consultation.date));\r\n\r\n  if (loading && consultations.length === 0) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      {notification && (\r\n        <div className={`alert alert-${notification.type} text-center`}>\r\n          {notification.message}\r\n        </div>\r\n      )}\r\n      \r\n      <h1 className=\"text-center mb-4\">\r\n        <FaVideo className=\"me-2\" /> Telehealth Consultations\r\n      </h1>\r\n      \r\n      <div className=\"card shadow-lg p-4 mb-4\">\r\n        <h3>{isEditing ? 'Edit Consultation' : 'Schedule New Consultation'}</h3>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 mb-3\">\r\n              <label htmlFor=\"doctor_name\" className=\"form-label\">Doctor Name</label>\r\n              <input \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                id=\"doctor_name\" \r\n                name=\"doctor_name\" \r\n                value={currentConsultation.doctor_name} \r\n                onChange={handleChange} \r\n                required \r\n              />\r\n            </div>\r\n            <div className=\"col-md-6 mb-3\">\r\n              <label htmlFor=\"specialty\" className=\"form-label\">Specialty</label>\r\n              <input \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                id=\"specialty\" \r\n                name=\"specialty\" \r\n                value={currentConsultation.specialty} \r\n                onChange={handleChange} \r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 mb-3\">\r\n              <label htmlFor=\"date\" className=\"form-label\">Date</label>\r\n              <input \r\n                type=\"date\" \r\n                className=\"form-control\" \r\n                id=\"date\" \r\n                name=\"date\" \r\n                value={currentConsultation.date} \r\n                onChange={handleChange} \r\n                required \r\n              />\r\n            </div>\r\n            <div className=\"col-md-6 mb-3\">\r\n              <label htmlFor=\"time\" className=\"form-label\">Time</label>\r\n              <input \r\n                type=\"time\" \r\n                className=\"form-control\" \r\n                id=\"time\" \r\n                name=\"time\" \r\n                value={currentConsultation.time} \r\n                onChange={handleChange} \r\n                required \r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 mb-3\">\r\n              <label htmlFor=\"consultation_type\" className=\"form-label\">Consultation Type</label>\r\n              <select \r\n                className=\"form-control\" \r\n                id=\"consultation_type\" \r\n                name=\"consultation_type\" \r\n                value={currentConsultation.consultation_type} \r\n                onChange={handleChange}\r\n                required\r\n              >\r\n                <option value=\"video\">Video Call</option>\r\n                <option value=\"phone\">Phone Call</option>\r\n                <option value=\"chat\">Chat</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-md-6 mb-3\">\r\n              <label htmlFor=\"meeting_link\" className=\"form-label\">Meeting Link/Phone Number</label>\r\n              <input \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                id=\"meeting_link\" \r\n                name=\"meeting_link\" \r\n                value={currentConsultation.meeting_link} \r\n                onChange={handleChange} \r\n                placeholder=\"Enter meeting link or phone number\"\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"notes\" className=\"form-label\">Notes</label>\r\n            <textarea \r\n              className=\"form-control\" \r\n              id=\"notes\" \r\n              name=\"notes\" \r\n              rows=\"3\" \r\n              value={currentConsultation.notes} \r\n              onChange={handleChange}\r\n              placeholder=\"Reason for consultation, questions to ask, etc.\"\r\n            ></textarea>\r\n          </div>\r\n          \r\n          <div className=\"mb-3 form-check\">\r\n            <input \r\n              type=\"checkbox\" \r\n              className=\"form-check-input\" \r\n              id=\"reminder_set\" \r\n              name=\"reminder_set\" \r\n              checked={currentConsultation.reminder_set} \r\n              onChange={handleChange} \r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"reminder_set\">Set Reminder</label>\r\n          </div>\r\n          \r\n          <div className=\"d-flex justify-content-between\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              {isEditing ? <><FaEdit className=\"me-2\" /> Update Consultation</> : <><FaPlus className=\"me-2\" /> Schedule Consultation</>}\r\n            </button>\r\n            {isEditing && (\r\n              <button type=\"button\" className=\"btn btn-secondary\" onClick={resetForm}>\r\n                Cancel\r\n              </button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n      \r\n      {/* Today's Consultations Section */}\r\n      {consultations.some(cons => isToday(cons.date)) && (\r\n        <div className=\"card shadow mb-4\">\r\n          <div className=\"card-header bg-primary text-white\">\r\n            <h3 className=\"mb-0\"><FaClock className=\"me-2\" /> Today's Consultations</h3>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              {consultations\r\n                .filter(cons => isToday(cons.date))\r\n                .map(consultation => (\r\n                  <div key={`today-${consultation.id}`} className=\"col-md-6 mb-3\">\r\n                    <div className=\"card h-100 border-primary\">\r\n                      <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{consultation.doctor_name}</h5>\r\n                        <h6 className=\"card-subtitle mb-2 text-muted\">{consultation.specialty}</h6>\r\n                        <p className=\"card-text\">\r\n                          <FaClock className=\"me-2\" /> {consultation.time}<br />\r\n                          {consultation.consultation_type === 'video' ? (\r\n                            <><FaVideo className=\"me-2\" /> Video Call</>\r\n                          ) : consultation.consultation_type === 'phone' ? (\r\n                            <><FaPhone className=\"me-2\" /> Phone Call</>\r\n                          ) : (\r\n                            <><FaLink className=\"me-2\" /> Chat</>\r\n                          )}\r\n                        </p>\r\n                        {consultation.meeting_link && (\r\n                          <p className=\"card-text\">\r\n                            <a href={consultation.consultation_type === 'video' ? consultation.meeting_link : `tel:${consultation.meeting_link}`} \r\n                               target=\"_blank\" \r\n                               rel=\"noopener noreferrer\" \r\n                               className=\"btn btn-sm btn-success\">\r\n                              {consultation.consultation_type === 'video' ? 'Join Meeting' : 'Call Now'}\r\n                            </a>\r\n                          </p>\r\n                        )}\r\n                        {consultation.notes && <p className=\"card-text\"><small>{consultation.notes}</small></p>}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <h2 className=\"text-center mb-3\">Upcoming Consultations</h2>\r\n      \r\n      {upcomingConsultations.length === 0 ? (\r\n        <div className=\"alert alert-info text-center\">\r\n          No upcoming consultations. Schedule your first consultation above.\r\n        </div>\r\n      ) : (\r\n        <div className=\"row\">\r\n          {upcomingConsultations.map((consultation) => (\r\n            <div key={consultation.id} className=\"col-md-6 col-lg-4 mb-4\">\r\n              <div className={`card h-100 shadow ${isToday(consultation.date) ? 'border-primary' : isUpcoming(consultation.date) ? 'border-warning' : ''}`}>\r\n                <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n                  <h5 className=\"mb-0\">\r\n                    <FaUserMd className=\"me-2\" /> {consultation.doctor_name}\r\n                  </h5>\r\n                  {isToday(consultation.date) && (\r\n                    <span className=\"badge bg-primary\">Today</span>\r\n                  )}\r\n                  {isUpcoming(consultation.date) && !isToday(consultation.date) && (\r\n                    <span className=\"badge bg-warning text-dark\">Soon</span>\r\n                  )}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  {consultation.specialty && (\r\n                    <p className=\"card-text\"><strong>Specialty:</strong> {consultation.specialty}</p>\r\n                  )}\r\n                  <p className=\"card-text\">\r\n                    <strong>Date:</strong> {new Date(consultation.date).toLocaleDateString()}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <strong>Time:</strong> {consultation.time}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <strong>Type:</strong> {consultation.consultation_type === 'video' ? 'Video Call' : \r\n                                          consultation.consultation_type === 'phone' ? 'Phone Call' : 'Chat'}\r\n                  </p>\r\n                  {consultation.meeting_link && (\r\n                    <p className=\"card-text\">\r\n                      <strong>Link/Number:</strong> {consultation.meeting_link}\r\n                    </p>\r\n                  )}\r\n                  {consultation.notes && (\r\n                    <p className=\"card-text\">\r\n                      <strong>Notes:</strong><br />\r\n                      {consultation.notes}\r\n                    </p>\r\n                  )}\r\n                  {consultation.reminder_set && (\r\n                    <p className=\"card-text\">\r\n                      <span className=\"badge bg-info text-dark\">Reminder Set</span>\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                <div className=\"card-footer d-flex justify-content-between\">\r\n                  <button \r\n                    className=\"btn btn-sm btn-primary\" \r\n                    onClick={() => handleEdit(consultation)}\r\n                  >\r\n                    <FaEdit className=\"me-1\" /> Edit\r\n                  </button>\r\n                  <button \r\n                    className=\"btn btn-sm btn-danger\" \r\n                    onClick={() => handleDelete(consultation.id)}\r\n                  >\r\n                    <FaTrash className=\"me-1\" /> Cancel\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      \r\n      {pastConsultations.length > 0 && (\r\n        <>\r\n          <h2 className=\"text-center mb-3 mt-5\">Past Consultations</h2>\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Doctor</th>\r\n                  <th>Specialty</th>\r\n                  <th>Date</th>\r\n                  <th>Time</th>\r\n                  <th>Type</th>\r\n                  <th>Notes</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {pastConsultations.map((consultation) => (\r\n                  <tr key={`past-${consultation.id}`}>\r\n                    <td>{consultation.doctor_name}</td>\r\n                    <td>{consultation.specialty}</td>\r\n                    <td>{new Date(consultation.date).toLocaleDateString()}</td>\r\n                    <td>{consultation.time}</td>\r\n                    <td>\r\n                      {consultation.consultation_type === 'video' ? (\r\n                        <><FaVideo className=\"me-1\" /> Video</>\r\n                      ) : consultation.consultation_type === 'phone' ? (\r\n                        <><FaPhone className=\"me-1\" /> Phone</>\r\n                      ) : (\r\n                        <><FaLink className=\"me-1\" /> Chat</>\r\n                      )}\r\n                    </td>\r\n                    <td>{consultation.notes}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TelehealthConsultationsPage; ","import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../utils/main';\r\nimport Spinner from '../components/Spinner';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FaClock, FaBell, FaToggleOn, FaToggleOff, FaCalendarAlt, FaUserMd, FaTrash } from 'react-icons/fa';\r\nimport '../styles.css';\r\n\r\nconst AppointmentRemindersPage = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [reminders, setReminders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [notification, setNotification] = useState(null);\r\n  const [reminderSettings, setReminderSettings] = useState({\r\n    email_reminders: true,\r\n    sms_reminders: false,\r\n    browser_notifications: true,\r\n    reminder_time: '24', // hours before appointment\r\n    phone_number: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) {\r\n        window.location.href = '/';\r\n        return;\r\n      }\r\n      \r\n      // Fetch upcoming appointments\r\n      const today = new Date().toISOString().split('T')[0];\r\n      const { data: appointmentsData, error: appointmentsError } = await supabase\r\n        .from('appointments')\r\n        .select('*')\r\n        .eq('user_id', user.id)\r\n        .gte('date', today)\r\n        .order('date', { ascending: true });\r\n        \r\n      if (appointmentsError) throw appointmentsError;\r\n      \r\n      // Fetch telehealth consultations\r\n      const { data: telehealthData, error: telehealthError } = await supabase\r\n        .from('telehealth_consultations')\r\n        .select('*')\r\n        .eq('user_id', user.id)\r\n        .gte('date', today)\r\n        .order('date', { ascending: true });\r\n        \r\n      if (telehealthError) throw telehealthError;\r\n      \r\n      // Combine and format appointments and telehealth consultations\r\n      const allAppointments = [\r\n        ...(appointmentsData || []).map(app => ({\r\n          ...app,\r\n          type: 'appointment'\r\n        })),\r\n        ...(telehealthData || []).map(tel => ({\r\n          ...tel,\r\n          type: 'telehealth',\r\n          doctor_name: tel.doctor_name\r\n        }))\r\n      ].sort((a, b) => {\r\n        // Sort by date and time\r\n        const dateA = new Date(`${a.date}T${a.time}`);\r\n        const dateB = new Date(`${b.date}T${b.time}`);\r\n        return dateA - dateB;\r\n      });\r\n      \r\n      setAppointments(allAppointments);\r\n      \r\n      // Fetch user reminder settings\r\n      const { data: settingsData, error: settingsError } = await supabase\r\n        .from('reminder_settings')\r\n        .select('*')\r\n        .eq('user_id', user.id)\r\n        .single();\r\n        \r\n      if (settingsError && settingsError.code !== 'PGRST116') { // PGRST116 is \"no rows returned\" error\r\n        throw settingsError;\r\n      }\r\n      \r\n      if (settingsData) {\r\n        setReminderSettings(settingsData);\r\n      }\r\n      \r\n      // Fetch active reminders\r\n      const { data: remindersData, error: remindersError } = await supabase\r\n        .from('reminders')\r\n        .select('*')\r\n        .eq('user_id', user.id)\r\n        .gte('reminder_time', new Date().toISOString())\r\n        .order('reminder_time', { ascending: true });\r\n        \r\n      if (remindersError) throw remindersError;\r\n      setReminders(remindersData || []);\r\n      \r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setNotification({ message: 'Error fetching data.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSettingsChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setReminderSettings(prev => ({\r\n      ...prev,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n  };\r\n\r\n  const saveReminderSettings = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) {\r\n        window.location.href = '/';\r\n        return;\r\n      }\r\n      \r\n      const { error } = await supabase\r\n        .from('reminder_settings')\r\n        .upsert({\r\n          ...reminderSettings,\r\n          user_id: user.id\r\n        });\r\n        \r\n      if (error) throw error;\r\n      setNotification({ message: 'Reminder settings saved successfully!', type: 'success' });\r\n    } catch (error) {\r\n      console.error('Error saving reminder settings:', error);\r\n      setNotification({ message: 'Error saving reminder settings.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleReminder = async (appointment) => {\r\n    try {\r\n      setLoading(true);\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) {\r\n        window.location.href = '/';\r\n        return;\r\n      }\r\n      \r\n      // Check if the appointment already has a reminder\r\n      const hasReminder = appointment.reminder_set;\r\n      \r\n      if (hasReminder) {\r\n        // Remove reminder\r\n        if (appointment.type === 'appointment') {\r\n          const { error } = await supabase\r\n            .from('appointments')\r\n            .update({ reminder_set: false })\r\n            .eq('id', appointment.id);\r\n            \r\n          if (error) throw error;\r\n        } else {\r\n          const { error } = await supabase\r\n            .from('telehealth_consultations')\r\n            .update({ reminder_set: false })\r\n            .eq('id', appointment.id);\r\n            \r\n          if (error) throw error;\r\n        }\r\n        \r\n        // Delete any existing reminders for this appointment\r\n        const { error: deleteError } = await supabase\r\n          .from('reminders')\r\n          .delete()\r\n          .eq('appointment_id', appointment.id)\r\n          .eq('appointment_type', appointment.type);\r\n          \r\n        if (deleteError) throw deleteError;\r\n        \r\n        setNotification({ message: 'Reminder removed successfully!', type: 'success' });\r\n      } else {\r\n        // Add reminder\r\n        const appointmentDate = new Date(`${appointment.date}T${appointment.time}`);\r\n        const reminderHours = parseInt(reminderSettings.reminder_time, 10);\r\n        const reminderTime = new Date(appointmentDate.getTime() - (reminderHours * 60 * 60 * 1000));\r\n        \r\n        // Update appointment to set reminder flag\r\n        if (appointment.type === 'appointment') {\r\n          const { error } = await supabase\r\n            .from('appointments')\r\n            .update({ reminder_set: true })\r\n            .eq('id', appointment.id);\r\n            \r\n          if (error) throw error;\r\n        } else {\r\n          const { error } = await supabase\r\n            .from('telehealth_consultations')\r\n            .update({ reminder_set: true })\r\n            .eq('id', appointment.id);\r\n            \r\n          if (error) throw error;\r\n        }\r\n        \r\n        // Create reminder record\r\n        const { error: reminderError } = await supabase\r\n          .from('reminders')\r\n          .insert([{\r\n            user_id: user.id,\r\n            appointment_id: appointment.id,\r\n            appointment_type: appointment.type,\r\n            reminder_time: reminderTime.toISOString(),\r\n            appointment_time: appointmentDate.toISOString(),\r\n            doctor_name: appointment.doctor_name,\r\n            location: appointment.location || '',\r\n            sent: false\r\n          }]);\r\n          \r\n        if (reminderError) throw reminderError;\r\n        \r\n        setNotification({ message: 'Reminder set successfully!', type: 'success' });\r\n      }\r\n      \r\n      // Refresh data\r\n      fetchData();\r\n    } catch (error) {\r\n      console.error('Error toggling reminder:', error);\r\n      setNotification({ message: 'Error toggling reminder.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const deleteReminder = async (reminderId) => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const { error } = await supabase\r\n        .from('appointment_reminders')\r\n        .delete()\r\n        .eq('id', reminderId);\r\n        \r\n      if (error) throw error;\r\n      \r\n      setReminders(reminders.filter(r => r.id !== reminderId));\r\n      setNotification({ message: 'Reminder deleted successfully!', type: 'success' });\r\n    } catch (error) {\r\n      console.error('Error deleting reminder:', error);\r\n      setNotification({ message: 'Error deleting reminder.', type: 'danger' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Check if an appointment is today\r\n  const isToday = (dateString) => {\r\n    const today = new Date().toISOString().split('T')[0];\r\n    return dateString === today;\r\n  };\r\n\r\n  // Check if an appointment is within the next 3 days\r\n  const isUpcoming = (dateString) => {\r\n    const today = new Date();\r\n    const appointmentDate = new Date(dateString);\r\n    const diffTime = appointmentDate - today;\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    \r\n    return diffDays > 0 && diffDays <= 3;\r\n  };\r\n\r\n  if (loading && appointments.length === 0 && reminders.length === 0) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      {notification && (\r\n        <div className={`alert alert-${notification.type} text-center`}>\r\n          {notification.message}\r\n        </div>\r\n      )}\r\n      \r\n      <h1 className=\"text-center mb-4\">\r\n        <FaBell className=\"me-2\" /> Appointment Reminders\r\n      </h1>\r\n      \r\n      <div className=\"card shadow mb-4\">\r\n        <div className=\"card-header\">\r\n          <h3 className=\"mb-0\">Reminder Settings</h3>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 mb-3\">\r\n              <div className=\"form-check form-switch\">\r\n                <input \r\n                  className=\"form-check-input\" \r\n                  type=\"checkbox\" \r\n                  id=\"email_reminders\" \r\n                  name=\"email_reminders\" \r\n                  checked={reminderSettings.email_reminders} \r\n                  onChange={handleSettingsChange} \r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"email_reminders\">\r\n                  Email Reminders\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 mb-3\">\r\n              <div className=\"form-check form-switch\">\r\n                <input \r\n                  className=\"form-check-input\" \r\n                  type=\"checkbox\" \r\n                  id=\"browser_notifications\" \r\n                  name=\"browser_notifications\" \r\n                  checked={reminderSettings.browser_notifications} \r\n                  onChange={handleSettingsChange} \r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"browser_notifications\">\r\n                  Browser Notifications\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 mb-3\">\r\n              <div className=\"form-check form-switch\">\r\n                <input \r\n                  className=\"form-check-input\" \r\n                  type=\"checkbox\" \r\n                  id=\"sms_reminders\" \r\n                  name=\"sms_reminders\" \r\n                  checked={reminderSettings.sms_reminders} \r\n                  onChange={handleSettingsChange} \r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"sms_reminders\">\r\n                  SMS Reminders\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 mb-3\">\r\n              <label htmlFor=\"phone_number\" className=\"form-label\">Phone Number (for SMS)</label>\r\n              <input \r\n                type=\"tel\" \r\n                className=\"form-control\" \r\n                id=\"phone_number\" \r\n                name=\"phone_number\" \r\n                value={reminderSettings.phone_number} \r\n                onChange={handleSettingsChange} \r\n                placeholder=\"Enter your phone number\"\r\n                disabled={!reminderSettings.sms_reminders}\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 mb-3\">\r\n              <label htmlFor=\"reminder_time\" className=\"form-label\">Send Reminders</label>\r\n              <select \r\n                className=\"form-select\" \r\n                id=\"reminder_time\" \r\n                name=\"reminder_time\" \r\n                value={reminderSettings.reminder_time} \r\n                onChange={handleSettingsChange}\r\n              >\r\n                <option value=\"1\">1 hour before</option>\r\n                <option value=\"2\">2 hours before</option>\r\n                <option value=\"6\">6 hours before</option>\r\n                <option value=\"12\">12 hours before</option>\r\n                <option value=\"24\">24 hours before</option>\r\n                <option value=\"48\">2 days before</option>\r\n                <option value=\"72\">3 days before</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-md-6 mb-3 d-flex align-items-end\">\r\n              <button \r\n                className=\"btn btn-primary w-100\" \r\n                onClick={saveReminderSettings}\r\n                disabled={loading}\r\n              >\r\n                Save Settings\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <h2 className=\"text-center mb-3\">Active Reminders</h2>\r\n      \r\n      {reminders.length === 0 ? (\r\n        <div className=\"alert alert-info text-center\">\r\n          No active reminders. Set reminders for your appointments below.\r\n        </div>\r\n      ) : (\r\n        <div className=\"table-responsive mb-4\">\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>Appointment</th>\r\n                <th>Doctor</th>\r\n                <th>Appointment Time</th>\r\n                <th>Reminder Time</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {reminders.map((reminder) => (\r\n                <tr key={reminder.id}>\r\n                  <td>{reminder.appointment_type === 'telehealth' ? 'Telehealth' : 'In-person'}</td>\r\n                  <td>{reminder.doctor_name}</td>\r\n                  <td>{new Date(reminder.appointment_time).toLocaleString()}</td>\r\n                  <td>{new Date(reminder.reminder_time).toLocaleString()}</td>\r\n                  <td>\r\n                    <button \r\n                      className=\"btn btn-sm btn-danger\" \r\n                      onClick={() => deleteReminder(reminder.id)}\r\n                    >\r\n                      <FaTrash />\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      \r\n      <h2 className=\"text-center mb-3\">Upcoming Appointments</h2>\r\n      \r\n      {appointments.length === 0 ? (\r\n        <div className=\"alert alert-info text-center\">\r\n          No upcoming appointments found. Schedule appointments to set reminders.\r\n        </div>\r\n      ) : (\r\n        <div className=\"row\">\r\n          {appointments.map((appointment) => (\r\n            <div key={appointment.id} className=\"col-md-6 col-lg-4 mb-4\">\r\n              <div className={`card h-100 shadow ${isToday(appointment.date) ? 'border-primary' : isUpcoming(appointment.date) ? 'border-warning' : ''}`}>\r\n                <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n                  <h5 className=\"mb-0\">\r\n                    <FaUserMd className=\"me-2\" /> {appointment.doctor_name}\r\n                  </h5>\r\n                  {isToday(appointment.date) && (\r\n                    <span className=\"badge bg-primary\">Today</span>\r\n                  )}\r\n                  {isUpcoming(appointment.date) && !isToday(appointment.date) && (\r\n                    <span className=\"badge bg-warning text-dark\">Soon</span>\r\n                  )}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <p className=\"card-text\">\r\n                    <FaCalendarAlt className=\"me-2\" /> {new Date(appointment.date).toLocaleDateString()}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <FaClock className=\"me-2\" /> {appointment.time}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <strong>Type:</strong> {appointment.type === 'telehealth' ? 'Telehealth Consultation' : 'In-person Appointment'}\r\n                  </p>\r\n                  {appointment.location && (\r\n                    <p className=\"card-text\">\r\n                      <strong>Location:</strong> {appointment.location}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <button \r\n                    className=\"btn btn-block w-100\" \r\n                    onClick={() => toggleReminder(appointment)}\r\n                    disabled={loading}\r\n                  >\r\n                    {appointment.reminder_set ? (\r\n                      <><FaToggleOn className=\"me-2\" /> Reminder On</>\r\n                    ) : (\r\n                      <><FaToggleOff className=\"me-2\" /> Set Reminder</>\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppointmentRemindersPage; ","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { supabase } from '../utils/main';\r\nimport Spinner from '../components/Spinner';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FaBook, FaSearch, FaQuestionCircle, FaVideo, FaFileAlt, FaChevronDown, FaChevronUp } from 'react-icons/fa';\r\nimport '../styles.css';\r\n\r\nconst HelpCenterPage = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [activeCategory, setActiveCategory] = useState('all');\r\n  const [expandedFaqs, setExpandedFaqs] = useState({});\r\n  const [faqs, setFaqs] = useState([]);\r\n  const [tutorials, setTutorials] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [notification, setNotification] = useState(null);\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const fetchHelpCenterData = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Fetch FAQs from Supabase\r\n      const { data: faqData, error: faqError } = await supabase\r\n        .from('faqs')\r\n        .select('*')\r\n        .order('id');\r\n        \r\n      if (faqError) throw faqError;\r\n      \r\n      // Fetch tutorials from Supabase\r\n      const { data: tutorialData, error: tutorialError } = await supabase\r\n        .from('tutorials')\r\n        .select('*')\r\n        .order('id');\r\n        \r\n      if (tutorialError) throw tutorialError;\r\n      \r\n      // Set the data\r\n      setFaqs(faqData || []);\r\n      setTutorials(tutorialData || []);\r\n      \r\n      // Extract unique categories from both FAQs and tutorials\r\n      const faqCategories = [...new Set(faqData.map(faq => faq.category))];\r\n      const tutorialCategories = [...new Set(tutorialData.map(tutorial => tutorial.category))];\r\n      const allCategories = [...new Set([...faqCategories, ...tutorialCategories])];\r\n      setCategories(allCategories);\r\n      \r\n    } catch (error) {\r\n      console.error('Error fetching help center data:', error);\r\n      setNotification({ message: 'Error loading help center content.', type: 'danger' });\r\n      \r\n      // Fallback to static data if API fails\r\n      setFaqs(staticFaqs);\r\n      setTutorials(staticTutorials);\r\n      setCategories([...new Set([\r\n        ...staticFaqs.map(faq => faq.category),\r\n        ...staticTutorials.map(tutorial => tutorial.category)\r\n      ])]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchHelpCenterData();\r\n  }, [fetchHelpCenterData]);\r\n\r\n  // Static data as fallback\r\n  const staticFaqs = [\r\n    {\r\n      id: 1,\r\n      category: 'account',\r\n      question: 'How do I create an account?',\r\n      answer: 'To create an account, click on the \"Sign Up\" button on the login page. Fill in your personal details, including your email address and a secure password. Follow the verification steps sent to your email to complete the registration process.'\r\n    },\r\n    {\r\n      id: 2,\r\n      category: 'account',\r\n      question: 'How do I reset my password?',\r\n      answer: 'If you forgot your password, click on the \"Forgot Password\" link on the login page. Enter your registered email address, and we will send you a password reset link. Follow the instructions in the email to create a new password.'\r\n    },\r\n    {\r\n      id: 3,\r\n      category: 'appointments',\r\n      question: 'How do I schedule an appointment?',\r\n      answer: 'To schedule an appointment, navigate to the \"Appointments\" section in the navigation menu and select \"Upcoming Appointments\". Click on the \"Schedule New Appointment\" button and fill in the required details such as doctor name, date, time, and location. Click \"Schedule Appointment\" to confirm.'\r\n    },\r\n    {\r\n      id: 4,\r\n      category: 'appointments',\r\n      question: 'How do I cancel or reschedule an appointment?',\r\n      answer: 'To cancel or reschedule an appointment, go to the \"Upcoming Appointments\" page. Find the appointment you want to modify, then click the \"Edit\" button to change the date or time, or click the \"Cancel\" button to cancel the appointment entirely.'\r\n    },\r\n    {\r\n      id: 5,\r\n      category: 'medical',\r\n      question: 'How do I add my medical history?',\r\n      answer: 'To add your medical history, navigate to the \"Medical History\" page from the \"Your Journey\" menu. Click on \"Add New Medical Record\" and fill in the details about your condition, diagnosis date, doctor, and treatment. Click \"Add Record\" to save the information.'\r\n    },\r\n    {\r\n      id: 6,\r\n      category: 'medical',\r\n      question: 'How do I track my medications?',\r\n      answer: 'To track your medications, go to the \"Medication Tracker\" page from the \"Your Journey\" menu. Enter the medication name, frequency, and quantity, then click \"Add Medication\". You can view and manage all your medications from this page.'\r\n    },\r\n    {\r\n      id: 7,\r\n      category: 'telehealth',\r\n      question: 'How do I join a telehealth consultation?',\r\n      answer: 'To join a telehealth consultation, go to the \"Telehealth Consultations\" page. On the day of your appointment, you will see your consultation listed under \"Today\\'s Consultations\". Click the \"Join Meeting\" button at the scheduled time to enter the virtual consultation room.'\r\n    },\r\n    {\r\n      id: 8,\r\n      category: 'telehealth',\r\n      question: 'What equipment do I need for a telehealth consultation?',\r\n      answer: 'For a telehealth consultation, you need a device with a camera and microphone (smartphone, tablet, or computer), a stable internet connection, and a quiet, private space. Make sure your device is charged and your browser allows camera and microphone access.'\r\n    },\r\n    {\r\n      id: 9,\r\n      category: 'data',\r\n      question: 'Is my health data secure?',\r\n      answer: 'Yes, your health data is secure. We use industry-standard encryption and security measures to protect your personal and medical information. Our platform complies with healthcare privacy regulations, and your data is only accessible to you and the healthcare providers you authorize.'\r\n    },\r\n    {\r\n      id: 10,\r\n      category: 'data',\r\n      question: 'How do I export my health data?',\r\n      answer: 'To export your health data, go to the \"Data Backup & Export\" page under the \"Account\" menu. Select the type of data you want to export and the format (PDF, CSV, etc.). Click \"Export Data\" and follow the prompts to download your information.'\r\n    }\r\n  ];\r\n\r\n  const staticTutorials = [\r\n    {\r\n      id: 1,\r\n      category: 'getting-started',\r\n      title: 'Getting Started with DigiHealth',\r\n      type: 'video',\r\n      description: 'Learn the basics of navigating the DigiHealth platform and setting up your profile.',\r\n      link: '#'\r\n    },\r\n    {\r\n      id: 2,\r\n      category: 'appointments',\r\n      title: 'How to Schedule and Manage Appointments',\r\n      type: 'guide',\r\n      description: 'A step-by-step guide to scheduling, rescheduling, and canceling appointments.',\r\n      link: '#'\r\n    },\r\n    {\r\n      id: 3,\r\n      category: 'medical',\r\n      title: 'Managing Your Medical Records',\r\n      type: 'video',\r\n      description: 'Learn how to add, edit, and organize your medical history and records.',\r\n      link: '#'\r\n    },\r\n    {\r\n      id: 4,\r\n      category: 'telehealth',\r\n      title: 'Preparing for Your First Telehealth Consultation',\r\n      type: 'guide',\r\n      description: 'Tips and instructions for a successful virtual healthcare appointment.',\r\n      link: '#'\r\n    },\r\n    {\r\n      id: 5,\r\n      category: 'data',\r\n      title: 'Understanding Your Health Analytics',\r\n      type: 'video',\r\n      description: 'How to interpret and use the health analytics features to monitor your well-being.',\r\n      link: '#'\r\n    },\r\n    {\r\n      id: 6,\r\n      category: 'account',\r\n      title: 'Account Security Best Practices',\r\n      type: 'guide',\r\n      description: 'Learn how to keep your DigiHealth account secure with strong passwords and two-factor authentication.',\r\n      link: '#'\r\n    }\r\n  ];\r\n\r\n  // Filter FAQs based on search term and active category\r\n  const filteredFaqs = faqs.filter(faq => {\r\n    const matchesSearch = searchTerm === '' || \r\n      faq.question.toLowerCase().includes(searchTerm.toLowerCase()) || \r\n      faq.answer.toLowerCase().includes(searchTerm.toLowerCase());\r\n    \r\n    const matchesCategory = activeCategory === 'all' || faq.category === activeCategory;\r\n    \r\n    return matchesSearch && matchesCategory;\r\n  });\r\n\r\n  // Filter tutorials based on search term and active category\r\n  const filteredTutorials = tutorials.filter(tutorial => {\r\n    const matchesSearch = searchTerm === '' || \r\n      tutorial.title.toLowerCase().includes(searchTerm.toLowerCase()) || \r\n      tutorial.description.toLowerCase().includes(searchTerm.toLowerCase());\r\n    \r\n    const matchesCategory = activeCategory === 'all' || tutorial.category === activeCategory;\r\n    \r\n    return matchesSearch && matchesCategory;\r\n  });\r\n\r\n  // Toggle FAQ expansion\r\n  const toggleFaq = (id) => {\r\n    setExpandedFaqs(prev => ({\r\n      ...prev,\r\n      [id]: !prev[id]\r\n    }));\r\n  };\r\n\r\n  // Track FAQ view for analytics\r\n  const trackFaqView = async (faqId) => {\r\n    try {\r\n      // Only track if not already expanded (first view)\r\n      if (!expandedFaqs[faqId]) {\r\n        await supabase\r\n          .from('faq_analytics')\r\n          .insert([{\r\n            faq_id: faqId,\r\n            viewed_at: new Date().toISOString()\r\n          }]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error tracking FAQ view:', error);\r\n      // Silent fail - don't show error to user\r\n    }\r\n  };\r\n\r\n  // Track tutorial click for analytics\r\n  const trackTutorialClick = async (tutorialId) => {\r\n    try {\r\n      await supabase\r\n        .from('tutorial_analytics')\r\n        .insert([{\r\n          tutorial_id: tutorialId,\r\n          clicked_at: new Date().toISOString()\r\n        }]);\r\n    } catch (error) {\r\n      console.error('Error tracking tutorial click:', error);\r\n      // Silent fail - don't show error to user\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      {notification && (\r\n        <div className={`alert alert-${notification.type} text-center`}>\r\n          {notification.message}\r\n        </div>\r\n      )}\r\n      \r\n      <h1 className=\"text-center mb-4\">\r\n        <FaBook className=\"me-2\" /> Help Center\r\n      </h1>\r\n      \r\n      {/* Search and Filter */}\r\n      <div className=\"card shadow mb-4\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 mb-3\">\r\n              <div className=\"input-group\">\r\n                <span className=\"input-group-text\"><FaSearch /></span>\r\n                <input \r\n                  type=\"text\" \r\n                  className=\"form-control\" \r\n                  placeholder=\"Search for help topics...\" \r\n                  value={searchTerm} \r\n                  onChange={(e) => setSearchTerm(e.target.value)} \r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n              <select \r\n                className=\"form-select\" \r\n                value={activeCategory} \r\n                onChange={(e) => setActiveCategory(e.target.value)}\r\n              >\r\n                <option value=\"all\">All Categories</option>\r\n                {categories.map((category, index) => (\r\n                  <option key={index} value={category}>\r\n                    {category.charAt(0).toUpperCase() + category.slice(1).replace('-', ' ')}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Frequently Asked Questions */}\r\n      <div className=\"card shadow mb-4\">\r\n        <div className=\"card-header bg-primary text-white\">\r\n          <h2 className=\"mb-0\">\r\n            <FaQuestionCircle className=\"me-2\" /> Frequently Asked Questions\r\n          </h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          {filteredFaqs.length === 0 ? (\r\n            <div className=\"alert alert-info\">\r\n              No FAQs match your search criteria. Try a different search term or category.\r\n            </div>\r\n          ) : (\r\n            <div className=\"accordion\">\r\n              {filteredFaqs.map((faq) => (\r\n                <div key={faq.id} className=\"card mb-2\">\r\n                  <div \r\n                    className=\"card-header d-flex justify-content-between align-items-center\"\r\n                    onClick={() => {\r\n                      toggleFaq(faq.id);\r\n                      trackFaqView(faq.id);\r\n                    }}\r\n                    style={{ cursor: 'pointer' }}\r\n                  >\r\n                    <h5 className=\"mb-0\">{faq.question}</h5>\r\n                    {expandedFaqs[faq.id] ? <FaChevronUp /> : <FaChevronDown />}\r\n                  </div>\r\n                  {expandedFaqs[faq.id] && (\r\n                    <div className=\"card-body\">\r\n                      <p>{faq.answer}</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Video Tutorials and Guides */}\r\n      <div className=\"card shadow mb-4\">\r\n        <div className=\"card-header bg-success text-white\">\r\n          <h2 className=\"mb-0\">\r\n            <FaVideo className=\"me-2\" /> Tutorials & Guides\r\n          </h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          {filteredTutorials.length === 0 ? (\r\n            <div className=\"alert alert-info\">\r\n              No tutorials match your search criteria. Try a different search term or category.\r\n            </div>\r\n          ) : (\r\n            <div className=\"row\">\r\n              {filteredTutorials.map((tutorial) => (\r\n                <div key={tutorial.id} className=\"col-md-6 col-lg-4 mb-4\">\r\n                  <div className=\"card h-100\">\r\n                    <div className=\"card-header\">\r\n                      {tutorial.type === 'video' ? (\r\n                        <FaVideo className=\"me-2 text-danger\" />\r\n                      ) : (\r\n                        <FaFileAlt className=\"me-2 text-primary\" />\r\n                      )}\r\n                      <span className=\"badge bg-secondary\">{tutorial.category.replace('-', ' ')}</span>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <h5 className=\"card-title\">{tutorial.title}</h5>\r\n                      <p className=\"card-text\">{tutorial.description}</p>\r\n                    </div>\r\n                    <div className=\"card-footer\">\r\n                      <a \r\n                        href={tutorial.link} \r\n                        className=\"btn btn-primary btn-sm w-100\"\r\n                        onClick={() => trackTutorialClick(tutorial.id)}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        {tutorial.type === 'video' ? 'Watch Video' : 'Read Guide'}\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Additional Help */}\r\n      <div className=\"card shadow mb-4\">\r\n        <div className=\"card-header bg-info text-white\">\r\n          <h2 className=\"mb-0\">Need More Help?</h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4 mb-3\">\r\n              <div className=\"card h-100 text-center\">\r\n                <div className=\"card-body\">\r\n                  <h3>Contact Support</h3>\r\n                  <p>Reach out to our support team for personalized assistance.</p>\r\n                  <a href=\"/contact-support\" className=\"btn btn-primary\">Contact Support</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n              <div className=\"card h-100 text-center\">\r\n                <div className=\"card-body\">\r\n                  <h3>Live Chat</h3>\r\n                  <p>Chat with our support agents in real-time for immediate help.</p>\r\n                  <a href=\"/live-chat\" className=\"btn btn-primary\">Start Chat</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n              <div className=\"card h-100 text-center\">\r\n                <div className=\"card-body\">\r\n                  <h3>Email Support</h3>\r\n                  <p>Send us an email and we'll get back to you within 24 hours.</p>\r\n                  <a href=\"mailto:support@digihealth.com\" className=\"btn btn-primary\">Email Us</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HelpCenterPage; ","import React, { useState, useEffect } from 'react';\nimport { supabase } from '../utils/main';\nimport Spinner from '../components/Spinner';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaLifeRing, FaEnvelope, FaPhone, FaComments, FaQuestionCircle, FaExclamationTriangle, FaLightbulb } from 'react-icons/fa';\nimport '../styles.css';\n\nconst ContactSupportPage = () => {\n  const [loading, setLoading] = useState(false);\n  const [notification, setNotification] = useState(null);\n  const [userProfile, setUserProfile] = useState(null);\n  const [supportTicket, setSupportTicket] = useState({\n    subject: '',\n    category: 'general',\n    priority: 'medium',\n    message: '',\n    attachFile: null\n  });\n  const [faqSuggestions, setFaqSuggestions] = useState([]);\n\n  useEffect(() => {\n    fetchUserProfile();\n  }, []);\n\n  useEffect(() => {\n    // Simple FAQ suggestion system based on subject and message\n    if (supportTicket.subject.length > 3 || supportTicket.message.length > 10) {\n      const searchText = `${supportTicket.subject} ${supportTicket.message}`.toLowerCase();\n      \n      // Sample FAQs that might match user's query\n      const faqs = [\n        {\n          question: 'How do I reset my password?',\n          answer: 'Click on \"Forgot Password\" on the login page and follow the instructions sent to your email.',\n          keywords: ['password', 'reset', 'forgot', 'login', 'sign in', 'cannot access']\n        },\n        {\n          question: 'How do I schedule an appointment?',\n          answer: 'Go to \"Upcoming Appointments\" and click \"Schedule New Appointment\".',\n          keywords: ['schedule', 'appointment', 'book', 'doctor', 'visit', 'consultation']\n        },\n        {\n          question: 'How do I update my profile information?',\n          answer: 'Navigate to \"Profile Settings\" under the Account menu to edit your personal details.',\n          keywords: ['profile', 'update', 'change', 'information', 'details', 'personal']\n        },\n        {\n          question: 'How do I export my health data?',\n          answer: 'Go to \"Data Backup & Export\" under the Account menu to download your information.',\n          keywords: ['export', 'download', 'data', 'backup', 'information', 'records']\n        },\n        {\n          question: 'How do I join a telehealth consultation?',\n          answer: 'On the day of your appointment, go to \"Telehealth Consultations\" and click \"Join Meeting\".',\n          keywords: ['telehealth', 'virtual', 'video', 'call', 'consultation', 'join', 'meeting']\n        }\n      ];\n      \n      // Find matching FAQs\n      const suggestions = faqs.filter(faq => {\n        return faq.keywords.some(keyword => searchText.includes(keyword));\n      });\n      \n      setFaqSuggestions(suggestions.slice(0, 3)); // Limit to 3 suggestions\n    } else {\n      setFaqSuggestions([]);\n    }\n  }, [supportTicket.subject, supportTicket.message]);\n\n  const fetchUserProfile = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        window.location.href = '/';\n        return;\n      }\n      \n      const { data, error } = await supabase\n        .from('detailed_profiles')\n        .select('*')\n        .eq('id', user.id)\n        .single();\n        \n      if (error) throw error;\n      setUserProfile(data);\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      setNotification({ message: 'Error fetching user profile.', type: 'danger' });\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setSupportTicket(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleFileChange = (e) => {\n    setSupportTicket(prev => ({\n      ...prev,\n      attachFile: e.target.files[0]\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    \n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        window.location.href = '/';\n        return;\n      }\n      \n      // Upload attachment if exists\n      let attachmentUrl = null;\n      if (supportTicket.attachFile) {\n        const fileName = `${user.id}-${Date.now()}-${supportTicket.attachFile.name}`;\n        const { data: fileData, error: fileError } = await supabase.storage\n          .from('support-attachments')\n          .upload(fileName, supportTicket.attachFile);\n          \n        if (fileError) throw fileError;\n        \n        const { data: urlData } = supabase.storage\n          .from('support-attachments')\n          .getPublicUrl(fileName);\n          \n        attachmentUrl = urlData.publicUrl;\n      }\n      \n      // Create support ticket\n      const { error } = await supabase\n        .from('support_tickets')\n        .insert([{\n          user_id: user.id,\n          subject: supportTicket.subject,\n          category: supportTicket.category,\n          priority: supportTicket.priority,\n          message: supportTicket.message,\n          attachment_url: attachmentUrl,\n          status: 'open',\n          created_at: new Date().toISOString()\n        }]);\n        \n      if (error) throw error;\n      \n      setNotification({ message: 'Support ticket submitted successfully! Our team will respond shortly.', type: 'success' });\n      \n      // Reset form\n      setSupportTicket({\n        subject: '',\n        category: 'general',\n        priority: 'medium',\n        message: '',\n        attachFile: null\n      });\n      \n      // Reset file input\n      document.getElementById('attachFile').value = '';\n      \n    } catch (error) {\n      console.error('Error submitting support ticket:', error);\n      setNotification({ message: 'Error submitting support ticket. Please try again.', type: 'danger' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container mt-4\">\n      {notification && (\n        <div className={`alert alert-${notification.type} text-center`}>\n          {notification.message}\n        </div>\n      )}\n      \n      <h1 className=\"text-center mb-4\">\n        <FaLifeRing className=\"me-2\" /> Contact Support\n      </h1>\n      \n      <div className=\"row\">\n        <div className=\"col-lg-8\">\n          {/* Support Ticket Form */}\n          <div className=\"card shadow mb-4\">\n            <div className=\"card-header bg-primary text-white\">\n              <h2 className=\"mb-0\">Submit a Support Request</h2>\n            </div>\n            <div className=\"card-body\">\n              {faqSuggestions.length > 0 && (\n                <div className=\"alert alert-info mb-4\">\n                  <h5><FaLightbulb className=\"me-2\" /> Did you know?</h5>\n                  <p>We found some help articles that might answer your question:</p>\n                  <ul className=\"mb-0\">\n                    {faqSuggestions.map((faq, index) => (\n                      <li key={index}>\n                        <strong>{faq.question}</strong> - {faq.answer}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n              \n              <form onSubmit={handleSubmit}>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"subject\" className=\"form-label\">Subject</label>\n                  <input \n                    type=\"text\" \n                    className=\"form-control\" \n                    id=\"subject\" \n                    name=\"subject\" \n                    value={supportTicket.subject} \n                    onChange={handleChange} \n                    required \n                    placeholder=\"Brief description of your issue\"\n                  />\n                </div>\n                \n                <div className=\"row\">\n                  <div className=\"col-md-6 mb-3\">\n                    <label htmlFor=\"category\" className=\"form-label\">Category</label>\n                    <select \n                      className=\"form-select\" \n                      id=\"category\" \n                      name=\"category\" \n                      value={supportTicket.category} \n                      onChange={handleChange}\n                    >\n                      <option value=\"general\">General Question</option>\n                      <option value=\"account\">Account Issues</option>\n                      <option value=\"appointments\">Appointments</option>\n                      <option value=\"medical\">Medical Records</option>\n                      <option value=\"telehealth\">Telehealth</option>\n                      <option value=\"technical\">Technical Problem</option>\n                      <option value=\"billing\">Billing & Payments</option>\n                    </select>\n                  </div>\n                  <div className=\"col-md-6 mb-3\">\n                    <label htmlFor=\"priority\" className=\"form-label\">Priority</label>\n                    <select \n                      className=\"form-select\" \n                      id=\"priority\" \n                      name=\"priority\" \n                      value={supportTicket.priority} \n                      onChange={handleChange}\n                    >\n                      <option value=\"low\">Low - General Question</option>\n                      <option value=\"medium\">Medium - Need Help Soon</option>\n                      <option value=\"high\">High - Urgent Issue</option>\n                    </select>\n                  </div>\n                </div>\n                \n                <div className=\"mb-3\">\n                  <label htmlFor=\"message\" className=\"form-label\">Message</label>\n                  <textarea \n                    className=\"form-control\" \n                    id=\"message\" \n                    name=\"message\" \n                    rows=\"6\" \n                    value={supportTicket.message} \n                    onChange={handleChange} \n                    required \n                    placeholder=\"Please describe your issue in detail. Include any error messages or steps to reproduce the problem.\"\n                  ></textarea>\n                </div>\n                \n                <div className=\"mb-3\">\n                  <label htmlFor=\"attachFile\" className=\"form-label\">Attach File (optional)</label>\n                  <input \n                    type=\"file\" \n                    className=\"form-control\" \n                    id=\"attachFile\" \n                    onChange={handleFileChange} \n                  />\n                  <div className=\"form-text\">\n                    You can attach screenshots or documents to help explain your issue (max 5MB).\n                  </div>\n                </div>\n                \n                <button \n                  type=\"submit\" \n                  className=\"btn btn-primary\" \n                  disabled={loading}\n                >\n                  {loading ? (\n                    <>\n                      <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                      Submitting...\n                    </>\n                  ) : (\n                    'Submit Support Request'\n                  )}\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"col-lg-4\">\n          {/* Contact Information */}\n          <div className=\"card shadow mb-4\">\n            <div className=\"card-header bg-info text-white\">\n              <h3 className=\"mb-0\">Contact Information</h3>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"d-flex align-items-center mb-3\">\n                <FaEnvelope className=\"me-3 fs-4 text-primary\" />\n                <div>\n                  <h5 className=\"mb-0\">Email Support</h5>\n                  <p className=\"mb-0\">support@digihealth.com</p>\n                  <small className=\"text-muted\">Response within 24 hours</small>\n                </div>\n              </div>\n              \n              <div className=\"d-flex align-items-center mb-3\">\n                <FaPhone className=\"me-3 fs-4 text-primary\" />\n                <div>\n                  <h5 className=\"mb-0\">Phone Support</h5>\n                  <p className=\"mb-0\">1-800-DIGI-HEALTH</p>\n                  <small className=\"text-muted\">Mon-Fri, 9am-5pm EST</small>\n                </div>\n              </div>\n              \n              <div className=\"d-flex align-items-center\">\n                <FaComments className=\"me-3 fs-4 text-primary\" />\n                <div>\n                  <h5 className=\"mb-0\">Live Chat</h5>\n                  <p className=\"mb-0\">\n                    <a href=\"/live-chat\" className=\"btn btn-sm btn-outline-primary mt-1\">Start Chat</a>\n                  </p>\n                  <small className=\"text-muted\">Available 24/7</small>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {/* Support Resources */}\n          <div className=\"card shadow mb-4\">\n            <div className=\"card-header bg-success text-white\">\n              <h3 className=\"mb-0\">Support Resources</h3>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"d-flex align-items-center mb-3\">\n                <FaQuestionCircle className=\"me-3 fs-4 text-success\" />\n                <div>\n                  <h5 className=\"mb-0\">Help Center</h5>\n                  <p className=\"mb-0\">\n                    <a href=\"/help-center\" className=\"btn btn-sm btn-outline-success mt-1\">Browse FAQs</a>\n                  </p>\n                </div>\n              </div>\n              \n              <div className=\"d-flex align-items-center\">\n                <FaExclamationTriangle className=\"me-3 fs-4 text-warning\" />\n                <div>\n                  <h5 className=\"mb-0\">System Status</h5>\n                  <p className=\"mb-0\">\n                    <span className=\"badge bg-success\">All Systems Operational</span>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactSupportPage; ","import React, { useState, useEffect, useRef } from 'react';\nimport { supabase } from '../utils/supabaseClient';\nimport { useAuth } from '../contexts/AuthContext';\nimport { FaPaperPlane, FaMicrophone, FaMicrophoneSlash, FaVideo, FaVideoSlash, FaFile, FaImage } from 'react-icons/fa';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst LiveChat = () => {\n  const { user } = useAuth();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [chatStatus, setChatStatus] = useState('connecting');\n  const [supportAgent, setSupportAgent] = useState(null);\n  const [chatSubscription, setChatSubscription] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    initializeChat();\n    return () => {\n      // Cleanup subscription\n      if (chatSubscription) {\n        chatSubscription.unsubscribe();\n      }\n    };\n  }, [user, chatSubscription]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const initializeChat = async () => {\n    try {\n      // Get or create chat session\n      const { data: sessionData, error: sessionError } = await supabase\n        .from('chat_sessions')\n        .select('*')\n        .eq('user_id', user.id)\n        .eq('status', 'active')\n        .single();\n\n      if (sessionError && sessionError.code !== 'PGRST116') {\n        throw sessionError;\n      }\n\n      let sessionId;\n      if (!sessionData) {\n        // Create new session\n        const { data: newSession, error: createError } = await supabase\n          .from('chat_sessions')\n          .insert([\n            {\n              user_id: user.id,\n              status: 'active',\n              created_at: new Date().toISOString()\n            }\n          ])\n          .select()\n          .single();\n\n        if (createError) throw createError;\n        sessionId = newSession.id;\n      } else {\n        sessionId = sessionData.id;\n      }\n\n      // Fetch existing messages\n      const { data: messagesData, error: messagesError } = await supabase\n        .from('chat_messages')\n        .select('*')\n        .eq('session_id', sessionId)\n        .order('created_at', { ascending: true });\n\n      if (messagesError) throw messagesError;\n      setMessages(messagesData || []);\n\n      // Subscribe to new messages\n      const subscription = supabase\n        .channel('chat_messages')\n        .on(\n          'postgres_changes',\n          {\n            event: 'INSERT',\n            schema: 'public',\n            table: 'chat_messages',\n            filter: `session_id=eq.${sessionId}`\n          },\n          (payload) => {\n            setMessages(prev => [...prev, payload.new]);\n          }\n        )\n        .subscribe();\n        \n      setChatSubscription(subscription);\n\n      // Get support agent info\n      const { data: agentData, error: agentError } = await supabase\n        .from('support_agents')\n        .select('*')\n        .eq('status', 'online')\n        .single();\n\n      if (agentError && agentError.code !== 'PGRST116') {\n        throw agentError;\n      }\n\n      if (agentData) {\n        setSupportAgent(agentData);\n        setChatStatus('connected');\n      } else {\n        setChatStatus('waiting');\n      }\n\n    } catch (error) {\n      console.error('Error initializing chat:', error);\n      setChatStatus('error');\n    }\n  };\n\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n\n    try {\n      const { data: sessionData } = await supabase\n        .from('chat_sessions')\n        .select('id')\n        .eq('user_id', user.id)\n        .eq('status', 'active')\n        .single();\n\n      if (!sessionData) {\n        throw new Error('No active chat session');\n      }\n\n      const { error } = await supabase\n        .from('chat_messages')\n        .insert([\n          {\n            session_id: sessionData.id,\n            user_id: user.id,\n            message: newMessage.trim(),\n            type: 'text',\n            created_at: new Date().toISOString()\n          }\n        ]);\n\n      if (error) throw error;\n      setNewMessage('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  const handleFileUpload = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    try {\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${Math.random()}.${fileExt}`;\n      const filePath = `${user.id}/${fileName}`;\n\n      const { error: uploadError } = await supabase.storage\n        .from('chat-attachments')\n        .upload(filePath, file);\n\n      if (uploadError) throw uploadError;\n\n      const { data: sessionData } = await supabase\n        .from('chat_sessions')\n        .select('id')\n        .eq('user_id', user.id)\n        .eq('status', 'active')\n        .single();\n\n      if (!sessionData) {\n        throw new Error('No active chat session');\n      }\n\n      const { error: messageError } = await supabase\n        .from('chat_messages')\n        .insert([\n          {\n            session_id: sessionData.id,\n            user_id: user.id,\n            message: file.name,\n            type: file.type.startsWith('image/') ? 'image' : 'file',\n            attachment_url: filePath,\n            created_at: new Date().toISOString()\n          }\n        ]);\n\n      if (messageError) throw messageError;\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n\n  return (\n    <div className=\"container-fluid h-100\">\n      <div className=\"row h-100\">\n        {/* Sidebar */}\n        <div className=\"col-md-3 p-0 border-end\">\n          <div className=\"p-3 border-bottom\">\n            <h5 className=\"mb-0\">Chat Information</h5>\n            <small className=\"text-muted\">\n              Status: <span className={`text-${chatStatus === 'connected' ? 'success' : 'warning'}`}>\n                {chatStatus.charAt(0).toUpperCase() + chatStatus.slice(1)}\n              </span>\n            </small>\n          </div>\n          {supportAgent && (\n            <div className=\"p-3\">\n              <h6 className=\"mb-2\">Support Agent</h6>\n              <div className=\"d-flex align-items-center\">\n                <div className=\"avatar-circle me-2\">\n                  {supportAgent.name.charAt(0)}\n                </div>\n                <div>\n                  <div className=\"fw-bold\">{supportAgent.name}</div>\n                  <small className=\"text-muted\">{supportAgent.role}</small>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Chat Area */}\n        <div className=\"col-md-9 p-0 d-flex flex-column\">\n          {/* Messages */}\n          <div className=\"flex-grow-1 p-3 overflow-auto\" style={{ height: 'calc(100vh - 200px)' }}>\n            {messages.map((message, index) => (\n              <div\n                key={index}\n                className={`d-flex ${message.user_id === user.id ? 'justify-content-end' : 'justify-content-start'} mb-3`}\n              >\n                <div\n                  className={`chat-message ${\n                    message.user_id === user.id ? 'bg-primary text-white' : 'bg-light'\n                  }`}\n                >\n                  {message.type === 'text' ? (\n                    <p className=\"mb-0\">{message.message}</p>\n                  ) : message.type === 'image' ? (\n                    <img\n                      src={`${process.env.REACT_APP_SUPABASE_URL}/storage/v1/object/public/chat-attachments/${message.attachment_url}`}\n                      alt=\"Shared image\"\n                      className=\"img-fluid rounded\"\n                      style={{ maxWidth: '200px' }}\n                    />\n                  ) : (\n                    <a\n                      href={`${process.env.REACT_APP_SUPABASE_URL}/storage/v1/object/public/chat-attachments/${message.attachment_url}`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"text-decoration-none\"\n                    >\n                      <FaFile className=\"me-2\" />\n                      {message.message}\n                    </a>\n                  )}\n                </div>\n              </div>\n            ))}\n            <div ref={messagesEndRef} />\n          </div>\n\n          {/* Input Area */}\n          <div className=\"p-3 border-top\">\n            <form onSubmit={sendMessage} className=\"d-flex gap-2\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Type your message...\"\n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n                onFocus={() => setIsTyping(true)}\n                onBlur={() => setIsTyping(false)}\n              />\n              <label className=\"btn btn-outline-primary\">\n                <input\n                  type=\"file\"\n                  className=\"d-none\"\n                  onChange={handleFileUpload}\n                  accept=\"image/*,.pdf,.doc,.docx\"\n                />\n                <FaFile />\n              </label>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                <FaPaperPlane />\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LiveChat; ","import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\nimport Spinner from '../components/Spinner';\r\nimport EmergencyQRCode from '../components/EmergencyQRCode';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './ProfilePage.css';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst ProfilePage = () => {\r\n  const [profile, setProfile] = useState({\r\n    first_name: null,\r\n    last_name: null,\r\n    email: null,\r\n    date_of_birth: null,\r\n    gender: null,\r\n    blood_group: null,\r\n    height: '',\r\n    weight: '',\r\n    allergies: [],\r\n    medical_conditions: [],\r\n    emergency_contact_name: null,\r\n    emergency_contact_phone: null,\r\n    emergency_contact_relationship: null,\r\n    phone: null,\r\n    address: null,\r\n    bio: '',\r\n    profile_picture: null\r\n  });\r\n  const [diseaseNames, setDiseaseNames] = useState([]);\r\n  const [newDiseaseName, setNewDiseaseName] = useState('');\r\n  const [parameters, setParameters] = useState([]);\r\n  const [newParameter, setNewParameter] = useState({ name: '', value: '', unit: '' });\r\n  const [loading, setLoading] = useState(true);\r\n  const [editing, setEditing] = useState(false);\r\n  const [activeSection, setActiveSection] = useState('profile');\r\n  const [uploadingImage, setUploadingImage] = useState(false);\r\n  const [notification, setNotification] = useState('');\r\n  const [allergies, setAllergies] = useState([]);\r\n  const [newAllergy, setNewAllergy] = useState({ name: '', severity: 'mild' });\r\n  const [commonDiseases, setCommonDiseases] = useState([]);\r\n  const [showSidebar, setShowSidebar] = useState(true);\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    fetchProfile();\r\n    fetchDiseases();\r\n    fetchAllergies();\r\n    fetchParameters();\r\n    \r\n    // Check for URL parameters\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n    const section = queryParams.get('section');\r\n    if (section) {\r\n        setActiveSection(section);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (activeSection === 'diseases') {\r\n      fetchCommonDiseases();\r\n    }\r\n  }, [activeSection]);\r\n\r\n  const fetchProfile = async () => {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) throw new Error('No user logged in');\r\n\r\n      const { data, error } = await supabase\r\n        .from('detailed_profiles')\r\n        .select('*')\r\n        .eq('id', user.id)\r\n        .single();\r\n\r\n      if (error) {\r\n        if (error.code === 'PGRST116') {\r\n          // Profile doesn't exist, create one\r\n          const { data: newProfile, error: createError } = await supabase\r\n            .from('detailed_profiles')\r\n            .insert([{ id: user.id }])\r\n            .select()\r\n            .single();\r\n            \r\n          if (createError) throw createError;\r\n          setProfile(newProfile || {});\r\n        } else {\r\n          throw error;\r\n        }\r\n      } else {\r\n        setProfile(data || {});\r\n      }\r\n    } catch (error) {\r\n      toast.error('Error fetching profile: ' + error.message, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchDiseases = async () => {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) throw new Error('No user logged in');\r\n\r\n      const { data, error } = await supabase\r\n        .from('user_diseases')\r\n        .select('*')\r\n        .eq('user_id', user.id);\r\n        \r\n      if (error) throw error;\r\n      setDiseaseNames(data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching diseases:', error);\r\n    }\r\n  };\r\n\r\n  const fetchCommonDiseases = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('common_diseases')\r\n        .select('*');\r\n        \r\n      if (error) throw error;\r\n      setCommonDiseases(data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching common diseases:', error);\r\n    }\r\n  };\r\n\r\n  const fetchAllergies = async () => {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) throw new Error('No user logged in');\r\n\r\n      const { data, error } = await supabase\r\n        .from('user_allergies')\r\n        .select('*')\r\n        .eq('user_id', user.id);\r\n        \r\n      if (error) throw error;\r\n      setAllergies(data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching allergies:', error);\r\n    }\r\n  };\r\n\r\n  const fetchParameters = async () => {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) throw new Error('No user logged in');\r\n\r\n      const { data, error } = await supabase\r\n        .from('user_parameters')\r\n        .select('*')\r\n        .eq('user_id', user.id)\r\n        .order('date_recorded', { ascending: false });\r\n        \r\n      if (error) throw error;\r\n      setParameters(data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching parameters:', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setProfile((prevProfile) => ({\r\n      ...prevProfile,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) throw new Error('No user logged in');\r\n\r\n      // Only include fields that are in the detailed_profiles table\r\n      const updatedProfile = {\r\n        first_name: profile.first_name || null,\r\n        last_name: profile.last_name || null,\r\n        email: profile.email || null,\r\n        date_of_birth: profile.date_of_birth || null,\r\n        gender: profile.gender || null,\r\n        blood_group: profile.blood_group || null,\r\n        height: profile.height || null,  // Add height field\r\n        weight: profile.weight || null,  // Add weight field\r\n        phone: profile.phone || null,\r\n        address: profile.address || null,\r\n        emergency_contact_name: profile.emergency_contact_name || null,\r\n        emergency_contact_phone: profile.emergency_contact_phone || null,\r\n        emergency_contact_relationship: profile.emergency_contact_relationship || null,\r\n        profile_picture: profile.profile_picture || null,\r\n        bio: profile.bio || null,       // Add bio field if needed\r\n        updated_at: new Date().toISOString()\r\n      };\r\n\r\n      const { error } = await supabase\r\n        .from('detailed_profiles')\r\n        .update(updatedProfile)\r\n        .eq('id', user.id);\r\n\r\n      if (error) throw error;\r\n\r\n      toast.success('Profile updated successfully!', {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true\r\n      });\r\n      setEditing(false);\r\n    } catch (error) {\r\n      toast.error('Error updating profile: ' + error.message, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddDiseaseName = async () => {\r\n    if (newDiseaseName.trim()) {\r\n      try {\r\n        setLoading(true);\r\n        const { data: { user } } = await supabase.auth.getUser();\r\n        if (!user) throw new Error('No user logged in');\r\n        \r\n        // Check if disease already exists for user\r\n        const { data: existingDisease, error: checkError } = await supabase\r\n          .from('user_diseases')\r\n          .select('*')\r\n          .eq('user_id', user.id)\r\n          .eq('disease_name', newDiseaseName)\r\n          .single();\r\n        \r\n        if (checkError && checkError.code !== 'PGRST116') {\r\n          throw checkError;\r\n        }\r\n        \r\n        if (!existingDisease) {\r\n          // Insert the disease for this user\r\n          const { data, error } = await supabase\r\n            .from('user_diseases')\r\n            .insert([{\r\n              user_id: user.id,\r\n              disease_name: newDiseaseName,\r\n              date_diagnosed: new Date().toISOString()\r\n            }])\r\n            .select();\r\n            \r\n          if (error) throw error;\r\n          \r\n          setDiseaseNames([...diseaseNames, ...data]);\r\n          toast.success('Disease added successfully!', {\r\n            position: \"top-right\",\r\n            autoClose: 3000\r\n          });\r\n        } else {\r\n          toast.info('This disease is already in your list', {\r\n            position: \"top-right\",\r\n            autoClose: 3000\r\n          });\r\n        }\r\n        \r\n        setNewDiseaseName('');\r\n      } catch (error) {\r\n        console.error('Error adding disease:', error);\r\n        toast.error('Error adding disease: ' + error.message, {\r\n          position: \"top-right\",\r\n          autoClose: 5000\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddParameter = async () => {\r\n    if (newParameter.name.trim() && newParameter.value.trim()) {\r\n      try {\r\n        setLoading(true);\r\n        const { data: { user } } = await supabase.auth.getUser();\r\n        if (!user) throw new Error('No user logged in');\r\n        \r\n        // Insert the parameter for this user\r\n        const { data, error } = await supabase\r\n          .from('user_parameters')\r\n          .insert([{\r\n            user_id: user.id,\r\n            parameter_name: newParameter.name,\r\n            value: newParameter.value,\r\n            unit: newParameter.unit || '',\r\n            date_recorded: new Date().toISOString()\r\n          }])\r\n          .select();\r\n          \r\n        if (error) throw error;\r\n        \r\n        setParameters([...parameters, ...data]);\r\n        setNewParameter({ name: '', value: '', unit: '' });\r\n        toast.success('Parameter added successfully!', {\r\n          position: \"top-right\",\r\n          autoClose: 3000\r\n        });\r\n      } catch (error) {\r\n        console.error('Error adding parameter:', error);\r\n        toast.error('Error adding parameter: ' + error.message, {\r\n          position: \"top-right\", \r\n          autoClose: 5000\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      toast.warning('Please enter both parameter name and value', {\r\n        position: \"top-right\",\r\n        autoClose: 3000\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddAllergy = async () => {\r\n    if (newAllergy.name.trim()) {\r\n      try {\r\n        setLoading(true);\r\n        const { data: { user } } = await supabase.auth.getUser();\r\n        if (!user) throw new Error('No user logged in');\r\n        \r\n        // Check if allergy already exists for user\r\n        const { data: existingAllergy, error: checkError } = await supabase\r\n          .from('user_allergies')\r\n          .select('*')\r\n          .eq('user_id', user.id)\r\n          .eq('allergy_name', newAllergy.name)\r\n          .single();\r\n        \r\n        if (checkError && checkError.code !== 'PGRST116') {\r\n          throw checkError;\r\n        }\r\n        \r\n        if (!existingAllergy) {\r\n          // Insert the allergy for this user\r\n          const { data, error } = await supabase\r\n            .from('user_allergies')\r\n            .insert([{\r\n              user_id: user.id,\r\n              allergy_name: newAllergy.name,\r\n              severity: newAllergy.severity\r\n            }])\r\n            .select();\r\n            \r\n          if (error) throw error;\r\n          \r\n          setAllergies([...allergies, ...data]);\r\n          toast.success('Allergy added successfully!', {\r\n            position: \"top-right\",\r\n            autoClose: 3000\r\n          });\r\n        } else {\r\n          toast.info('This allergy is already in your list', {\r\n            position: \"top-right\", \r\n            autoClose: 3000\r\n          });\r\n        }\r\n        \r\n        setNewAllergy({ name: '', severity: 'mild' });\r\n      } catch (error) {\r\n        console.error('Error adding allergy:', error);\r\n        toast.error('Error adding allergy: ' + error.message, {\r\n          position: \"top-right\",\r\n          autoClose: 5000\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      toast.warning('Please enter an allergy name', {\r\n        position: \"top-right\",\r\n        autoClose: 3000\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleImageUpload = async (e) => {\r\n    try {\r\n      setUploadingImage(true);\r\n      const file = e.target.files[0];\r\n      if (!file) return;\r\n\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) throw new Error('No user logged in');\r\n\r\n      const fileExt = file.name.split('.').pop();\r\n      const filePath = `${user.id}/${Math.random()}.${fileExt}`;\r\n\r\n      const { error: uploadError } = await supabase.storage\r\n        .from('profile-pictures')\r\n        .upload(filePath, file);\r\n\r\n      if (uploadError) throw uploadError;\r\n\r\n      const { data: { publicUrl } } = supabase.storage\r\n        .from('profile-pictures')\r\n        .getPublicUrl(filePath);\r\n\r\n      setProfile(prev => ({ ...prev, profile_picture: publicUrl }));\r\n      \r\n      // Update the profile with the new image URL\r\n      const { error: updateError } = await supabase\r\n        .from('detailed_profiles')\r\n        .update({ profile_picture: publicUrl })\r\n        .eq('id', user.id);\r\n\r\n      if (updateError) throw updateError;\r\n\r\n      toast.success('Profile picture updated successfully!', {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true\r\n      });\r\n    } catch (error) {\r\n      toast.error('Error uploading image: ' + error.message, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true\r\n      });\r\n    } finally {\r\n      setUploadingImage(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile-page container-fluid\">\r\n      {notification && (\r\n        <div className=\"alert alert-info alert-dismissible fade show\" role=\"alert\">\r\n          {notification}\r\n          <button type=\"button\" className=\"btn-close\" onClick={() => setNotification('')}></button>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"row\">\r\n        {/* Left Sidebar - Make it collapsible on mobile */}\r\n        <div className=\"col-lg-3 col-md-4\">\r\n          <div className=\"profile-sidebar card mb-3\">\r\n            <div className=\"d-lg-none\">\r\n              <button \r\n                className=\"btn btn-link w-100 text-start\" \r\n                onClick={() => setShowSidebar(!showSidebar)}\r\n              >\r\n                <i className=\"fas fa-bars me-2\"></i>\r\n                Menu\r\n              </button>\r\n            </div>\r\n            <div className={`card-body ${showSidebar ? '' : 'd-none d-lg-block'}`}>\r\n              <div className=\"profile-picture-container mb-3\">\r\n                <img\r\n                  src={profile.profile_picture || '/default-profile.png'}\r\n                  alt=\"Profile\"\r\n                  className=\"profile-picture img-fluid rounded-circle mb-2\"\r\n                />\r\n                {editing && (\r\n                  <div className=\"mt-2\">\r\n                    <input type=\"file\" onChange={handleImageUpload} className=\"form-control form-control-sm\" />\r\n                  </div>\r\n                )}\r\n                {uploadingImage && <Spinner />}\r\n              </div>\r\n              <h3 className=\"mb-0\">{profile.first_name} {profile.last_name}</h3>\r\n              <p className=\"text-muted\">{profile.email}</p>\r\n              <button \r\n                onClick={() => setEditing(!editing)} \r\n                className={`btn ${editing ? 'btn-secondary' : 'btn-primary'} w-100`}\r\n              >\r\n                {editing ? 'Cancel Editing' : 'Edit Profile'}\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"list-group list-group-flush\">\r\n              <button \r\n                className={`list-group-item list-group-item-action ${activeSection === 'profile' ? 'active' : ''}`}\r\n                onClick={() => setActiveSection('profile')}\r\n              >\r\n                <i className=\"fas fa-user me-2\"></i> Basic Information\r\n              </button>\r\n              <button \r\n                className={`list-group-item list-group-item-action ${activeSection === 'medical' ? 'active' : ''}`}\r\n                onClick={() => setActiveSection('medical')}\r\n              >\r\n                <i className=\"fas fa-heartbeat me-2\"></i> Medical Information\r\n              </button>\r\n              <button \r\n                className={`list-group-item list-group-item-action ${activeSection === 'emergency' ? 'active' : ''}`}\r\n                onClick={() => setActiveSection('emergency')}\r\n              >\r\n                <i className=\"fas fa-phone-alt me-2\"></i> Emergency Contacts\r\n              </button>\r\n              <button \r\n                className={`list-group-item list-group-item-action ${activeSection === 'diseases' ? 'active' : ''}`}\r\n                onClick={() => setActiveSection('diseases')}\r\n              >\r\n                <i className=\"fas fa-notes-medical me-2\"></i> Diseases & Conditions\r\n              </button>\r\n              <button \r\n                className={`list-group-item list-group-item-action ${activeSection === 'parameters' ? 'active' : ''}`}\r\n                onClick={() => setActiveSection('parameters')}\r\n              >\r\n                <i className=\"fas fa-chart-line me-2\"></i> Health Parameters\r\n              </button>\r\n              <button \r\n                className={`list-group-item list-group-item-action ${activeSection === 'emergency-qr' ? 'active' : ''}`}\r\n                onClick={() => setActiveSection('emergency-qr')}\r\n              >\r\n                <i className=\"fas fa-qrcode me-2\"></i> Emergency QR Code\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"col-lg-9 col-md-8\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              {activeSection === 'profile' && (\r\n                <div className=\"profile-section\">\r\n                  <h4 className=\"card-title mb-4\">Basic Information</h4>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"profile-field\">\r\n                        <label>First Name:</label>\r\n                        {editing ? (\r\n                          <input type=\"text\" name=\"first_name\" value={profile.first_name} onChange={handleChange} className=\"form-control\" />\r\n                        ) : (\r\n                          <p className=\"form-control-plaintext\">{profile.first_name}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"profile-field\">\r\n                        <label>Last Name:</label>\r\n                        {editing ? (\r\n                          <input type=\"text\" name=\"last_name\" value={profile.last_name} onChange={handleChange} className=\"form-control\" />\r\n                        ) : (\r\n                          <p className=\"form-control-plaintext\">{profile.last_name}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"profile-field\">\r\n                        <label>Email:</label>\r\n                        {editing ? (\r\n                          <input type=\"email\" name=\"email\" value={profile.email} onChange={handleChange} className=\"form-control\" />\r\n                        ) : (\r\n                          <p className=\"form-control-plaintext\">{profile.email}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"profile-field\">\r\n                        <label>Phone:</label>\r\n                        {editing ? (\r\n                          <input type=\"tel\" name=\"phone\" value={profile.phone} onChange={handleChange} className=\"form-control\" />\r\n                        ) : (\r\n                          <p className=\"form-control-plaintext\">{profile.phone}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                      <div className=\"profile-field\">\r\n                        <label>Address:</label>\r\n                        {editing ? (\r\n                          <input type=\"text\" name=\"address\" value={profile.address} onChange={handleChange} className=\"form-control\" />\r\n                        ) : (\r\n                          <p className=\"form-control-plaintext\">{profile.address}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                      <div className=\"profile-field\">\r\n                        <label>Bio:</label>\r\n                        {editing ? (\r\n                          <textarea name=\"bio\" value={profile.bio} onChange={handleChange} className=\"form-control\" rows=\"3\"></textarea>\r\n                        ) : (\r\n                          <p className=\"form-control-plaintext\">{profile.bio}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {activeSection === 'medical' && (\r\n                <div className=\"medical-section\">\r\n                  <h4 className=\"card-title mb-4\">Medical Information</h4>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"profile-field\">\r\n                        <label>Date of Birth:</label>\r\n                        {editing ? (\r\n                          <input type=\"date\" name=\"date_of_birth\" value={profile.date_of_birth} onChange={handleChange} className=\"form-control\" />\r\n                        ) : (\r\n                          <p className=\"form-control-plaintext\">{profile.date_of_birth}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"profile-field\">\r\n                        <label>Gender:</label>\r\n                        {editing ? (\r\n                          <select name=\"gender\" value={profile.gender} onChange={handleChange} className=\"form-control\">\r\n                            <option value=\"\">Select Gender</option>\r\n                            <option value=\"male\">Male</option>\r\n                            <option value=\"female\">Female</option>\r\n                            <option value=\"other\">Other</option>\r\n                          </select>\r\n                        ) : (\r\n                          <p className=\"form-control-plaintext\">{profile.gender}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"profile-field\">\r\n                        <label>Blood Group:</label>\r\n                        {editing ? (\r\n                          <select name=\"blood_group\" value={profile.blood_group} onChange={handleChange} className=\"form-control\">\r\n                            <option value=\"\">Select Blood Group</option>\r\n                            <option value=\"A+\">A+</option>\r\n                            <option value=\"A-\">A-</option>\r\n                            <option value=\"B+\">B+</option>\r\n                            <option value=\"B-\">B-</option>\r\n                            <option value=\"AB+\">AB+</option>\r\n                            <option value=\"AB-\">AB-</option>\r\n                            <option value=\"O+\">O+</option>\r\n                            <option value=\"O-\">O-</option>\r\n                          </select>\r\n                        ) : (\r\n                          <p className=\"form-control-plaintext\">{profile.blood_group}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"profile-field\">\r\n                        <label>Height (cm):</label>\r\n                        {editing ? (\r\n                          <input type=\"number\" name=\"height\" value={profile.height} onChange={handleChange} className=\"form-control\" />\r\n                        ) : (\r\n                          <p className=\"form-control-plaintext\">{profile.height}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"profile-field\">\r\n                        <label>Weight (kg):</label>\r\n                        {editing ? (\r\n                          <input type=\"number\" name=\"weight\" value={profile.weight} onChange={handleChange} className=\"form-control\" />\r\n                        ) : (\r\n                          <p className=\"form-control-plaintext\">{profile.weight}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {activeSection === 'emergency' && (\r\n                <div className=\"emergency-section\">\r\n                  <h4 className=\"card-title mb-4\">Emergency Contact Information</h4>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"profile-field\">\r\n                        <label>Emergency Contact Name:</label>\r\n                        {editing ? (\r\n                          <input type=\"text\" name=\"emergency_contact_name\" value={profile.emergency_contact_name} onChange={handleChange} className=\"form-control\" />\r\n                        ) : (\r\n                          <p className=\"form-control-plaintext\">{profile.emergency_contact_name}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"profile-field\">\r\n                        <label>Emergency Contact Phone:</label>\r\n                        {editing ? (\r\n                          <input type=\"tel\" name=\"emergency_contact_phone\" value={profile.emergency_contact_phone} onChange={handleChange} className=\"form-control\" />\r\n                        ) : (\r\n                          <p className=\"form-control-plaintext\">{profile.emergency_contact_phone}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"profile-field\">\r\n                        <label>Relationship:</label>\r\n                        {editing ? (\r\n                          <input type=\"text\" name=\"emergency_contact_relationship\" value={profile.emergency_contact_relationship} onChange={handleChange} className=\"form-control\" />\r\n                        ) : (\r\n                          <p className=\"form-control-plaintext\">{profile.emergency_contact_relationship}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {activeSection === 'diseases' && (\r\n                <div className=\"diseases-section\">\r\n                  <h4 className=\"card-title mb-4\">Diseases & Medical Conditions</h4>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <div className=\"disease-list mb-4\">\r\n                        {diseaseNames.map((disease) => (\r\n                          <span key={disease.id} className=\"badge bg-info me-2 mb-2 p-2\">\r\n                            {disease.disease_name}\r\n                          </span>\r\n                        ))}\r\n                      </div>\r\n                      {editing && (\r\n                        <div className=\"input-group mb-3\">\r\n                          <select\r\n                            className=\"form-select\"\r\n                            value={newDiseaseName}\r\n                            onChange={(e) => setNewDiseaseName(e.target.value)}\r\n                          >\r\n                            <option value=\"\">Select a disease</option>\r\n                            {commonDiseases.map((disease) => (\r\n                              <option key={disease.id} value={disease.name}>\r\n                                {disease.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Or enter a new disease\"\r\n                            value={newDiseaseName === \"\" ? \"\" : newDiseaseName}\r\n                            onChange={(e) => setNewDiseaseName(e.target.value)}\r\n                          />\r\n                          <button onClick={handleAddDiseaseName} className=\"btn btn-primary\">Add</button>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Allergies Section */}\r\n                  <h5 className=\"card-title mb-3 mt-4\">Allergies</h5>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <div className=\"allergy-list mb-4\">\r\n                        {allergies.map((allergy) => (\r\n                          <span key={allergy.id} className=\"badge bg-warning text-dark me-2 mb-2 p-2\">\r\n                            {allergy.allergy_name} ({allergy.severity})\r\n                          </span>\r\n                        ))}\r\n                      </div>\r\n                      {editing && (\r\n                        <div className=\"row g-2\">\r\n                          <div className=\"col-sm-6\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Allergy name\"\r\n                              value={newAllergy.name}\r\n                              onChange={(e) => setNewAllergy({...newAllergy, name: e.target.value})}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-sm-4\">\r\n                            <select\r\n                              className=\"form-select\"\r\n                              value={newAllergy.severity}\r\n                              onChange={(e) => setNewAllergy({...newAllergy, severity: e.target.value})}\r\n                            >\r\n                              <option value=\"mild\">Mild</option>\r\n                              <option value=\"moderate\">Moderate</option>\r\n                              <option value=\"severe\">Severe</option>\r\n                            </select>\r\n                          </div>\r\n                          <div className=\"col-sm-2\">\r\n                            <button onClick={handleAddAllergy} className=\"btn btn-primary w-100\">Add</button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {activeSection === 'parameters' && (\r\n                <div className=\"parameters-section\">\r\n                  <h4 className=\"card-title mb-4\">Health Parameters</h4>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <div className=\"parameter-list mb-4\">\r\n                        {parameters.map((param) => (\r\n                          <div key={param.id} className=\"badge bg-success me-2 mb-2 p-2\">\r\n                            {param.parameter_name}: {param.value} {param.unit}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                      {editing && (\r\n                        <div className=\"row g-2\">\r\n                          <div className=\"col-sm-4\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Parameter name\"\r\n                              value={newParameter.name}\r\n                              onChange={(e) => setNewParameter({...newParameter, name: e.target.value})}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-sm-4\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Value\"\r\n                              value={newParameter.value}\r\n                              onChange={(e) => setNewParameter({...newParameter, value: e.target.value})}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-sm-2\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Unit\"\r\n                              value={newParameter.unit}\r\n                              onChange={(e) => setNewParameter({...newParameter, unit: e.target.value})}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-sm-2\">\r\n                            <button onClick={handleAddParameter} className=\"btn btn-primary w-100\">Add</button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {activeSection === 'emergency-qr' && (\r\n                <div className=\"emergency-qr-section\">\r\n                  <h4 className=\"card-title mb-4\">Emergency Medical QR Code</h4>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                      <div className=\"alert alert-info\">\r\n                        <i className=\"fas fa-info-circle me-2\"></i>\r\n                        This QR code contains your essential medical information for emergency situations. \r\n                        Keep it accessible, such as in your wallet, on your phone, or on emergency medical ID.\r\n                      </div>\r\n                      <EmergencyQRCode size={180} />\r\n                      <div className=\"mt-4\">\r\n                        <p className=\"text-muted\">\r\n                          <i className=\"fas fa-shield-alt me-2\"></i>\r\n                          <strong>Privacy Note:</strong> The QR code is updated automatically when you change your \r\n                          profile information, allergies, or medical conditions. The information included in the \r\n                          QR code is limited to what would be helpful in a medical emergency.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {editing && activeSection !== 'emergency-qr' && activeSection !== 'parameters' && activeSection !== 'diseases' && (\r\n                <div className=\"mt-4 text-end\">\r\n                  <button onClick={handleSave} className=\"btn btn-success\">\r\n                    Save Changes\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;","import React, { useState, useEffect } from 'react';\nimport { supabase } from '../utils/supabaseClient';\nimport { FaLock, FaShieldAlt, FaUserLock, FaKey, FaHistory } from 'react-icons/fa';\n\nconst SecuritySettings = () => {\n  const [settings, setSettings] = useState({\n    twoFactorEnabled: false,\n    emailNotifications: true,\n    loginNotifications: true,\n    passwordExpiry: 90,\n    maxLoginAttempts: 5\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  useEffect(() => {\n    fetchSecuritySettings();\n  }, []);\n\n  const fetchSecuritySettings = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) return;\n\n      const { data, error } = await supabase\n        .from('security_settings')\n        .select('*')\n        .eq('user_id', user.id)\n        .single();\n\n      if (error) throw error;\n      if (data) {\n        setSettings(data);\n      }\n    } catch (error) {\n      setError('Failed to load security settings');\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setSettings(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('No user found');\n\n      const { error } = await supabase\n        .from('security_settings')\n        .upsert({\n          user_id: user.id,\n          ...settings,\n          updated_at: new Date().toISOString()\n        });\n\n      if (error) throw error;\n      setSuccess('Security settings updated successfully');\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container mt-4\">\n      <h2 className=\"mb-4\">Security Settings</h2>\n      {error && (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {error}\n        </div>\n      )}\n      {success && (\n        <div className=\"alert alert-success\" role=\"alert\">\n          {success}\n        </div>\n      )}\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"mb-4\">\n              <h5 className=\"card-title\">\n                <FaShieldAlt className=\"me-2\" />\n                Two-Factor Authentication\n              </h5>\n              <div className=\"form-check form-switch\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  id=\"twoFactorEnabled\"\n                  name=\"twoFactorEnabled\"\n                  checked={settings.twoFactorEnabled}\n                  onChange={handleChange}\n                />\n                <label className=\"form-check-label\" htmlFor=\"twoFactorEnabled\">\n                  Enable two-factor authentication\n                </label>\n              </div>\n            </div>\n\n            <div className=\"mb-4\">\n              <h5 className=\"card-title\">\n                <FaUserLock className=\"me-2\" />\n                Login Security\n              </h5>\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Maximum Login Attempts</label>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  name=\"maxLoginAttempts\"\n                  value={settings.maxLoginAttempts}\n                  onChange={handleChange}\n                  min=\"1\"\n                  max=\"10\"\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Password Expiry (days)</label>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  name=\"passwordExpiry\"\n                  value={settings.passwordExpiry}\n                  onChange={handleChange}\n                  min=\"30\"\n                  max=\"365\"\n                />\n              </div>\n            </div>\n\n            <div className=\"mb-4\">\n              <h5 className=\"card-title\">\n                <FaHistory className=\"me-2\" />\n                Activity Notifications\n              </h5>\n              <div className=\"form-check mb-2\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  id=\"emailNotifications\"\n                  name=\"emailNotifications\"\n                  checked={settings.emailNotifications}\n                  onChange={handleChange}\n                />\n                <label className=\"form-check-label\" htmlFor=\"emailNotifications\">\n                  Email notifications for security events\n                </label>\n              </div>\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  id=\"loginNotifications\"\n                  name=\"loginNotifications\"\n                  checked={settings.loginNotifications}\n                  onChange={handleChange}\n                />\n                <label className=\"form-check-label\" htmlFor=\"loginNotifications\">\n                  Notify on new device login\n                </label>\n              </div>\n            </div>\n\n            <div className=\"mb-4\">\n              <h5 className=\"card-title\">\n                <FaKey className=\"me-2\" />\n                Password Management\n              </h5>\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-primary\"\n                onClick={() => {/* Implement password change logic */}}\n              >\n                Change Password\n              </button>\n            </div>\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              disabled={loading}\n            >\n              {loading ? 'Saving...' : 'Save Security Settings'}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SecuritySettings; ","import React, { useState, useEffect } from 'react';\nimport { supabase } from '../utils/supabaseClient';\nimport { FaDownload, FaUpload, FaHistory } from 'react-icons/fa';\n\nconst DataBackup = () => {\n  const [backupHistory, setBackupHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  useEffect(() => {\n    fetchBackupHistory();\n  }, []);\n\n  const fetchBackupHistory = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) return;\n\n      const { data, error } = await supabase\n        .from('backup_history')\n        .select('*')\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      setBackupHistory(data || []);\n    } catch (error) {\n      setError('Failed to load backup history');\n    }\n  };\n\n  const handleExportData = async () => {\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('No user found');\n\n      // Fetch all user data\n      const [\n        { data: profile },\n        { data: healthMetrics },\n        { data: appointments },\n        { data: medications },\n        { data: medicalConditions },\n        { data: healthAlerts }\n      ] = await Promise.all([\n        supabase.from('profiles').select('*').eq('id', user.id).single(),\n        supabase.from('health_metrics').select('*').eq('user_id', user.id),\n        supabase.from('appointments').select('*').eq('user_id', user.id),\n        supabase.from('medications').select('*').eq('user_id', user.id),\n        supabase.from('medical_conditions').select('*').eq('user_id', user.id),\n        supabase.from('health_alerts').select('*').eq('user_id', user.id)\n      ]);\n\n      // Create backup record\n      const { data: backup, error: backupError } = await supabase\n        .from('backup_history')\n        .insert([\n          {\n            user_id: user.id,\n            type: 'export',\n            status: 'completed',\n            created_at: new Date().toISOString(),\n            backup_data: {\n              profile,\n              healthMetrics,\n              appointments,\n              medications,\n              medicalConditions,\n              healthAlerts\n            }\n          }\n        ])\n        .select()\n        .single();\n\n      if (backupError) throw backupError;\n\n      // Create downloadable file\n      const backupData = {\n        profile,\n        healthMetrics,\n        appointments,\n        medications,\n        medicalConditions,\n        healthAlerts,\n        exportDate: new Date().toISOString()\n      };\n\n      const blob = new Blob([JSON.stringify(backupData, null, 2)], { type: 'application/json' });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `digihealth-backup-${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n\n      setSuccess('Data exported successfully');\n      fetchBackupHistory();\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleImportData = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('No user found');\n\n      const reader = new FileReader();\n      reader.onload = async (e) => {\n        try {\n          const backupData = JSON.parse(e.target.result);\n\n          // Create backup record\n          const { data: backup, error: backupError } = await supabase\n            .from('backup_history')\n            .insert([\n              {\n                user_id: user.id,\n                type: 'import',\n                status: 'completed',\n                created_at: new Date().toISOString()\n              }\n            ])\n            .select()\n            .single();\n\n          if (backupError) throw backupError;\n\n          // Import data to respective tables\n          if (backupData.profile) {\n            await supabase\n              .from('profiles')\n              .upsert({ ...backupData.profile, id: user.id });\n          }\n\n          if (backupData.healthMetrics) {\n            await supabase\n              .from('health_metrics')\n              .upsert(backupData.healthMetrics.map(data => ({ ...data, user_id: user.id })));\n          }\n\n          if (backupData.appointments) {\n            await supabase\n              .from('appointments')\n              .upsert(backupData.appointments.map(app => ({ ...app, user_id: user.id })));\n          }\n\n          if (backupData.medications) {\n            await supabase\n              .from('medications')\n              .upsert(backupData.medications.map(med => ({ ...med, user_id: user.id })));\n          }\n\n          if (backupData.medicalConditions) {\n            await supabase\n              .from('medical_conditions')\n              .upsert(backupData.medicalConditions.map(cond => ({ ...cond, user_id: user.id })));\n          }\n\n          if (backupData.healthAlerts) {\n            await supabase\n              .from('health_alerts')\n              .upsert(backupData.healthAlerts.map(alert => ({ ...alert, user_id: user.id })));\n          }\n\n          setSuccess('Data imported successfully');\n          fetchBackupHistory();\n        } catch (error) {\n          setError('Invalid backup file format');\n        }\n      };\n      reader.readAsText(file);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container mt-4\">\n      <h2 className=\"mb-4\">Data Backup & Restore</h2>\n      {error && (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {error}\n        </div>\n      )}\n      {success && (\n        <div className=\"alert alert-success\" role=\"alert\">\n          {success}\n        </div>\n      )}\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <div className=\"card mb-4\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">\n                <FaDownload className=\"me-2\" />\n                Export Data\n              </h5>\n              <p className=\"card-text\">\n                Download a backup of your health data, including profile information,\n                health records, appointments, and medications.\n              </p>\n              <button\n                className=\"btn btn-primary\"\n                onClick={handleExportData}\n                disabled={loading}\n              >\n                {loading ? 'Exporting...' : 'Export Data'}\n              </button>\n            </div>\n          </div>\n\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">\n                <FaUpload className=\"me-2\" />\n                Import Data\n              </h5>\n              <p className=\"card-text\">\n                Restore your health data from a previous backup file.\n              </p>\n              <input\n                type=\"file\"\n                className=\"form-control mb-3\"\n                accept=\".json\"\n                onChange={handleImportData}\n                disabled={loading}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-md-6\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">\n                <FaHistory className=\"me-2\" />\n                Backup History\n              </h5>\n              <div className=\"table-responsive\">\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th>Date</th>\n                      <th>Type</th>\n                      <th>Status</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {backupHistory.map((backup) => (\n                      <tr key={backup.id}>\n                        <td>{new Date(backup.created_at).toLocaleString()}</td>\n                        <td>\n                          {backup.type === 'export' ? (\n                            <FaDownload className=\"me-1\" />\n                          ) : (\n                            <FaUpload className=\"me-1\" />\n                          )}\n                          {backup.type.charAt(0).toUpperCase() + backup.type.slice(1)}\n                        </td>\n                        <td>\n                          <span className={`badge bg-${backup.status === 'completed' ? 'success' : 'warning'}`}>\n                            {backup.status}\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DataBackup; ","import React, { useState } from 'react';\r\nimport { setupSupabaseTables } from '../utils/setupSupabaseTablesExtended';\r\nimport { FaDatabase, FaCheck, FaExclamationTriangle, FaSpinner } from 'react-icons/fa';\r\n\r\nconst SetupDatabase = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [result, setResult] = useState(null);\r\n  const [logs, setLogs] = useState([]);\r\n\r\n  // Override console.log to capture logs\r\n  const originalConsoleLog = console.log;\r\n  const originalConsoleError = console.error;\r\n  const originalConsoleWarn = console.warn;\r\n\r\n  const setupDatabase = async () => {\r\n    setLoading(true);\r\n    setResult(null);\r\n    setLogs([]);\r\n\r\n    // Override console methods to capture logs\r\n    console.log = (...args) => {\r\n      setLogs(prev => [...prev, { type: 'info', message: args.join(' ') }]);\r\n      originalConsoleLog(...args);\r\n    };\r\n\r\n    console.error = (...args) => {\r\n      setLogs(prev => [...prev, { type: 'error', message: args.join(' ') }]);\r\n      originalConsoleError(...args);\r\n    };\r\n\r\n    console.warn = (...args) => {\r\n      setLogs(prev => [...prev, { type: 'warning', message: args.join(' ') }]);\r\n      originalConsoleWarn(...args);\r\n    };\r\n\r\n    try {\r\n      const setupResult = await setupSupabaseTables();\r\n      setResult(setupResult);\r\n    } catch (error) {\r\n      setResult({\r\n        success: false,\r\n        message: `Unexpected error: ${error.message}`\r\n      });\r\n    } finally {\r\n      // Restore original console methods\r\n      console.log = originalConsoleLog;\r\n      console.error = originalConsoleError;\r\n      console.warn = originalConsoleWarn;\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">\r\n          <FaDatabase className=\"me-2\" />\r\n          Database Setup\r\n        </h5>\r\n        <p className=\"card-text\">\r\n          This utility will delete all existing tables and buckets in your Supabase project and recreate them with the proper structure.\r\n          <strong className=\"text-danger\"> Use with caution as this will delete all existing data!</strong>\r\n        </p>\r\n\r\n        {result && (\r\n          <div className={`alert ${result.success ? 'alert-success' : 'alert-danger'} mt-3`} role=\"alert\">\r\n            {result.success ? (\r\n              <FaCheck className=\"me-2\" />\r\n            ) : (\r\n              <FaExclamationTriangle className=\"me-2\" />\r\n            )}\r\n            {result.message}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"d-grid gap-2 mt-3\">\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={setupDatabase}\r\n            disabled={loading}\r\n          >\r\n            {loading ? (\r\n              <>\r\n                <FaSpinner className=\"me-2 fa-spin\" />\r\n                Setting up database...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <FaDatabase className=\"me-2\" />\r\n                Reset and Setup Database\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n\r\n        {logs.length > 0 && (\r\n          <div className=\"mt-4\">\r\n            <h6>Setup Logs:</h6>\r\n            <div className=\"border rounded p-3 bg-light\" style={{ maxHeight: '300px', overflow: 'auto' }}>\r\n              {logs.map((log, index) => (\r\n                <div \r\n                  key={index} \r\n                  className={`mb-1 ${\r\n                    log.type === 'error' \r\n                      ? 'text-danger' \r\n                      : log.type === 'warning' \r\n                        ? 'text-warning' \r\n                        : ''\r\n                  }`}\r\n                >\r\n                  {log.message}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetupDatabase; ","import React, { useState } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport SetupDatabase from '../components/SetupDatabase';\r\nimport { FaDatabase, FaTable, FaFolder, FaInfoCircle, FaExclamationTriangle } from 'react-icons/fa';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { supabase } from '../utils/main';\r\n\r\nconst DatabaseSetup = () => {\r\n  const { user } = useAuth();\r\n  const [status, setStatus] = useState('');\r\n\r\n  // Only allow admins to access this page\r\n  if (!user || user.user_metadata?.role !== 'admin') {\r\n    return <Navigate to=\"/dashboard\" />;\r\n  }\r\n\r\n  const setupDatabase = async () => {\r\n    try {\r\n      setStatus('Setting up database...');\r\n\r\n      // Create profiles table with all necessary columns\r\n      const { error: profilesError } = await supabase.rpc('setup_profiles_table', {\r\n        sql_command: `\r\n          CREATE TABLE IF NOT EXISTS profiles (\r\n            id UUID REFERENCES auth.users ON DELETE CASCADE PRIMARY KEY,\r\n            first_name VARCHAR(255),\r\n            last_name VARCHAR(255),\r\n            date_of_birth DATE,\r\n            gender VARCHAR(50),\r\n            blood_group VARCHAR(10),\r\n            height DECIMAL,\r\n            weight DECIMAL,\r\n            allergies TEXT[],\r\n            medical_conditions TEXT[],\r\n            emergency_contact_name VARCHAR(255),\r\n            emergency_contact_phone VARCHAR(20),\r\n            emergency_contact_relationship VARCHAR(100),\r\n            created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()),\r\n            updated_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW())\r\n          );\r\n\r\n          -- Add RLS policies\r\n          ALTER TABLE profiles ENABLE ROW LEVEL SECURITY;\r\n\r\n          CREATE POLICY \"Users can view their own profile\"\r\n            ON profiles FOR SELECT\r\n            USING (auth.uid() = id);\r\n\r\n          CREATE POLICY \"Users can update their own profile\"\r\n            ON profiles FOR UPDATE\r\n            USING (auth.uid() = id);\r\n\r\n          CREATE POLICY \"Users can insert their own profile\"\r\n            ON profiles FOR INSERT\r\n            WITH CHECK (auth.uid() = id);\r\n        `\r\n      });\r\n\r\n      if (profilesError) throw profilesError;\r\n\r\n      // Create health_metrics table\r\n      const { error: metricsError } = await supabase.rpc('setup_health_metrics_table', {\r\n        sql_command: `\r\n          CREATE TABLE IF NOT EXISTS health_metrics (\r\n            id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,\r\n            user_id UUID REFERENCES profiles(id) ON DELETE CASCADE,\r\n            metric_type VARCHAR(50),\r\n            value DECIMAL,\r\n            unit VARCHAR(20),\r\n            recorded_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()),\r\n            notes TEXT\r\n          );\r\n\r\n          ALTER TABLE health_metrics ENABLE ROW LEVEL SECURITY;\r\n\r\n          CREATE POLICY \"Users can view their own health metrics\"\r\n            ON health_metrics FOR SELECT\r\n            USING (auth.uid() = user_id);\r\n\r\n          CREATE POLICY \"Users can insert their own health metrics\"\r\n            ON health_metrics FOR INSERT\r\n            WITH CHECK (auth.uid() = user_id);\r\n        `\r\n      });\r\n\r\n      if (metricsError) throw metricsError;\r\n\r\n      // Create medical_analyses table\r\n      const { error: analysesError } = await supabase.rpc('setup_medical_analyses_table', {\r\n        sql_command: `\r\n          CREATE TABLE IF NOT EXISTS medical_analyses (\r\n            id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,\r\n            user_id UUID REFERENCES profiles(id) ON DELETE CASCADE,\r\n            image_type VARCHAR(50),\r\n            image_url TEXT,\r\n            result TEXT,\r\n            confidence DECIMAL,\r\n            analyzed_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW())\r\n          );\r\n\r\n          ALTER TABLE medical_analyses ENABLE ROW LEVEL SECURITY;\r\n\r\n          CREATE POLICY \"Users can view their own medical analyses\"\r\n            ON medical_analyses FOR SELECT\r\n            USING (auth.uid() = user_id);\r\n\r\n          CREATE POLICY \"Users can insert their own medical analyses\"\r\n            ON medical_analyses FOR INSERT\r\n            WITH CHECK (auth.uid() = user_id);\r\n        `\r\n      });\r\n\r\n      if (analysesError) throw analysesError;\r\n\r\n      // Create chat_history table\r\n      const { error: chatError } = await supabase.rpc('setup_chat_history_table', {\r\n        sql_command: `\r\n          CREATE TABLE IF NOT EXISTS chat_history (\r\n            id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,\r\n            user_id UUID REFERENCES profiles(id) ON DELETE CASCADE,\r\n            message TEXT,\r\n            response TEXT,\r\n            created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW())\r\n          );\r\n\r\n          ALTER TABLE chat_history ENABLE ROW LEVEL SECURITY;\r\n\r\n          CREATE POLICY \"Users can view their own chat history\"\r\n            ON chat_history FOR SELECT\r\n            USING (auth.uid() = user_id);\r\n\r\n          CREATE POLICY \"Users can insert into their own chat history\"\r\n            ON chat_history FOR INSERT\r\n            WITH CHECK (auth.uid() = user_id);\r\n        `\r\n      });\r\n\r\n      if (chatError) throw chatError;\r\n\r\n      // Create ai_recommendations table\r\n      const { error: recsError } = await supabase.rpc('setup_ai_recommendations_table', {\r\n        sql_command: `\r\n          CREATE TABLE IF NOT EXISTS ai_recommendations (\r\n            id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,\r\n            user_id UUID REFERENCES profiles(id) ON DELETE CASCADE,\r\n            category VARCHAR(50),\r\n            recommendation TEXT,\r\n            created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW())\r\n          );\r\n\r\n          ALTER TABLE ai_recommendations ENABLE ROW LEVEL SECURITY;\r\n\r\n          CREATE POLICY \"Users can view their own recommendations\"\r\n            ON ai_recommendations FOR SELECT\r\n            USING (auth.uid() = user_id);\r\n\r\n          CREATE POLICY \"Users can insert their own recommendations\"\r\n            ON ai_recommendations FOR INSERT\r\n            WITH CHECK (auth.uid() = user_id);\r\n        `\r\n      });\r\n\r\n      if (recsError) throw recsError;\r\n\r\n      setStatus('Database setup completed successfully!');\r\n    } catch (error) {\r\n      console.error('Database setup error:', error);\r\n      setStatus(`Error setting up database: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container py-4\">\r\n      <h1 className=\"mb-4\">\r\n        <FaDatabase className=\"me-2\" />\r\n        Database Management\r\n      </h1>\r\n\r\n      <div className=\"alert alert-warning mb-4\" role=\"alert\">\r\n        <FaExclamationTriangle className=\"me-2\" />\r\n        <strong>Warning:</strong> This page is for administrators only. The actions performed here will affect all users of the application.\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-8\">\r\n          <SetupDatabase />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">\r\n                <FaInfoCircle className=\"me-2\" />\r\n                Database Information\r\n              </h5>\r\n              <p className=\"card-text\">\r\n                The setup process will create the following resources:\r\n              </p>\r\n\r\n              <h6 className=\"mt-3\">\r\n                <FaTable className=\"me-2\" />\r\n                Tables\r\n              </h6>\r\n              <ul className=\"list-group mb-3\">\r\n                <li className=\"list-group-item\">detailed_profiles</li>\r\n                <li className=\"list-group-item\">profiles</li>\r\n                <li className=\"list-group-item\">conditions</li>\r\n                <li className=\"list-group-item\">medications</li>\r\n                <li className=\"list-group-item\">appointments</li>\r\n                <li className=\"list-group-item\">telehealth_consultations</li>\r\n                <li className=\"list-group-item\">vitals</li>\r\n                <li className=\"list-group-item\">diseases</li>\r\n                <li className=\"list-group-item\">medical_reports</li>\r\n                <li className=\"list-group-item\">support_tickets</li>\r\n                <li className=\"list-group-item\">chat_sessions</li>\r\n                <li className=\"list-group-item\">chat_messages</li>\r\n                <li className=\"list-group-item\">alerts</li>\r\n                <li className=\"list-group-item\">security_settings</li>\r\n                <li className=\"list-group-item\">backup_history</li>\r\n              </ul>\r\n\r\n              <h6 className=\"mt-3\">\r\n                <FaFolder className=\"me-2\" />\r\n                Storage Buckets\r\n              </h6>\r\n              <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">profile-pictures</li>\r\n                <li className=\"list-group-item\">medical-reports</li>\r\n                <li className=\"list-group-item\">health-reports</li>\r\n                <li className=\"list-group-item\">chat-attachments</li>\r\n                <li className=\"list-group-item\">support-attachments</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-5\">\r\n        <button \r\n          className=\"btn btn-primary\"\r\n          onClick={setupDatabase}\r\n        >\r\n          Initialize Database\r\n        </button>\r\n        <div className=\"mt-3\">\r\n          <p>{status}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatabaseSetup; ","import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { supabase } from '../utils/main';\nimport { useAuth } from '../contexts/AuthContext';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst HealthMetricsVisualizer = ({ initialTimeRange = '1M' }) => {\n  const { user } = useAuth();\n  const [metrics, setMetrics] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedMetric, setSelectedMetric] = useState('bloodPressure');\n  const [timeRange, setTimeRange] = useState(initialTimeRange);\n\n  const metricOptions = [\n    { value: 'bloodPressure', label: 'Blood Pressure' },\n    { value: 'bloodSugar', label: 'Blood Sugar' },\n    { value: 'cholesterol', label: 'Cholesterol' },\n    { value: 'heartRate', label: 'Heart Rate' },\n    { value: 'temperature', label: 'Temperature' },\n    { value: 'weight', label: 'Weight' },\n    { value: 'oxygenSaturation', label: 'Oxygen Saturation' }\n  ];\n\n  useEffect(() => {\n    fetchMetrics();\n  }, [timeRange, selectedMetric]);\n\n  const fetchMetrics = async () => {\n    try {\n      setLoading(true);\n      const timeRangeMap = {\n        '1W': '7 days',\n        '1M': '30 days',\n        '3M': '90 days',\n        '6M': '180 days',\n        '1Y': '365 days'\n      };\n\n      const { data, error } = await supabase\n        .from('health_metrics')\n        .select('*')\n        .eq('user_id', user.id)\n        .gte('recorded_at', new Date(Date.now() - (parseInt(timeRangeMap[timeRange]) * 24 * 60 * 60 * 1000)).toISOString())\n        .order('recorded_at', { ascending: true });\n\n      if (error) throw error;\n      setMetrics(data || []);\n    } catch (error) {\n      console.error('Error fetching metrics:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const prepareChartData = () => {\n    const dates = metrics.map(m => new Date(m.recorded_at).toLocaleDateString());\n    const values = metrics.map(m => {\n      const metricValue = m.metrics[selectedMetric];\n      if (selectedMetric === 'bloodPressure') {\n        const [systolic] = metricValue.split('/');\n        return parseInt(systolic);\n      }\n      return parseFloat(metricValue);\n    });\n\n    return {\n      labels: dates,\n      datasets: [\n        {\n          label: metricOptions.find(m => m.value === selectedMetric).label,\n          data: values,\n          fill: false,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }\n      ]\n    };\n  };\n\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: `${metricOptions.find(m => m.value === selectedMetric).label} Trend`\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false\n      }\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <div className=\"d-flex justify-content-between mb-3\">\n          <select\n            className=\"form-select w-auto\"\n            value={selectedMetric}\n            onChange={(e) => setSelectedMetric(e.target.value)}\n          >\n            {metricOptions.map(option => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n\n          <select\n            className=\"form-select w-auto\"\n            value={timeRange}\n            onChange={(e) => setTimeRange(e.target.value)}\n          >\n            <option value=\"1W\">1 Week</option>\n            <option value=\"1M\">1 Month</option>\n            <option value=\"3M\">3 Months</option>\n            <option value=\"6M\">6 Months</option>\n            <option value=\"1Y\">1 Year</option>\n          </select>\n        </div>\n\n        {loading ? (\n          <div className=\"text-center\">Loading...</div>\n        ) : metrics.length > 0 ? (\n          <Line data={prepareChartData()} options={chartOptions} />\n        ) : (\n          <div className=\"text-center\">No data available for the selected period</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HealthMetricsVisualizer; ","import React, { useState } from 'react';\nimport { supabase } from '../utils/main';\nimport { useAuth } from '../contexts/AuthContext';\nimport { FaUpload, FaSpinner } from 'react-icons/fa';\n\nconst MedicalImageAnalyzer = () => {\n  const { user } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [imageType, setImageType] = useState('skin');\n\n  const imageTypes = [\n    { value: 'skin', label: 'Skin Condition' },\n    { value: 'xray', label: 'X-Ray' },\n    { value: 'wound', label: 'Wound/Injury' },\n    { value: 'eye', label: 'Eye Condition' }\n  ];\n\n  const analyzeImage = async (file) => {\n    setLoading(true);\n    setError(null);\n    try {\n      // First, upload the image to Supabase Storage\n      const fileName = `${user.id}/${Date.now()}-${file.name}`;\n      const { data: uploadData, error: uploadError } = await supabase.storage\n        .from('medical-images')\n        .upload(fileName, file);\n\n      if (uploadError) throw uploadError;\n\n      // Get the public URL of the uploaded image\n      const { data: { publicUrl } } = supabase.storage\n        .from('medical-images')\n        .getPublicUrl(fileName);\n\n      setImageUrl(publicUrl);\n\n      // Call OpenAI's GPT-4 Vision API for analysis\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4-vision-preview\",\n          messages: [\n            {\n              role: \"system\",\n              content: `You are a medical image analyzer specialized in ${imageType} conditions. Provide a detailed analysis while being cautious not to make definitive diagnoses.`\n            },\n            {\n              role: \"user\",\n              content: [\n                {\n                  type: \"text\",\n                  text: `Please analyze this ${imageType} image and provide insights about what you observe. Include potential concerns and recommendations for professional medical consultation if needed.`\n                },\n                {\n                  type: \"image_url\",\n                  image_url: publicUrl\n                }\n              ]\n            }\n          ],\n          max_tokens: 500\n        })\n      });\n\n      const data = await response.json();\n      \n      // Save analysis to database\n      const { error: dbError } = await supabase.from('medical_analyses').insert([{\n        user_id: user.id,\n        image_url: publicUrl,\n        analysis_type: imageType,\n        analysis_result: data.choices[0].message.content,\n        created_at: new Date().toISOString()\n      }]);\n\n      if (dbError) throw dbError;\n\n      setResult(data.choices[0].message.content);\n    } catch (error) {\n      console.error('Error analyzing image:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      analyzeImage(file);\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h3 className=\"card-title mb-4\">Medical Image Analysis</h3>\n\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Image Type</label>\n          <select\n            className=\"form-select\"\n            value={imageType}\n            onChange={(e) => setImageType(e.target.value)}\n          >\n            {imageTypes.map(type => (\n              <option key={type.value} value={type.value}>\n                {type.label}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"mb-4\">\n          <label className=\"form-label\">Upload Image</label>\n          <input\n            type=\"file\"\n            className=\"form-control\"\n            accept=\"image/*\"\n            onChange={handleFileUpload}\n            disabled={loading}\n          />\n        </div>\n\n        {loading && (\n          <div className=\"text-center mb-4\">\n            <FaSpinner className=\"spinner\" />\n            <p>Analyzing image...</p>\n          </div>\n        )}\n\n        {imageUrl && (\n          <div className=\"mb-4\">\n            <img\n              src={imageUrl}\n              alt=\"Uploaded medical image\"\n              className=\"img-fluid rounded\"\n              style={{ maxHeight: '300px' }}\n            />\n          </div>\n        )}\n\n        {error && (\n          <div className=\"alert alert-danger\" role=\"alert\">\n            {error}\n          </div>\n        )}\n\n        {result && (\n          <div className=\"mt-4\">\n            <h5>Analysis Results:</h5>\n            <div className=\"card bg-light\">\n              <div className=\"card-body\">\n                <pre className=\"mb-0\" style={{ whiteSpace: 'pre-wrap' }}>\n                  {result}\n                </pre>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MedicalImageAnalyzer; ","import React, { useState, useRef, useEffect } from 'react';\r\nimport { supabase } from '../utils/main';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { FaRobot, FaUser, FaSpinner, FaPaperPlane, FaUtensils, FaFirstAid } from 'react-icons/fa';\r\n\r\nconst HealthAssistant = () => {\r\n  const { user } = useAuth();\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [mode, setMode] = useState('chat'); // chat, diet, firstAid\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const getModeSystemPrompt = () => {\r\n    switch (mode) {\r\n      case 'diet':\r\n        return \"You are a nutritionist AI assistant. Provide personalized diet recommendations based on user's health conditions and goals. Always emphasize the importance of consulting healthcare providers before making significant dietary changes.\";\r\n      case 'firstAid':\r\n        return \"You are a first aid instruction AI assistant. Provide clear, step-by-step first aid guidance for non-emergency situations. Always emphasize when professional medical attention is needed and include emergency contact recommendations when appropriate.\";\r\n      default:\r\n        return \"You are a helpful medical assistant. Explain medical terms in simple language and provide general health information. Always remind users to consult healthcare professionals for proper medical advice.\";\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = input.trim();\r\n    setInput('');\r\n    setLoading(true);\r\n\r\n    // Add user message to chat\r\n    const newMessage = {\r\n      role: 'user',\r\n      content: userMessage,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    setMessages(prev => [...prev, newMessage]);\r\n\r\n    try {\r\n      // Get user's health context\r\n      const { data: profile } = await supabase\r\n        .from('profiles')\r\n        .select('medical_conditions, allergies, current_medications')\r\n        .eq('id', user.id)\r\n        .single();\r\n\r\n      // Call OpenAI API\r\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\r\n        },\r\n        body: JSON.stringify({\r\n          model: \"gpt-4\",\r\n          messages: [\r\n            {\r\n              role: \"system\",\r\n              content: getModeSystemPrompt()\r\n            },\r\n            {\r\n              role: \"user\",\r\n              content: `User's health context - Medical conditions: ${profile.medical_conditions.join(', ')}, Allergies: ${profile.allergies.join(', ')}, Current medications: ${profile.current_medications.join(', ')}`\r\n            },\r\n            ...messages.map(m => ({ role: m.role, content: m.content })),\r\n            { role: \"user\", content: userMessage }\r\n          ],\r\n          temperature: 0.7,\r\n          max_tokens: 500\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      // Add AI response to chat\r\n      setMessages(prev => [...prev, {\r\n        role: 'assistant',\r\n        content: data.choices[0].message.content,\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n\r\n      // Save conversation to database\r\n      await supabase.from('chat_history').insert([{\r\n        user_id: user.id,\r\n        mode,\r\n        message: userMessage,\r\n        response: data.choices[0].message.content,\r\n        created_at: new Date().toISOString()\r\n      }]);\r\n\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setMessages(prev => [...prev, {\r\n        role: 'assistant',\r\n        content: 'I apologize, but I encountered an error. Please try again.',\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n          <h3 className=\"card-title mb-0\">\r\n            {mode === 'diet' ? (\r\n              <><FaUtensils className=\"me-2\" /> Diet Assistant</>\r\n            ) : mode === 'firstAid' ? (\r\n              <><FaFirstAid className=\"me-2\" /> First Aid Guide</>\r\n            ) : (\r\n              <><FaRobot className=\"me-2\" /> Health Assistant</>\r\n            )}\r\n          </h3>\r\n\r\n          <div className=\"btn-group\">\r\n            <button\r\n              className={`btn btn-${mode === 'chat' ? 'primary' : 'outline-primary'}`}\r\n              onClick={() => setMode('chat')}\r\n            >\r\n              Chat\r\n            </button>\r\n            <button\r\n              className={`btn btn-${mode === 'diet' ? 'primary' : 'outline-primary'}`}\r\n              onClick={() => setMode('diet')}\r\n            >\r\n              Diet\r\n            </button>\r\n            <button\r\n              className={`btn btn-${mode === 'firstAid' ? 'primary' : 'outline-primary'}`}\r\n              onClick={() => setMode('firstAid')}\r\n            >\r\n              First Aid\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-container bg-light p-3 rounded\" style={{ height: '400px', overflowY: 'auto' }}>\r\n          {messages.map((message, index) => (\r\n            <div\r\n              key={index}\r\n              className={`d-flex ${message.role === 'user' ? 'justify-content-end' : 'justify-content-start'} mb-3`}\r\n            >\r\n              <div\r\n                className={`${\r\n                  message.role === 'user' ? 'bg-primary text-white' : 'bg-white'\r\n                } p-3 rounded shadow-sm`}\r\n                style={{ maxWidth: '75%' }}\r\n              >\r\n                <div className=\"d-flex align-items-center mb-1\">\r\n                  {message.role === 'user' ? (\r\n                    <FaUser className=\"me-2\" />\r\n                  ) : (\r\n                    <FaRobot className=\"me-2\" />\r\n                  )}\r\n                  <small className=\"text-muted\">\r\n                    {new Date(message.timestamp).toLocaleTimeString()}\r\n                  </small>\r\n                </div>\r\n                <div style={{ whiteSpace: 'pre-wrap' }}>{message.content}</div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        <div className=\"mt-3 d-flex\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control me-2\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyPress={(e) => e.key === 'Enter' && handleSend()}\r\n            placeholder={\r\n              mode === 'diet'\r\n                ? \"Ask about diet recommendations...\"\r\n                : mode === 'firstAid'\r\n                ? \"Ask about first aid instructions...\"\r\n                : \"Ask your health-related question...\"\r\n            }\r\n            disabled={loading}\r\n          />\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={handleSend}\r\n            disabled={loading || !input.trim()}\r\n          >\r\n            {loading ? <FaSpinner className=\"spinner\" /> : <FaPaperPlane />}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HealthAssistant; ","import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../utils/main';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport {\r\n  FaChartLine, FaBrain, FaFileMedical,\r\n  FaRobot\r\n} from 'react-icons/fa';\r\nimport {\r\n  Line, Bar, Pie, Radar\r\n} from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  RadialLinearScale,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  RadialLinearScale,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst AIInsightsDashboard = () => {\r\n  const { user } = useAuth();\r\n  const [insights, setInsights] = useState({\r\n    healthTrends: [],\r\n    imageAnalyses: [],\r\n    chatHistory: [],\r\n    recommendations: []\r\n  });\r\n  const [selectedTimeRange, setSelectedTimeRange] = useState('week');\r\n  const [selectedMetric, setSelectedMetric] = useState('all');\r\n\r\n  useEffect(() => {\r\n    fetchAIInsights();\r\n  }, [user, selectedTimeRange, selectedMetric]);\r\n\r\n  const fetchAIInsights = async () => {\r\n    try {\r\n      const [healthData, imageData, chatData, recommendationsData] = await Promise.all([\r\n        supabase\r\n          .from('health_metrics')\r\n          .select('*')\r\n          .eq('user_id', user.id)\r\n          .order('recorded_at', { ascending: false }),\r\n        supabase\r\n          .from('medical_analyses')\r\n          .select('*')\r\n          .eq('user_id', user.id)\r\n          .order('analyzed_at', { ascending: false }),\r\n        supabase\r\n          .from('chat_history')\r\n          .select('*')\r\n          .eq('user_id', user.id)\r\n          .order('created_at', { ascending: false }),\r\n        supabase\r\n          .from('ai_recommendations')\r\n          .select('*')\r\n          .eq('user_id', user.id)\r\n          .order('created_at', { ascending: false })\r\n      ]);\r\n\r\n      setInsights({\r\n        healthTrends: healthData.data || [],\r\n        imageAnalyses: imageData.data || [],\r\n        chatHistory: chatData.data || [],\r\n        recommendations: recommendationsData.data || []\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching AI insights:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ai-insights-container\">\r\n      <h1 className=\"text-center mb-4\">AI Health Insights Dashboard</h1>\r\n      \r\n      {/* Controls */}\r\n      <div className=\"controls-section mb-4\">\r\n        <select \r\n          value={selectedTimeRange}\r\n          onChange={(e) => setSelectedTimeRange(e.target.value)}\r\n          className=\"form-select me-2\"\r\n        >\r\n          <option value=\"week\">Last Week</option>\r\n          <option value=\"month\">Last Month</option>\r\n          <option value=\"year\">Last Year</option>\r\n        </select>\r\n        \r\n        <select \r\n          value={selectedMetric}\r\n          onChange={(e) => setSelectedMetric(e.target.value)}\r\n          className=\"form-select\"\r\n        >\r\n          <option value=\"all\">All Metrics</option>\r\n          <option value=\"vitals\">Vital Signs</option>\r\n          <option value=\"lab\">Lab Results</option>\r\n          <option value=\"lifestyle\">Lifestyle</option>\r\n        </select>\r\n      </div>\r\n\r\n      {/* Health Trends Section */}\r\n      <div className=\"card mb-4\">\r\n        <div className=\"card-header\">\r\n          <h3><FaChartLine /> Health Trends Analysis</h3>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <Line\r\n                data={{\r\n                  labels: insights.healthTrends.map(d => new Date(d.recorded_at).toLocaleDateString()),\r\n                  datasets: [{\r\n                    label: 'Health Score',\r\n                    data: insights.healthTrends.map(d => d.value),\r\n                    borderColor: 'rgb(75, 192, 192)',\r\n                    tension: 0.1\r\n                  }]\r\n                }}\r\n                options={{\r\n                  responsive: true,\r\n                  plugins: {\r\n                    title: {\r\n                      display: true,\r\n                      text: 'Health Metrics Over Time'\r\n                    }\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <Radar\r\n                data={{\r\n                  labels: ['Blood Pressure', 'Heart Rate', 'Blood Sugar', 'Sleep', 'Exercise', 'Diet'],\r\n                  datasets: [{\r\n                    label: 'Current Status',\r\n                    data: [65, 75, 70, 80, 60, 85],\r\n                    backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n                    borderColor: 'rgb(75, 192, 192)',\r\n                    pointBackgroundColor: 'rgb(75, 192, 192)'\r\n                  }]\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Image Analysis History */}\r\n      <div className=\"card mb-4\">\r\n        <div className=\"card-header\">\r\n          <h3><FaFileMedical /> Medical Image Analysis History</h3>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Date</th>\r\n                  <th>Image Type</th>\r\n                  <th>Analysis Result</th>\r\n                  <th>Confidence</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {insights.imageAnalyses.map((analysis, index) => (\r\n                  <tr key={index}>\r\n                    <td>{new Date(analysis.analyzed_at).toLocaleDateString()}</td>\r\n                    <td>{analysis.image_type}</td>\r\n                    <td>{analysis.result}</td>\r\n                    <td>{analysis.confidence}%</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* AI Recommendations */}\r\n      <div className=\"card mb-4\">\r\n        <div className=\"card-header\">\r\n          <h3><FaBrain /> AI Health Recommendations</h3>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <Pie\r\n                data={{\r\n                  labels: ['Diet', 'Exercise', 'Sleep', 'Medication', 'Lifestyle'],\r\n                  datasets: [{\r\n                    data: [30, 25, 20, 15, 10],\r\n                    backgroundColor: [\r\n                      '#FF6384',\r\n                      '#36A2EB',\r\n                      '#FFCE56',\r\n                      '#4BC0C0',\r\n                      '#9966FF'\r\n                    ]\r\n                  }]\r\n                }}\r\n                options={{\r\n                  plugins: {\r\n                    title: {\r\n                      display: true,\r\n                      text: 'Recommendation Categories'\r\n                    }\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"recommendations-list\">\r\n                {insights.recommendations.slice(0, 5).map((rec, index) => (\r\n                  <div key={index} className=\"recommendation-item\">\r\n                    <h5>{rec.category}</h5>\r\n                    <p>{rec.recommendation}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Chat Analytics */}\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h3><FaRobot /> Health Assistant Interactions</h3>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <Bar\r\n            data={{\r\n              labels: ['Diet Queries', 'Symptom Analysis', 'Medical Terms', 'First Aid', 'General Health'],\r\n              datasets: [{\r\n                label: 'Interaction Distribution',\r\n                data: [45, 32, 28, 15, 30],\r\n                backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n                borderColor: 'rgb(75, 192, 192)',\r\n                borderWidth: 1\r\n              }]\r\n            }}\r\n            options={{\r\n              scales: {\r\n                y: {\r\n                  beginAtZero: true\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AIInsightsDashboard; ","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { supabase } from '../../utils/supabaseClient';\r\nimport Spinner from '../../components/Spinner';\r\n\r\nconst HealthMetricsAI = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [metrics, setMetrics] = useState(null);\r\n  const [analysis, setAnalysis] = useState(null);\r\n\r\n  // Use useCallback to memoize the function so it can be safely added to dependencies\r\n  const fetchHealthMetrics = useCallback(async () => {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) throw new Error('No user logged in');\r\n\r\n      // Fetch user's health metrics\r\n      // This is a placeholder - implement actual data fetching\r\n      const mockMetrics = {\r\n        weight: [\r\n          { date: '2024-01-01', value: 70 },\r\n          { date: '2024-02-01', value: 69 },\r\n          { date: '2024-03-01', value: 68 }\r\n        ],\r\n        bloodPressure: [\r\n          { date: '2024-01-01', systolic: 120, diastolic: 80 },\r\n          { date: '2024-02-01', systolic: 118, diastolic: 78 },\r\n          { date: '2024-03-01', systolic: 122, diastolic: 82 }\r\n        ],\r\n        heartRate: [\r\n          { date: '2024-01-01', value: 72 },\r\n          { date: '2024-02-01', value: 70 },\r\n          { date: '2024-03-01', value: 71 }\r\n        ]\r\n      };\r\n\r\n      setMetrics(mockMetrics);\r\n      analyzeMetrics(mockMetrics);\r\n    } catch (error) {\r\n      console.error('Error fetching health metrics:', error);\r\n      setError('Failed to load health metrics');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);  // Empty dependency array since it doesn't depend on any props or state\r\n\r\n  useEffect(() => {\r\n    fetchHealthMetrics();\r\n  }, [fetchHealthMetrics]);  // Added fetchHealthMetrics as a dependency\r\n\r\n  const analyzeMetrics = (metrics) => {\r\n    // This is where you would implement AI analysis of the metrics\r\n    // For now, using mock analysis\r\n    const mockAnalysis = {\r\n      weight: {\r\n        trend: 'decreasing',\r\n        change: -2,\r\n        recommendation: 'Your weight shows a healthy decreasing trend. Keep up the good work!'\r\n      },\r\n      bloodPressure: {\r\n        trend: 'stable',\r\n        recommendation: 'Your blood pressure remains within normal range. Continue monitoring regularly.'\r\n      },\r\n      heartRate: {\r\n        trend: 'stable',\r\n        recommendation: 'Your heart rate is consistent and within healthy range.'\r\n      },\r\n      overall: {\r\n        status: 'Good',\r\n        recommendations: [\r\n          'Maintain current lifestyle habits',\r\n          'Continue regular exercise',\r\n          'Keep monitoring your metrics'\r\n        ]\r\n      }\r\n    };\r\n\r\n    setAnalysis(mockAnalysis);\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center py-4\"><Spinner /></div>;\r\n  if (error) return <div className=\"alert alert-danger m-4\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"container py-4\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h2 className=\"mb-4\">AI Health Metrics Analysis</h2>\r\n\r\n          {metrics && analysis && (\r\n            <>\r\n              <div className=\"card mb-4\">\r\n                <div className=\"card-body\">\r\n                  <h4>Overall Health Status: <span className=\"text-success\">{analysis.overall.status}</span></h4>\r\n                  <div className=\"mt-3\">\r\n                    <h5>Key Findings:</h5>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                      <li className=\"list-group-item\">\r\n                        <strong>Weight:</strong> {analysis.weight.recommendation}\r\n                      </li>\r\n                      <li className=\"list-group-item\">\r\n                        <strong>Blood Pressure:</strong> {analysis.bloodPressure.recommendation}\r\n                      </li>\r\n                      <li className=\"list-group-item\">\r\n                        <strong>Heart Rate:</strong> {analysis.heartRate.recommendation}\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card mb-4\">\r\n                <div className=\"card-body\">\r\n                  <h4>Recommendations</h4>\r\n                  <ul className=\"list-group list-group-flush\">\r\n                    {analysis.overall.recommendations.map((rec, index) => (\r\n                      <li key={index} className=\"list-group-item\">\r\n                        <i className=\"fas fa-check-circle text-success me-2\"></i>\r\n                        {rec}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"alert alert-info\">\r\n                <i className=\"fas fa-info-circle me-2\"></i>\r\n                This analysis is based on your recorded health metrics. For personalized medical advice,\r\n                please consult with your healthcare provider.\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HealthMetricsAI; ","// Replace the direct OpenAI initialization with a proxy service\r\n\r\n// Define available models for reference\r\nexport const MODELS = {\r\n  GPT4: 'gpt-4o',\r\n  GPT4_VISION: 'gpt-4-vision-preview',\r\n  GPT3_5: 'gpt-3.5-turbo'\r\n};\r\n\r\n// Create a proxy for OpenAI API calls\r\nexport const callOpenAI = async (prompt, options = {}) => {\r\n  try {\r\n    const response = await fetch('https://digihealth-backend.onrender.com/api/analyze-report', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ \r\n        text: prompt,\r\n        ...options \r\n      })\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('API request failed');\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error calling OpenAI API:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// System prompt generator (keep this as is)\r\nexport const generateSystemPrompt = (context = {}) => {\r\n  let prompt = \"You are a medical AI assistant providing health information. \";\r\n  prompt += \"Always clarify you're not a doctor and serious concerns require medical attention.\";\r\n  \r\n  if (context.userProfile) {\r\n    // Add relevant user context\r\n    const { age, gender, conditions = [], medications = [] } = context.userProfile;\r\n    \r\n    prompt += \"\\n\\nUser context:\";\r\n    if (age) prompt += `\\nAge: ${age}`;\r\n    if (gender) prompt += `\\nGender: ${gender}`;\r\n    if (conditions.length) prompt += `\\nConditions: ${conditions.join(', ')}`;\r\n    if (medications.length) prompt += `\\nMedications: ${medications.join(', ')}`;\r\n  }\r\n  \r\n  return prompt;\r\n};","import React, { useState, useRef } from 'react';\nimport { supabase } from '../../utils/supabaseClient'; // Make sure this path is correct\nimport Spinner from '../../components/Spinner'; // Make sure this path is correct\nimport { callOpenAI, MODELS } from '../../utils/openai';\nimport './MedicalImageAnalysis.css';\n\nconst MedicalImageAnalysis = () => {\n  const [image, setImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const [analysisType, setAnalysisType] = useState('general');\n  const fileInputRef = useRef(null);\n\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    // Validate file type\n    if (!file.type.match('image.*')) {\n      setNotification({\n        type: 'danger',\n        message: 'Please upload a valid image file (JPEG, PNG, etc.)'\n      });\n      return;\n    }\n\n    setImage(file);\n    setImagePreview(URL.createObjectURL(file));\n    setResults(null);\n    setError(null);\n  };\n\n  const resetForm = () => {\n    setImage(null);\n    setImagePreview(null);\n    setResults(null);\n    setError(null);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const getAnalysisPrompt = (type) => {\n    const basePrompt = \"You are a medical imaging specialist AI. Analyze this medical image and provide detailed observations. \";\n    \n    const prompts = {\n      'general': basePrompt + \"Describe what you see, potential abnormalities, and possible conditions it might indicate. Be thorough but cautious about making definitive diagnoses.\",\n      'skin': basePrompt + \"This is a skin-related image. Describe the lesion/condition characteristics, possible differential diagnoses, and any concerning features. Mention if further evaluation is recommended.\",\n      'xray': basePrompt + \"This is an X-ray image. Describe the visible structures, any abnormalities, potential fractures, lesions, or other findings. Interpret the image as thoroughly as possible.\",\n      'scan': basePrompt + \"This is a CT/MRI scan. Describe the visible anatomical structures, any abnormalities, masses, inflammations, or other noteworthy findings. Provide detailed analysis of tissue characteristics.\",\n      'pathology': basePrompt + \"This is a pathology slide. Describe the cellular structures, any abnormal cells, patterns, or markers of disease. Analyze tissue architecture and cellular morphology.\"\n    };\n    \n    return prompts[type] || prompts['general'];\n  };\n\n  const getDisclaimer = (type) => {\n    const baseDisclaimer = \"This AI analysis is not a substitute for professional medical diagnosis. Please consult with a healthcare provider for proper evaluation and diagnosis.\";\n    \n    const disclaimers = {\n      'skin': baseDisclaimer + \" Skin conditions particularly require in-person examination as many can appear similar in images.\",\n      'xray': baseDisclaimer + \" X-ray interpretation requires board-certified radiologists for official diagnosis.\",\n      'scan': baseDisclaimer + \" CT/MRI scans are complex and require specialized medical training to properly diagnose.\",\n      'pathology': baseDisclaimer + \" Pathology diagnosis requires microscopic examination by a certified pathologist.\"\n    };\n    \n    return disclaimers[type] || baseDisclaimer;\n  };\n\n  const analyzeImage = async () => {\n    if (!image) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Convert image to base64\n      const reader = new FileReader();\n      reader.readAsDataURL(image);\n      \n      reader.onloadend = async () => {\n        const base64Image = reader.result;\n        \n        try {\n          // Create a prompt for image analysis\n          const prompt = `\n            You are a medical imaging specialist AI. Analyze this medical image and provide detailed observations.\n            ${getAnalysisPrompt(analysisType)}\n            \n            Please provide your analysis in this format:\n            {\n              \"findings\": [list of key findings],\n              \"interpretation\": [detailed analysis],\n              \"recommendations\": [any recommended follow-ups],\n              \"differential_diagnosis\": [possible conditions to consider]\n            }\n          `;\n\n          // Call your backend API instead of OpenAI directly\n          const result = await callOpenAI(prompt, {\n            imageUrl: base64Image,\n            analysisType: analysisType,\n            isImageAnalysis: true\n          });\n          \n          // Save results\n          setResults({\n            analysis: result.interpretation || result,\n            findings: result.findings || [],\n            recommendations: result.recommendations || [],\n            date: new Date().toISOString(),\n            disclaimer: getDisclaimer(analysisType),\n            imageType: analysisType\n          });\n          \n          // Save analysis to database\n          saveAnalysisToDatabase(result.interpretation || result);\n          \n        } catch (apiError) {\n          console.error('API error:', apiError);\n          setError('Error analyzing image. Please try again or use a different image.');\n        }\n        \n        setLoading(false);\n      };\n      \n      reader.onerror = () => {\n        setError('Error reading image file. Please try again with a different image.');\n        setLoading(false);\n      };\n      \n    } catch (e) {\n      console.error('Error processing image:', e);\n      setError('Error processing image. Please try again.');\n      setLoading(false);\n    }\n  };\n\n  const saveAnalysisToDatabase = async (analysisText) => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) return;\n      \n      // Save image to storage\n      const fileExt = image.name.split('.').pop();\n      const fileName = `${user.id}/${Date.now()}.${fileExt}`;\n      const { error: uploadError } = await supabase.storage\n        .from('medical-images')\n        .upload(fileName, image);\n        \n      if (uploadError) throw uploadError;\n      \n      // Get image URL\n      const { data: { publicUrl } } = supabase.storage\n        .from('medical-images')\n        .getPublicUrl(fileName);\n      \n      // Save analysis to database\n      await supabase\n        .from('image_analyses')\n        .insert({\n          user_id: user.id,\n          image_url: publicUrl,\n          analysis_type: analysisType,\n          analysis_result: analysisText,\n          created_at: new Date().toISOString()\n        });\n        \n    } catch (error) {\n      console.error('Error saving analysis:', error);\n      // Continue anyway since this is just for saving history\n    }\n  };\n\n  return (\n    <div className=\"container-fluid py-4\">\n      {notification && (\n        <div className={`alert alert-${notification.type} alert-dismissible fade show`}>\n          {notification.message}\n          <button \n            type=\"button\" \n            className=\"btn-close\" \n            onClick={() => setNotification(null)}\n          ></button>\n        </div>\n      )}\n\n      <h1 className=\"mb-4\">Medical Image Analysis</h1>\n      \n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <div className=\"card shadow-sm mb-4\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Upload Medical Image</h5>\n              <p className=\"card-text text-muted\">\n                Upload a medical image for AI analysis. \n                Supported types: X-rays, skin conditions, CT/MRI scans, pathology slides.\n              </p>\n              \n              <div className=\"mb-3\">\n                <label htmlFor=\"analysisType\" className=\"form-label\">Analysis Type</label>\n                <select \n                  id=\"analysisType\"\n                  className=\"form-select\"\n                  value={analysisType}\n                  onChange={(e) => setAnalysisType(e.target.value)}\n                >\n                  <option value=\"general\">General Medical Image Analysis</option>\n                  <option value=\"skin\">Skin Condition/Lesion</option>\n                  <option value=\"xray\">X-Ray</option>\n                  <option value=\"scan\">CT/MRI Scan</option>\n                  <option value=\"pathology\">Pathology Slide</option>\n                </select>\n              </div>\n              \n              <div className=\"mb-3\">\n                <label htmlFor=\"imageUpload\" className=\"form-label\">Upload Image</label>\n                <input\n                  type=\"file\"\n                  className=\"form-control\"\n                  id=\"imageUpload\"\n                  accept=\"image/*\"\n                  onChange={handleImageChange}\n                  ref={fileInputRef}\n                />\n              </div>\n              \n              {imagePreview && (\n                <div className=\"mb-3 text-center\">\n                  <img \n                    src={imagePreview} \n                    alt=\"Preview\" \n                    className=\"img-fluid mb-2 border rounded\"\n                    style={{ maxHeight: '300px' }} \n                  />\n                </div>\n              )}\n              \n              <div className=\"d-grid gap-2\">\n                <button \n                  className=\"btn btn-primary\" \n                  onClick={analyzeImage}\n                  disabled={!image || loading}\n                >\n                  {loading ? <><Spinner size=\"sm\" /> Analyzing...</> : 'Analyze Image'}\n                </button>\n                <button \n                  className=\"btn btn-outline-secondary\" \n                  onClick={resetForm}\n                  disabled={loading}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"col-lg-6\">\n          {loading ? (\n            <div className=\"card shadow-sm mb-4\">\n              <div className=\"card-body text-center py-5\">\n                <Spinner />\n                <p className=\"mt-3\">Analyzing your medical image...</p>\n                <p className=\"text-muted small\">This may take a moment</p>\n              </div>\n            </div>\n          ) : results ? (\n            <div className=\"card shadow-sm mb-4\">\n              <div className=\"card-header bg-primary text-white\">\n                <h5 className=\"card-title mb-0\">Analysis Results</h5>\n              </div>\n              <div className=\"card-body\">\n                <div className=\"analysis-content\">\n                  {results.analysis.split('\\n').map((paragraph, idx) => (\n                    paragraph ? <p key={idx}>{paragraph}</p> : <br key={idx} />\n                  ))}\n                </div>\n                <div className=\"alert alert-warning mt-3\">\n                  <strong>Important Disclaimer:</strong> {results.disclaimer}\n                </div>\n              </div>\n              <div className=\"card-footer text-muted\">\n                <small>Analysis generated on {new Date(results.date).toLocaleString()}</small>\n              </div>\n            </div>\n          ) : error ? (\n            <div className=\"alert alert-danger\">\n              {error}\n            </div>\n          ) : (\n            <div className=\"card shadow-sm mb-4\">\n              <div className=\"card-body p-5 text-center\">\n                <div className=\"text-muted mb-3\">\n                  <i className=\"fas fa-microscope fa-3x\"></i>\n                </div>\n                <h5>Upload an image to see analysis results</h5>\n                <p className=\"text-muted\">\n                  The AI will analyze your medical image and provide insights.\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"mt-4\">\n        <div className=\"card shadow-sm\">\n          <div className=\"card-body\">\n            <h5>About Medical Image Analysis</h5>\n            <p>\n              This feature uses AI to analyze various types of medical images. \n              Please note that this is not a substitute for professional medical diagnosis.\n              Always consult with a healthcare provider for proper evaluation.\n            </p>\n            <div className=\"row g-4 mt-2\">\n              <div className=\"col-md-6\">\n                <h6>Common Uses</h6>\n                <ul>\n                  <li>Preliminary analysis of skin conditions</li>\n                  <li>Identifying potential areas of concern in X-rays</li>\n                  <li>Understanding CT/MRI scan information</li>\n                  <li>Analyzing pathology slides</li>\n                </ul>\n              </div>\n              <div className=\"col-md-6\">\n                <h6>Limitations</h6>\n                <ul>\n                  <li>Not a replacement for professional diagnosis</li>\n                  <li>Quality of analysis depends on image quality</li>\n                  <li>May not detect all conditions or abnormalities</li>\n                  <li>Should be used for educational purposes only</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MedicalImageAnalysis;","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { supabase } from '../../utils/main';\r\nimport { callOpenAI } from '../../utils/openai'; // Use our proxy utility instead of direct OpenAI\r\nimport Spinner from '../../components/Spinner';\r\nimport './HealthRecommendations.css';\r\n\r\nconst HealthRecommendations = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [userId, setUserId] = useState(null);\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const [recommendations, setRecommendations] = useState(null);\r\n  const [history, setHistory] = useState([]);\r\n  const [selectedFocus, setSelectedFocus] = useState('general');\r\n  const [additionalContext, setAdditionalContext] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Focus area options\r\n  const focusAreas = [\r\n    { id: 'general', label: 'General Health' },\r\n    { id: 'nutrition', label: 'Nutrition & Diet' },\r\n    { id: 'fitness', label: 'Fitness & Exercise' },\r\n    { id: 'sleep', label: 'Sleep Improvement' },\r\n    { id: 'stress', label: 'Stress Management' },\r\n    { id: 'chronic', label: 'Chronic Condition Management' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const checkUser = async () => {\r\n      try {\r\n        const { data: { user } } = await supabase.auth.getUser();\r\n        if (!user) {\r\n          navigate('/login');\r\n          return;\r\n        }\r\n        setUserId(user.id);\r\n        fetchUserProfile(user.id);\r\n        fetchRecommendationHistory(user.id);\r\n      } catch (error) {\r\n        console.error('Error checking authentication', error);\r\n      }\r\n    };\r\n\r\n    checkUser();\r\n  }, [navigate]);\r\n\r\n  const fetchUserProfile = async (userId) => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('profiles')\r\n        .select(`\r\n          first_name, \r\n          last_name, \r\n          date_of_birth, \r\n          gender, \r\n          height, \r\n          weight,\r\n          user_conditions (\r\n            condition_name\r\n          ),\r\n          user_medications (\r\n            medication_name,\r\n            dosage\r\n          ),\r\n          health_metrics (*)\r\n        `)\r\n        .eq('id', userId)\r\n        .single();\r\n\r\n      if (error) throw error;\r\n\r\n      // Calculate BMI if height and weight are available\r\n      let bmi = null;\r\n      if (data.height && data.weight) {\r\n        const heightInMeters = data.height / 100;\r\n        bmi = (data.weight / (heightInMeters * heightInMeters)).toFixed(1);\r\n      }\r\n\r\n      setUserProfile({\r\n        ...data,\r\n        bmi,\r\n        conditions: data.user_conditions?.map(c => c.condition_name) || [],\r\n        medications: data.user_medications?.map(m => m.medication_name) || []\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching profile', error);\r\n    }\r\n  };\r\n\r\n  const fetchRecommendationHistory = async (userId) => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('health_recommendations')\r\n        .select('*')\r\n        .eq('user_id', userId)\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) throw error;\r\n      setHistory(data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching recommendation history', error);\r\n    }\r\n  };\r\n\r\n  const generateRecommendations = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    if (!userProfile) {\r\n      setError('Please complete your health profile first.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Create a prompt for recommendations\r\n      const prompt = `\r\n        You are a health and wellness advisor. Based on the following user profile, provide personalized health recommendations.\r\n        \r\n        User Profile:\r\n        - Age: ${calculateAge(userProfile.date_of_birth)}\r\n        - Gender: ${userProfile.gender || 'Not specified'}\r\n        - Height: ${userProfile.height ? `${userProfile.height} cm` : 'Not provided'}\r\n        - Weight: ${userProfile.weight ? `${userProfile.weight} kg` : 'Not provided'}\r\n        - BMI: ${userProfile.bmi || 'Not calculated'}\r\n        ${userProfile.conditions.length > 0 ? `- Medical Conditions: ${userProfile.conditions.join(', ')}` : '- No medical conditions specified'}\r\n        ${userProfile.medications.length > 0 ? `- Medications: ${userProfile.medications.join(', ')}` : '- No medications specified'}\r\n        \r\n        Focus area: ${selectedFocus}\r\n        \r\n        ${additionalContext ? `Additional context: ${additionalContext}` : ''}\r\n        \r\n        Please provide detailed health recommendations specific to the focus area. Include:\r\n        1. A summary of key recommendations\r\n        2. Detailed explanations and guidance\r\n        3. Specific actionable steps\r\n        4. Any relevant warnings or precautions\r\n        \r\n        Format your response as a JSON object with these keys:\r\n        - summary: A brief summary of recommendations (1-2 sentences)\r\n        - recommendations: Array of specific recommendation objects, each with:\r\n          - title: Short title for the recommendation\r\n          - description: Detailed explanation\r\n          - action_steps: Array of specific action steps\r\n        - warnings: Any important precautions or warnings\r\n      `;\r\n\r\n      // Call our backend API through the utility function\r\n      const result = await callOpenAI(prompt);\r\n      \r\n      // Store the result \r\n      const newRecommendations = {\r\n        focus_area: selectedFocus,\r\n        summary: result.summary || '',\r\n        recommendations: result.recommendations || [],\r\n        warnings: result.warnings || [],\r\n        created_at: new Date().toISOString()\r\n      };\r\n      \r\n      setRecommendations(newRecommendations);\r\n      \r\n      // Save to database\r\n      await saveRecommendationsToDatabase(newRecommendations);\r\n      \r\n      // Refresh history\r\n      fetchRecommendationHistory(userId);\r\n\r\n    } catch (error) {\r\n      console.error('Error generating recommendations:', error);\r\n      setError('Failed to generate recommendations. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const saveRecommendationsToDatabase = async (recommendations) => {\r\n    try {\r\n      const { error } = await supabase\r\n        .from('health_recommendations')\r\n        .insert([{\r\n          user_id: userId,\r\n          focus_area: recommendations.focus_area,\r\n          recommendations: JSON.stringify(recommendations),\r\n          created_at: recommendations.created_at\r\n        }]);\r\n        \r\n      if (error) throw error;\r\n    } catch (error) {\r\n      console.error('Error saving recommendations:', error);\r\n      // Continue anyway - user still has the recommendations displayed\r\n    }\r\n  };\r\n\r\n  const calculateAge = (dateOfBirth) => {\r\n    if (!dateOfBirth) return 'Unknown';\r\n    \r\n    const today = new Date();\r\n    const birthDate = new Date(dateOfBirth);\r\n    let age = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n    \r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age--;\r\n    }\r\n    \r\n    return age;\r\n  };\r\n\r\n  const viewHistoricalRecommendation = async (id) => {\r\n    try {\r\n      const item = history.find(h => h.id === id);\r\n      if (item) {\r\n        setRecommendations(JSON.parse(item.recommendations));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error viewing historical recommendation:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container py-4\">\r\n      <h1 className=\"mb-4\">AI Health Recommendations</h1>\r\n      \r\n      {error && (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          {error}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"row\">\r\n        <div className=\"col-lg-4 mb-4\">\r\n          <div className=\"card shadow-sm\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">Generate Recommendations</h5>\r\n              \r\n              {!userProfile ? (\r\n                <div className=\"alert alert-warning\">\r\n                  Please complete your health profile to receive personalized recommendations.\r\n                  <div className=\"mt-3\">\r\n                    <button \r\n                      className=\"btn btn-primary\"\r\n                      onClick={() => navigate('/profile')}\r\n                    >\r\n                      Complete Profile\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"focusArea\" className=\"form-label\">Focus Area</label>\r\n                    <select\r\n                      id=\"focusArea\"\r\n                      className=\"form-select\"\r\n                      value={selectedFocus}\r\n                      onChange={(e) => setSelectedFocus(e.target.value)}\r\n                      disabled={loading}\r\n                    >\r\n                      {focusAreas.map(area => (\r\n                        <option key={area.id} value={area.id}>{area.label}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  \r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"additionalContext\" className=\"form-label\">Additional Context (Optional)</label>\r\n                    <textarea\r\n                      id=\"additionalContext\"\r\n                      className=\"form-control\"\r\n                      rows=\"3\"\r\n                      placeholder=\"Add any specific concerns or goals...\"\r\n                      value={additionalContext}\r\n                      onChange={(e) => setAdditionalContext(e.target.value)}\r\n                      disabled={loading}\r\n                    ></textarea>\r\n                  </div>\r\n                  \r\n                  <button\r\n                    className=\"btn btn-primary w-100\"\r\n                    onClick={generateRecommendations}\r\n                    disabled={loading}\r\n                  >\r\n                    {loading ? (\r\n                      <>\r\n                        <Spinner size=\"sm\" /> Generating...\r\n                      </>\r\n                    ) : (\r\n                      'Generate Recommendations'\r\n                    )}\r\n                  </button>\r\n                </>\r\n              )}\r\n              \r\n              {history.length > 0 && (\r\n                <div className=\"mt-4\">\r\n                  <h6>Previous Recommendations</h6>\r\n                  <div className=\"list-group\" style={{ maxHeight: '250px', overflowY: 'auto' }}>\r\n                    {history.map(item => (\r\n                      <button\r\n                        key={item.id}\r\n                        className=\"list-group-item list-group-item-action d-flex justify-content-between align-items-center\"\r\n                        onClick={() => viewHistoricalRecommendation(item.id)}\r\n                      >\r\n                        <div>\r\n                          <div>{focusAreas.find(fa => fa.id === item.focus_area)?.label || item.focus_area}</div>\r\n                          <small className=\"text-muted\">\r\n                            {new Date(item.created_at).toLocaleDateString()}\r\n                          </small>\r\n                        </div>\r\n                        <span className=\"badge bg-primary rounded-pill\">View</span>\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"col-lg-8\">\r\n          {loading ? (\r\n            <div className=\"card shadow-sm\">\r\n              <div className=\"card-body text-center py-5\">\r\n                <Spinner />\r\n                <p className=\"mt-3\">Generating personalized health recommendations...</p>\r\n                <p className=\"text-muted small\">This may take a moment as our AI analyzes your health profile</p>\r\n              </div>\r\n            </div>\r\n          ) : recommendations ? (\r\n            <div className=\"card shadow-sm\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h5 className=\"mb-0\">\r\n                  {focusAreas.find(fa => fa.id === recommendations.focus_area)?.label || recommendations.focus_area} Recommendations\r\n                </h5>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <p className=\"lead\">{recommendations.summary}</p>\r\n                \r\n                <div className=\"recommendations-list mt-4\">\r\n                  {recommendations.recommendations.map((rec, index) => (\r\n                    <div key={index} className=\"recommendation-item mb-4\">\r\n                      <h5>{rec.title}</h5>\r\n                      <p>{rec.description}</p>\r\n                      \r\n                      {rec.action_steps?.length > 0 && (\r\n                        <div className=\"action-steps\">\r\n                          <h6>Action Steps:</h6>\r\n                          <ul>\r\n                            {rec.action_steps.map((step, idx) => (\r\n                              <li key={idx}>{step}</li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                \r\n                {recommendations.warnings && (\r\n                  <div className=\"alert alert-warning mt-3\">\r\n                    <h6>Important Notes:</h6>\r\n                    <p>{recommendations.warnings}</p>\r\n                  </div>\r\n                )}\r\n                \r\n                <div className=\"disclaimer mt-4\">\r\n                  <small className=\"text-muted\">\r\n                    <strong>Disclaimer:</strong> These recommendations are generated by AI based on your profile information. \r\n                    They are not a substitute for professional medical advice. Always consult with healthcare providers before \r\n                    making significant changes to your health regimen.\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-footer text-muted\">\r\n                <small>Generated on {new Date(recommendations.created_at).toLocaleString()}</small>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"card shadow-sm\">\r\n              <div className=\"card-body p-5 text-center\">\r\n                <div className=\"text-muted mb-3\">\r\n                  <i className=\"fas fa-lightbulb fa-3x\"></i>\r\n                </div>\r\n                <h5>Select a focus area and generate recommendations</h5>\r\n                <p className=\"text-muted\">\r\n                  Our AI will analyze your health profile and provide personalized recommendations\r\n                  based on your specific needs and goals.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"card shadow-sm mt-4\">\r\n            <div className=\"card-body\">\r\n              <h5>How We Create Your Recommendations</h5>\r\n              <p>\r\n                Our AI-powered recommendation system uses multiple data points from your health profile to generate personalized health guidance:\r\n              </p>\r\n              <div className=\"row g-4\">\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"d-flex mb-2\">\r\n                    <div className=\"me-3 text-primary\">\r\n                      <i className=\"fas fa-user-circle fa-lg\"></i>\r\n                    </div>\r\n                    <div>\r\n                      <h6>Your Profile</h6>\r\n                      <p className=\"text-muted small mb-0\">\r\n                        Age, gender, height, weight, and BMI are used to tailor recommendations to your body type and demographics.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"d-flex mb-2\">\r\n                    <div className=\"me-3 text-primary\">\r\n                      <i className=\"fas fa-notes-medical fa-lg\"></i>\r\n                    </div>\r\n                    <div>\r\n                      <h6>Medical Conditions</h6>\r\n                      <p className=\"text-muted small mb-0\">\r\n                        Any conditions listed in your profile are considered to ensure recommendations are appropriate and safe.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"d-flex mb-2\">\r\n                    <div className=\"me-3 text-primary\">\r\n                      <i className=\"fas fa-chart-line fa-lg\"></i>\r\n                    </div>\r\n                    <div>\r\n                      <h6>Health Parameters</h6>\r\n                      <p className=\"text-muted small mb-0\">\r\n                        Your recorded health metrics like blood pressure, cholesterol, and glucose levels inform specific health guidance.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"d-flex\">\r\n                    <div className=\"me-3 text-primary\">\r\n                      <i className=\"fas fa-brain fa-lg\"></i>\r\n                    </div>\r\n                    <div>\r\n                      <h6>AI Analysis</h6>\r\n                      <p className=\"text-muted small mb-0\">\r\n                        Advanced AI models analyze your complete health profile to generate evidence-based recommendations specific to your selected focus area.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"alert alert-info mt-3 mb-0\">\r\n                <small>\r\n                  <strong>Privacy Note:</strong> Your health data is processed securely. We use anonymized data when communicating with AI services to ensure your privacy is protected.\r\n                </small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HealthRecommendations;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { AuthProvider } from './contexts/AuthContext';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport DashboardLayout from './components/DashboardLayout';\nimport Navbar from './components/Navbar';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Dashboard from './pages/Dashboard';\nimport HealthOverview from './pages/HealthOverview';\nimport MedicalHistoryPage from './pages/MedicalHistoryPage';\nimport ChronicDiseaseManagementPage from './pages/ChronicDiseaseManagementPage';\nimport VaccinationHistoryPage from './pages/VaccinationHistoryPage';\nimport MedicationTracker from './pages/MedicationTracker';\nimport HealthAnalyticsPage from './pages/HealthAnalyticsPage';\nimport UpcomingAppointmentsPage from './pages/UpcomingAppointmentsPage';\nimport AppointmentHistoryPage from './pages/AppointmentHistoryPage';\nimport TelehealthConsultationsPage from './pages/TelehealthConsultationsPage';\nimport AppointmentRemindersPage from './pages/AppointmentRemindersPage';\nimport HelpCenterPage from './pages/HelpCenterPage';\nimport ContactSupportPage from './pages/ContactSupportPage';\nimport LiveChat from './pages/LiveChat';\nimport ProfilePage from './pages/ProfilePage';\nimport SecuritySettings from './pages/SecuritySettings';\nimport DataBackup from './pages/DataBackup';\nimport DatabaseSetup from './pages/DatabaseSetup';\nimport HealthMetricsVisualizer from './components/HealthMetricsVisualizer';\nimport MedicalImageAnalyzer from './components/MedicalImageAnalyzer';\nimport HealthAssistant from './components/HealthAssistant';\nimport AIInsightsDashboard from './components/AIInsightsDashboard';\nimport HealthMetricsAI from './pages/ai/HealthMetricsAI';\nimport ImageAnalysisAI from './pages/ai/ImageAnalysisAI';\nimport HealthAssistantAI from './pages/ai/HealthAssistantAI';\nimport SymptomCheckerAI from './pages/ai/SymptomCheckerAI';\nimport MedicalImageAnalysis from './pages/ai/MedicalImageAnalysis';\nimport HealthRecommendations from './pages/ai/HealthRecommendations';\n\nfunction App() {\n  return (\n    <Router \n      basename=\"/DiGiHealthAdv\"\n      future={{\n        v7_startTransition: true,\n        v7_relativeSplatPath: true\n      }}\n    >\n      <AuthProvider>\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n          theme=\"colored\"\n          transition=\"Bounce\"\n          limit={3}\n        />\n        <Routes>\n          <Route path=\"/\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"/dashboard\" element={<DashboardLayout><Dashboard /></DashboardLayout>} />\n          <Route path=\"/health-overview\" element={<DashboardLayout><HealthOverview /></DashboardLayout>} />\n          <Route path=\"/medical-history\" element={<DashboardLayout><MedicalHistoryPage /></DashboardLayout>} />\n          <Route path=\"/chronic-disease-management\" element={<DashboardLayout><ChronicDiseaseManagementPage /></DashboardLayout>} />\n          <Route path=\"/vaccination-history\" element={<DashboardLayout><VaccinationHistoryPage /></DashboardLayout>} />\n          <Route path=\"/medication-tracker\" element={<DashboardLayout><MedicationTracker /></DashboardLayout>} />\n          <Route path=\"/health-analytics\" element={<DashboardLayout><HealthAnalyticsPage /></DashboardLayout>} />\n          <Route path=\"/appointments/upcoming\" element={<DashboardLayout><UpcomingAppointmentsPage /></DashboardLayout>} />\n          <Route path=\"/appointments/history\" element={<DashboardLayout><AppointmentHistoryPage /></DashboardLayout>} />\n          <Route path=\"/appointments/telehealth\" element={<DashboardLayout><TelehealthConsultationsPage /></DashboardLayout>} />\n          <Route path=\"/appointments/reminders\" element={<DashboardLayout><AppointmentRemindersPage /></DashboardLayout>} />\n          <Route path=\"/help-center\" element={<DashboardLayout><HelpCenterPage /></DashboardLayout>} />\n          <Route path=\"/support/contact\" element={<DashboardLayout><ContactSupportPage /></DashboardLayout>} />\n          <Route path=\"/support/chat\" element={<DashboardLayout><LiveChat /></DashboardLayout>} />\n          <Route path=\"/profile\" element={<DashboardLayout><ProfilePage /></DashboardLayout>} />\n          <Route path=\"/settings/security\" element={<DashboardLayout><SecuritySettings /></DashboardLayout>} />\n          <Route path=\"/settings/backup\" element={<DashboardLayout><DataBackup /></DashboardLayout>} />\n          <Route path=\"/admin/database-setup\" element={<DashboardLayout><DatabaseSetup /></DashboardLayout>} />\n          <Route path=\"/health-metrics\" element={<DashboardLayout><HealthMetricsVisualizer /></DashboardLayout>} />\n          <Route path=\"/image-analysis\" element={<DashboardLayout><MedicalImageAnalyzer /></DashboardLayout>} />\n          <Route path=\"/health-assistant\" element={<DashboardLayout><HealthAssistant /></DashboardLayout>} />\n          <Route path=\"/ai-insights\" element={<DashboardLayout><AIInsightsDashboard /></DashboardLayout>} />\n          <Route path=\"/health-metrics/upload\" element={<DashboardLayout><HealthMetricsVisualizer mode=\"upload\" /></DashboardLayout>} />\n          <Route path=\"/image-analysis/history\" element={<DashboardLayout><MedicalImageAnalyzer mode=\"history\" /></DashboardLayout>} />\n          <Route path=\"/health-assistant/recommendations\" element={<DashboardLayout><HealthAssistant mode=\"recommendations\" /></DashboardLayout>} />\n          <Route path=\"/ai/health-metrics\" element={<DashboardLayout><HealthMetricsAI /></DashboardLayout>} />\n          <Route path=\"/ai/image-analysis\" element={<DashboardLayout><MedicalImageAnalysis /></DashboardLayout>} />\n          <Route path=\"/ai/health-assistant\" element={<DashboardLayout><HealthAssistant /></DashboardLayout>} />\n          <Route path=\"/ai/health-recommendations\" element={<DashboardLayout><HealthRecommendations /></DashboardLayout>} />\n          <Route path=\"/ai/symptom-checker\" element={<DashboardLayout><HealthAssistant mode=\"symptoms\" /></DashboardLayout>} />\n          <Route path=\"/ai/image-analysis\" element={<MedicalImageAnalysis />} />\n          <Route path=\"/ai/health-assistant\" element={<HealthAssistant />} />\n          <Route path=\"/ai/health-recommendations\" element={<HealthRecommendations />} />\n        </Routes>\n      </AuthProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; See https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n} ","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals; ","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport './styles/buttons.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorker';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}